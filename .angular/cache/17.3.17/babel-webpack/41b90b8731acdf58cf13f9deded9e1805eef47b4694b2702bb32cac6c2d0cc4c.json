{"ast":null,"code":"import _asyncToGenerator from \"D:/Project/github-teams/teams-app-new/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { getClient } from \"@azure-rest/core-client\";\nimport { createDefaultHttpClient, createHttpHeaders, createPipelineRequest } from \"@azure/core-rest-pipeline\";\nconst TeamsExtensionScopePrefix = \"https://auth.msft.communication.azure.com/\";\nconst CommunicationClientsScopePrefix = \"https://communication.azure.com/clients/\";\nconst TeamsExtensionEndpoint = \"/access/teamsExtension/:exchangeAccessToken\";\nconst TeamsExtensionApiVersion = \"2025-06-30\";\nconst CommunicationClientsEndpoint = \"/access/entra/:exchangeAccessToken\";\nconst CommunicationClientsApiVersion = \"2025-03-02-preview\";\n/**\n * Represents a credential that exchanges an Entra token for an Azure Communication Services (ACS) token, enabling access to ACS resources.\n */\nexport class EntraTokenCredential {\n  constructor(options) {\n    this.options = options;\n    this.result = {\n      entraToken: undefined,\n      acsToken: {\n        token: \"\",\n        expiresOnTimestamp: 0\n      }\n    };\n    this.client = getClient(options.resourceEndpoint);\n    this.httpClient = createDefaultHttpClient();\n    this.options = options;\n    this.options.scopes = this.options.scopes || [\"https://communication.azure.com/clients/.default\"];\n    // immediately fetch the token to pre-warm\n    this.isPending = this.getToken();\n  }\n  getToken(options) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      var _a;\n      if ((_a = options === null || options === void 0 ? void 0 : options.abortSignal) === null || _a === void 0 ? void 0 : _a.aborted) {\n        return {\n          token: \"\",\n          expiresOnTimestamp: 0\n        };\n      }\n      // we're awaiting the token fetch, so we don't want to start another one\n      // however, we're ignoring the new abortSignal, unfortunately\n      if (!_this.isPending) {\n        _this.isPending = _this.getTokenInternal(options);\n      }\n      try {\n        yield _this.isPending;\n      } finally {\n        _this.isPending = null;\n      }\n      return _this.result.acsToken;\n    })();\n  }\n  getTokenInternal(options) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const getTokenOptions = (options === null || options === void 0 ? void 0 : options.abortSignal) ? {\n        abortSignal: options.abortSignal\n      } : undefined;\n      const token = yield _this2.options.tokenCredential.getToken(_this2.options.scopes ? _this2.options.scopes : [\"https://communication.azure.com/clients/.default\"], getTokenOptions);\n      const currentDateTime = new Date();\n      const tokenExpiresOn = new Date(_this2.result.acsToken.expiresOnTimestamp);\n      if (token === null) {\n        _this2.result = {\n          entraToken: undefined,\n          acsToken: {\n            token: \"\",\n            expiresOnTimestamp: 0\n          }\n        };\n      } else if (_this2.result.acsToken.token === \"\" || token.token !== _this2.result.entraToken || tokenExpiresOn < currentDateTime) {\n        const acsToken = yield _this2.exchangeEntraToken(_this2.options.resourceEndpoint, token.token, getTokenOptions);\n        _this2.result = {\n          entraToken: token.token,\n          acsToken\n        };\n      }\n      return _this2.result.acsToken;\n    })();\n  }\n  dispose() {\n    this.result = {\n      entraToken: undefined,\n      acsToken: {\n        token: \"\",\n        expiresOnTimestamp: 0\n      }\n    };\n  }\n  exchangeEntraToken(resourceEndpoint, entraToken, options) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const request = createPipelineRequest({\n        url: _this3.createRequestUri(resourceEndpoint),\n        method: \"POST\",\n        headers: createHttpHeaders({\n          Authorization: `Bearer ${entraToken}`,\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        }),\n        abortSignal: options === null || options === void 0 ? void 0 : options.abortSignal,\n        body: JSON.stringify({})\n      });\n      const response = yield _this3.client.pipeline.sendRequest(_this3.httpClient, request);\n      if (response.status !== 200 || !response.bodyAsText) {\n        throw new Error(`Service request failed. Status: ${response.status}, Body: ${response.bodyAsText}`);\n      }\n      const json = JSON.parse(response.bodyAsText);\n      return {\n        token: json.accessToken.token,\n        expiresOnTimestamp: Date.parse(json.accessToken.expiresOn)\n      };\n    })();\n  }\n  createRequestUri(resourceEndpoint) {\n    const [endpoint, apiVersion] = this.determineEndpointAndApiVersion();\n    const requestUri = `${resourceEndpoint}${endpoint}?api-version=${apiVersion}`;\n    return requestUri;\n  }\n  determineEndpointAndApiVersion() {\n    if (!this.options.scopes || this.options.scopes.length === 0) {\n      throw new Error(`Scopes validation failed. Ensure all scopes start with either {TeamsExtensionScopePrefix} or {CommunicationClientsScopePrefix}.`);\n    } else if (this.options.scopes.every(scope => scope.startsWith(TeamsExtensionScopePrefix))) {\n      return [TeamsExtensionEndpoint, TeamsExtensionApiVersion];\n    } else if (this.options.scopes.every(scope => scope.startsWith(CommunicationClientsScopePrefix))) {\n      return [CommunicationClientsEndpoint, CommunicationClientsApiVersion];\n    } else {\n      throw new Error(`Scopes validation failed. Ensure all scopes start with either {TeamsExtensionScopePrefix} or {CommunicationClientsScopePrefix}.`);\n    }\n  }\n}","map":{"version":3,"names":["getClient","createDefaultHttpClient","createHttpHeaders","createPipelineRequest","TeamsExtensionScopePrefix","CommunicationClientsScopePrefix","TeamsExtensionEndpoint","TeamsExtensionApiVersion","CommunicationClientsEndpoint","CommunicationClientsApiVersion","EntraTokenCredential","constructor","options","result","entraToken","undefined","acsToken","token","expiresOnTimestamp","client","resourceEndpoint","httpClient","scopes","isPending","getToken","_this","_asyncToGenerator","_a","abortSignal","aborted","getTokenInternal","_this2","getTokenOptions","tokenCredential","currentDateTime","Date","tokenExpiresOn","exchangeEntraToken","dispose","_this3","request","url","createRequestUri","method","headers","Authorization","Accept","body","JSON","stringify","response","pipeline","sendRequest","status","bodyAsText","Error","json","parse","accessToken","expiresOn","endpoint","apiVersion","determineEndpointAndApiVersion","requestUri","length","every","scope","startsWith"],"sources":["D:/Project/github-teams/teams-app-new/node_modules/@azure/communication-common/dist/browser/entraTokenCredential.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { getClient } from \"@azure-rest/core-client\";\nimport { createDefaultHttpClient, createHttpHeaders, createPipelineRequest, } from \"@azure/core-rest-pipeline\";\nconst TeamsExtensionScopePrefix = \"https://auth.msft.communication.azure.com/\";\nconst CommunicationClientsScopePrefix = \"https://communication.azure.com/clients/\";\nconst TeamsExtensionEndpoint = \"/access/teamsExtension/:exchangeAccessToken\";\nconst TeamsExtensionApiVersion = \"2025-06-30\";\nconst CommunicationClientsEndpoint = \"/access/entra/:exchangeAccessToken\";\nconst CommunicationClientsApiVersion = \"2025-03-02-preview\";\n/**\n * Represents a credential that exchanges an Entra token for an Azure Communication Services (ACS) token, enabling access to ACS resources.\n */\nexport class EntraTokenCredential {\n    constructor(options) {\n        this.options = options;\n        this.result = {\n            entraToken: undefined,\n            acsToken: { token: \"\", expiresOnTimestamp: 0 },\n        };\n        this.client = getClient(options.resourceEndpoint);\n        this.httpClient = createDefaultHttpClient();\n        this.options = options;\n        this.options.scopes = this.options.scopes || [\n            \"https://communication.azure.com/clients/.default\",\n        ];\n        // immediately fetch the token to pre-warm\n        this.isPending = this.getToken();\n    }\n    async getToken(options) {\n        var _a;\n        if ((_a = options === null || options === void 0 ? void 0 : options.abortSignal) === null || _a === void 0 ? void 0 : _a.aborted) {\n            return { token: \"\", expiresOnTimestamp: 0 };\n        }\n        // we're awaiting the token fetch, so we don't want to start another one\n        // however, we're ignoring the new abortSignal, unfortunately\n        if (!this.isPending) {\n            this.isPending = this.getTokenInternal(options);\n        }\n        try {\n            await this.isPending;\n        }\n        finally {\n            this.isPending = null;\n        }\n        return this.result.acsToken;\n    }\n    async getTokenInternal(options) {\n        const getTokenOptions = (options === null || options === void 0 ? void 0 : options.abortSignal) ? { abortSignal: options.abortSignal } : undefined;\n        const token = await this.options.tokenCredential.getToken(this.options.scopes\n            ? this.options.scopes\n            : [\"https://communication.azure.com/clients/.default\"], getTokenOptions);\n        const currentDateTime = new Date();\n        const tokenExpiresOn = new Date(this.result.acsToken.expiresOnTimestamp);\n        if (token === null) {\n            this.result = {\n                entraToken: undefined,\n                acsToken: { token: \"\", expiresOnTimestamp: 0 },\n            };\n        }\n        else if (this.result.acsToken.token === \"\" ||\n            token.token !== this.result.entraToken ||\n            tokenExpiresOn < currentDateTime) {\n            const acsToken = await this.exchangeEntraToken(this.options.resourceEndpoint, token.token, getTokenOptions);\n            this.result = {\n                entraToken: token.token,\n                acsToken,\n            };\n        }\n        return this.result.acsToken;\n    }\n    dispose() {\n        this.result = {\n            entraToken: undefined,\n            acsToken: { token: \"\", expiresOnTimestamp: 0 },\n        };\n    }\n    async exchangeEntraToken(resourceEndpoint, entraToken, options) {\n        const request = createPipelineRequest({\n            url: this.createRequestUri(resourceEndpoint),\n            method: \"POST\",\n            headers: createHttpHeaders({\n                Authorization: `Bearer ${entraToken}`,\n                \"Content-Type\": \"application/json\",\n                Accept: \"application/json\",\n            }),\n            abortSignal: options === null || options === void 0 ? void 0 : options.abortSignal,\n            body: JSON.stringify({}),\n        });\n        const response = await this.client.pipeline.sendRequest(this.httpClient, request);\n        if (response.status !== 200 || !response.bodyAsText) {\n            throw new Error(`Service request failed. Status: ${response.status}, Body: ${response.bodyAsText}`);\n        }\n        const json = JSON.parse(response.bodyAsText);\n        return {\n            token: json.accessToken.token,\n            expiresOnTimestamp: Date.parse(json.accessToken.expiresOn),\n        };\n    }\n    createRequestUri(resourceEndpoint) {\n        const [endpoint, apiVersion] = this.determineEndpointAndApiVersion();\n        const requestUri = `${resourceEndpoint}${endpoint}?api-version=${apiVersion}`;\n        return requestUri;\n    }\n    determineEndpointAndApiVersion() {\n        if (!this.options.scopes || this.options.scopes.length === 0) {\n            throw new Error(`Scopes validation failed. Ensure all scopes start with either {TeamsExtensionScopePrefix} or {CommunicationClientsScopePrefix}.`);\n        }\n        else if (this.options.scopes.every((scope) => scope.startsWith(TeamsExtensionScopePrefix))) {\n            return [TeamsExtensionEndpoint, TeamsExtensionApiVersion];\n        }\n        else if (this.options.scopes.every((scope) => scope.startsWith(CommunicationClientsScopePrefix))) {\n            return [CommunicationClientsEndpoint, CommunicationClientsApiVersion];\n        }\n        else {\n            throw new Error(`Scopes validation failed. Ensure all scopes start with either {TeamsExtensionScopePrefix} or {CommunicationClientsScopePrefix}.`);\n        }\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _asyncToGenerator from \"D:/Project/github-teams/teams-app-new/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * The programmatic identifier of the setClientRequestIdPolicy.\n */\nexport const setClientRequestIdPolicyName = \"setClientRequestIdPolicy\";\n/**\n * Each PipelineRequest gets a unique id upon creation.\n * This policy passes that unique id along via an HTTP header to enable better\n * telemetry and tracing.\n * @param requestIdHeaderName - The name of the header to pass the request ID to.\n */\nexport function setClientRequestIdPolicy(requestIdHeaderName = \"x-ms-client-request-id\") {\n  return {\n    name: setClientRequestIdPolicyName,\n    sendRequest(request, next) {\n      return _asyncToGenerator(function* () {\n        if (!request.headers.has(requestIdHeaderName)) {\n          request.headers.set(requestIdHeaderName, request.requestId);\n        }\n        return next(request);\n      })();\n    }\n  };\n}","map":{"version":3,"names":["setClientRequestIdPolicyName","setClientRequestIdPolicy","requestIdHeaderName","name","sendRequest","request","next","_asyncToGenerator","headers","has","set","requestId"],"sources":["D:/Project/github-teams/teams-app-new/node_modules/@azure/core-rest-pipeline/dist/browser/policies/setClientRequestIdPolicy.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * The programmatic identifier of the setClientRequestIdPolicy.\n */\nexport const setClientRequestIdPolicyName = \"setClientRequestIdPolicy\";\n/**\n * Each PipelineRequest gets a unique id upon creation.\n * This policy passes that unique id along via an HTTP header to enable better\n * telemetry and tracing.\n * @param requestIdHeaderName - The name of the header to pass the request ID to.\n */\nexport function setClientRequestIdPolicy(requestIdHeaderName = \"x-ms-client-request-id\") {\n    return {\n        name: setClientRequestIdPolicyName,\n        async sendRequest(request, next) {\n            if (!request.headers.has(requestIdHeaderName)) {\n                request.headers.set(requestIdHeaderName, request.requestId);\n            }\n            return next(request);\n        },\n    };\n}\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,4BAA4B,GAAG,0BAA0B;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,wBAAwBA,CAACC,mBAAmB,GAAG,wBAAwB,EAAE;EACrF,OAAO;IACHC,IAAI,EAAEH,4BAA4B;IAC5BI,WAAWA,CAACC,OAAO,EAAEC,IAAI,EAAE;MAAA,OAAAC,iBAAA;QAC7B,IAAI,CAACF,OAAO,CAACG,OAAO,CAACC,GAAG,CAACP,mBAAmB,CAAC,EAAE;UAC3CG,OAAO,CAACG,OAAO,CAACE,GAAG,CAACR,mBAAmB,EAAEG,OAAO,CAACM,SAAS,CAAC;QAC/D;QACA,OAAOL,IAAI,CAACD,OAAO,CAAC;MAAC;IACzB;EACJ,CAAC;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
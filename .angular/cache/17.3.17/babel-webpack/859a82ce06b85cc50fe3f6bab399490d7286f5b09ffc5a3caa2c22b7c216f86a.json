{"ast":null,"code":"import { MediaType as e, FileFormat as n } from \"../public/media.js\";\nimport { videoAndImageMediaAPISupportVersion as t, nonFullScreenVideoModeAPISupportVersion as r, imageOutputFormatsAPISupportVersion as l } from \"./constants.js\";\nimport { throwExceptionIfMobileApiIsNotSupported as o } from \"./internalAPIs.js\";\nfunction u(e, n) {\n  if (null == e || null == n || e.length <= 0) return null;\n  let t = null,\n    r = 1;\n  return e.sort((e, n) => e.sequence > n.sequence ? 1 : -1), e.forEach(e => {\n    e.sequence == r && (t = t ? new Blob([t, e.file], {\n      type: n\n    }) : new Blob([e.file], {\n      type: n\n    }), r++);\n  }), t;\n}\nfunction i(e, n) {\n  if (null == e || null == n) return null;\n  const t = atob(e.chunk),\n    r = new Array(t.length);\n  for (let e = 0; e < t.length; e++) r[e] = t.charCodeAt(e);\n  const l = new Uint8Array(r),\n    o = new Blob([l], {\n      type: n\n    });\n  return {\n    sequence: e.chunkSequence,\n    file: o\n  };\n}\nfunction c(e) {\n  s(e) ? o(t) : p(e) ? o(r) : d(e) && o(l);\n}\nfunction a(n) {\n  return !(n.mediaType != e.Video || !n.videoProps || !n.videoProps.videoController);\n}\nfunction f(e) {\n  return !(null == e || e.maxMediaCount > 10);\n}\nfunction d(n) {\n  var t;\n  return !((null == n ? void 0 : n.mediaType) != e.Image || !(null === (t = null == n ? void 0 : n.imageProps) || void 0 === t ? void 0 : t.imageOutputFormats));\n}\nfunction s(n) {\n  return !(!n || n.mediaType != e.VideoAndImage && !n.videoAndImageProps);\n}\nfunction p(n) {\n  return !(!n || n.mediaType != e.Video || !n.videoProps || n.videoProps.isFullScreenMode);\n}\nfunction m(e, t, r) {\n  return null != e && null != t && t == n.ID && null != r;\n}\nfunction I(e) {\n  return !(null == e || e.length <= 0 || e.length > 10);\n}\nfunction v(e) {\n  return !e || !(null === e.timeOutIntervalInSec || null != e.timeOutIntervalInSec && e.timeOutIntervalInSec <= 0 || null != e.timeOutIntervalInSec && e.timeOutIntervalInSec > 60);\n}\nfunction g(e) {\n  if (e) {\n    if (e.title && \"string\" != typeof e.title) return !1;\n    if (e.setSelected && \"object\" != typeof e.setSelected) return !1;\n    if (e.openOrgWideSearchInChatOrChannel && \"boolean\" != typeof e.openOrgWideSearchInChatOrChannel) return !1;\n    if (e.singleSelect && \"boolean\" != typeof e.singleSelect) return !1;\n  }\n  return !0;\n}\nexport { u as createFile, i as decodeAttachment, d as isMediaCallForImageOutputFormats, p as isMediaCallForNonFullScreenVideoMode, s as isMediaCallForVideoAndImageInputs, a as isVideoControllerRegistered, c as throwExceptionIfMediaCallIsNotSupportedOnMobile, m as validateGetMediaInputs, g as validatePeoplePickerInput, v as validateScanBarCodeInput, f as validateSelectMediaInputs, I as validateViewImagesInput };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
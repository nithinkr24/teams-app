{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport let ChatHeaderComponent = /*#__PURE__*/(() => {\n  var _ChatHeaderComponent;\n  class ChatHeaderComponent {\n    constructor() {\n      this.personaName = '';\n      this.threadStatus = '';\n      this.onResolveChat = new EventEmitter();\n    }\n    handleResolveChat() {\n      this.onResolveChat.emit();\n    }\n    getStatusClass() {\n      return this.threadStatus === 'active' ? 'active' : 'resolved';\n    }\n    getStatusText() {\n      return this.threadStatus === 'active' ? 'Active' : 'Resolved';\n    }\n  }\n  _ChatHeaderComponent = ChatHeaderComponent;\n  _ChatHeaderComponent.ɵfac = function ChatHeaderComponent_Factory(t) {\n    return new (t || _ChatHeaderComponent)();\n  };\n  _ChatHeaderComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _ChatHeaderComponent,\n    selectors: [[\"app-chat-header\"]],\n    inputs: {\n      personaName: \"personaName\",\n      threadStatus: \"threadStatus\"\n    },\n    outputs: {\n      onResolveChat: \"onResolveChat\"\n    },\n    decls: 8,\n    vars: 2,\n    consts: [[1, \"chat-header\"], [1, \"header-content\"], [1, \"persona-info\"], [1, \"avatar\"], [1, \"persona-details\"], [1, \"persona-name\"]],\n    template: function ChatHeaderComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 4)(6, \"div\", 5);\n        i0.ɵɵtext(7);\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.personaName.charAt(0).toUpperCase());\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.personaName);\n      }\n    },\n    styles: [\".chat-header[_ngcontent-%COMP%]{padding:16px;border-bottom:1px solid #e1dfdd;background-color:#fff}.header-content[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center}.persona-info[_ngcontent-%COMP%]{display:flex;align-items:center;gap:12px}.avatar[_ngcontent-%COMP%]{width:40px;height:40px;border-radius:50%;background-color:#0078d4;color:#fff;display:flex;align-items:center;justify-content:center;font-weight:600;font-size:16px}.persona-details[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:4px}.persona-name[_ngcontent-%COMP%]{font-weight:600;font-size:16px;color:#323130}.thread-status[_ngcontent-%COMP%]{font-size:12px;font-weight:500;padding:2px 8px;border-radius:12px;text-transform:uppercase;letter-spacing:.5px}.thread-status.active[_ngcontent-%COMP%]{background-color:#dff6dd;color:#107c10}.thread-status.resolved[_ngcontent-%COMP%]{background-color:#fce4ec;color:#c2185b}.resolve-button[_ngcontent-%COMP%]{background-color:#0078d4;color:#fff;border:none;padding:8px 16px;border-radius:4px;cursor:pointer;font-weight:500;transition:background-color .2s}.resolve-button[_ngcontent-%COMP%]:hover{background-color:#106ebe}.resolve-button[_ngcontent-%COMP%]:active{background-color:#005a9e}\"]\n  });\n  return ChatHeaderComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
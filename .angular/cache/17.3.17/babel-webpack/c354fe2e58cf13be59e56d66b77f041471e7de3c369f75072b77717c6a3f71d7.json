{"ast":null,"code":"import _asyncToGenerator from \"D:/Project/github-teams/teams-app-new/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { firstValueFrom } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AgentService = /*#__PURE__*/(() => {\n  var _AgentService;\n  class AgentService {\n    constructor(http) {\n      this.http = http;\n    }\n    getSalesRepInfo(teamsUserId) {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        try {\n          const response = yield firstValueFrom(_this.http.post(`${environment.apiBaseUrl}TeamsChat/getSalesRepInfo`, {\n            aadObjectId: teamsUserId\n          }));\n          return response;\n        } catch (error) {\n          console.error('Failed to get teams sales Rep Information:', error);\n          return undefined;\n        }\n      })();\n    }\n    getAgentACSUser(teamsUserId) {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        try {\n          const response = yield firstValueFrom(_this2.http.get(`${environment.apiBaseUrl}TeamsChat/agentACSUser/?teamsUserId=${teamsUserId}`));\n          return response.data;\n        } catch (error) {\n          console.error('Failed to get ACS user:', error);\n          return undefined;\n        }\n      })();\n    }\n    getEndpointUrl() {\n      var _this3 = this;\n      return _asyncToGenerator(function* () {\n        try {\n          const response = yield firstValueFrom(_this3.http.get(`${environment.apiBaseUrl}TeamsChat/getEndpointUrl`));\n          return (response === null || response === void 0 ? void 0 : response.data) || '';\n        } catch (error) {\n          console.error('Failed to get endpoint URL:', error);\n          return '';\n        }\n      })();\n    }\n    getToken(acsUserId) {\n      var _this4 = this;\n      return _asyncToGenerator(function* () {\n        try {\n          const response = yield firstValueFrom(_this4.http.post(`${environment.apiBaseUrl}TeamsChat/salesAgent-token`, {\n            SalesRepAcsUserId: acsUserId\n          }));\n          return response.data || {\n            token: ''\n          };\n        } catch (error) {\n          console.error('Failed to get token:', error);\n          return {\n            token: 'mock-token'\n          };\n        }\n      })();\n    }\n  }\n  _AgentService = AgentService;\n  _AgentService.ɵfac = function AgentService_Factory(t) {\n    return new (t || _AgentService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  _AgentService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: _AgentService,\n    factory: _AgentService.ɵfac,\n    providedIn: 'root'\n  });\n  return AgentService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
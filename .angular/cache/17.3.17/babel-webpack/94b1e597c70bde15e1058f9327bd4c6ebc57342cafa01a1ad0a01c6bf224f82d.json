{"ast":null,"code":"import _asyncToGenerator from \"D:/Project/github-teams/teams-app-new/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { createDefaultHttpClient as tspCreateDefaultHttpClient } from \"@typespec/ts-http-runtime\";\nimport { wrapAbortSignalLike } from \"./util/wrapAbortSignal.js\";\n/**\n * Create the correct HttpClient for the current environment.\n */\nexport function createDefaultHttpClient() {\n  const client = tspCreateDefaultHttpClient();\n  return {\n    sendRequest(request) {\n      return _asyncToGenerator(function* () {\n        // we wrap any AbortSignalLike here since the TypeSpec runtime expects a native AbortSignal.\n        // 99% of the time, this should be a no-op since a native AbortSignal is passed in.\n        const {\n          abortSignal,\n          cleanup\n        } = request.abortSignal ? wrapAbortSignalLike(request.abortSignal) : {};\n        try {\n          // eslint-disable-next-line no-param-reassign\n          request.abortSignal = abortSignal;\n          return yield client.sendRequest(request);\n        } finally {\n          cleanup === null || cleanup === void 0 ? void 0 : cleanup();\n        }\n      })();\n    }\n  };\n}\n//# sourceMappingURL=defaultHttpClient.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { AppId as i } from \"../public/appId.js\";\nimport { hasScriptTags as t } from \"./utils.js\";\nfunction n(i) {\n  if (!e(i)) throw new Error(`Potential app id (${i}) is invalid; its length ${i.length} is not within the length limits (${r}-${a}).`);\n}\nfunction o(i) {\n  if (t(i)) throw new Error(`Potential app id (${i}) is invalid; it contains script tags.`);\n  if (s(i)) throw new Error(`Potential app id (${i}) is invalid; it contains non-printable characters.`);\n}\nconst r = 4,\n  a = 256;\nfunction e(i) {\n  return i.length < a && i.length > r;\n}\nfunction s(i) {\n  return [...i].some(i => {\n    const t = i.charCodeAt(0);\n    return t < 32 || t > 126;\n  });\n}\nfunction l(t) {\n  if (!(t instanceof i)) throw new Error(`Potential app id (${t}) is invalid; it is not an instance of AppId class.`);\n}\nexport { s as doesStringContainNonPrintableCharacters, e as isStringWithinAppIdLengthLimits, a as maximumValidAppIdLength, r as minimumValidAppIdLength, l as validateAppIdInstance, o as validateSafeContent, n as validateStringLength };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { sendAndHandleSdkError as o } from \"../../internal/communication.js\";\nimport { ensureInitialized as t } from \"../../internal/internalAPIs.js\";\nimport { getApiVersionTag as n } from \"../../internal/telemetry.js\";\nimport { FrameContexts as r, errorNotSupportedOnPlatform as i } from \"../constants.js\";\nimport { ErrorCode as e } from \"../interfaces.js\";\nimport { runtime as s } from \"../runtime.js\";\nfunction a() {\n  if (t(s, r.content, r.task), !m()) throw i;\n  return o(n(\"v2\", \"geoLocation.map.chooseLocation\"), \"location.getLocation\", {\n    allowChooseLocation: !0,\n    showMap: !0\n  });\n}\nfunction c(a) {\n  if (t(s, r.content, r.task), !m()) throw i;\n  if (!a) throw {\n    errorCode: e.INVALID_ARGUMENTS\n  };\n  return o(n(\"v2\", \"geoLocation.showLocation\"), \"location.showLocation\", a);\n}\nfunction m() {\n  return !!(t(s) && s.supports.geoLocation && s.supports.geoLocation.map && s.supports.permissions);\n}\nexport { a as chooseLocation, m as isSupported, c as showLocation };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { isError } from \"@typespec/ts-http-runtime/internal/util\";\n/**\n * Given what is thought to be an error object, return the message if possible.\n * If the message is missing, returns a stringified version of the input.\n * @param e - Something thrown from a try block\n * @returns The error message or a string of the input\n */\nexport function getErrorMessage(e) {\n  if (isError(e)) {\n    return e.message;\n  } else {\n    let stringified;\n    try {\n      if (typeof e === \"object\" && e) {\n        stringified = JSON.stringify(e);\n      } else {\n        stringified = String(e);\n      }\n    } catch (err) {\n      stringified = \"[unable to stringify input]\";\n    }\n    return `Unknown error ${stringified}`;\n  }\n}","map":{"version":3,"names":["isError","getErrorMessage","e","message","stringified","JSON","stringify","String","err"],"sources":["D:/Project/github-teams/teams-app-new/node_modules/@azure/core-util/dist/browser/error.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { isError } from \"@typespec/ts-http-runtime/internal/util\";\n/**\n * Given what is thought to be an error object, return the message if possible.\n * If the message is missing, returns a stringified version of the input.\n * @param e - Something thrown from a try block\n * @returns The error message or a string of the input\n */\nexport function getErrorMessage(e) {\n    if (isError(e)) {\n        return e.message;\n    }\n    else {\n        let stringified;\n        try {\n            if (typeof e === \"object\" && e) {\n                stringified = JSON.stringify(e);\n            }\n            else {\n                stringified = String(e);\n            }\n        }\n        catch (err) {\n            stringified = \"[unable to stringify input]\";\n        }\n        return `Unknown error ${stringified}`;\n    }\n}\n"],"mappings":"AAAA;AACA;AACA,SAASA,OAAO,QAAQ,yCAAyC;AACjE;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,eAAeA,CAACC,CAAC,EAAE;EAC/B,IAAIF,OAAO,CAACE,CAAC,CAAC,EAAE;IACZ,OAAOA,CAAC,CAACC,OAAO;EACpB,CAAC,MACI;IACD,IAAIC,WAAW;IACf,IAAI;MACA,IAAI,OAAOF,CAAC,KAAK,QAAQ,IAAIA,CAAC,EAAE;QAC5BE,WAAW,GAAGC,IAAI,CAACC,SAAS,CAACJ,CAAC,CAAC;MACnC,CAAC,MACI;QACDE,WAAW,GAAGG,MAAM,CAACL,CAAC,CAAC;MAC3B;IACJ,CAAC,CACD,OAAOM,GAAG,EAAE;MACRJ,WAAW,GAAG,6BAA6B;IAC/C;IACA,OAAO,iBAAiBA,WAAW,EAAE;EACzC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
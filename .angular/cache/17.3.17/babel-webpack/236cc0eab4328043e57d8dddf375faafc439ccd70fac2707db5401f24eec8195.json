{"ast":null,"code":"export function formatTimestampForThread(timestamp, now) {\n  if (!timestamp) return '';\n  const diffInMs = now.getTime() - timestamp.getTime();\n  const diffInMinutes = Math.floor(diffInMs / (1000 * 60));\n  const diffInHours = Math.floor(diffInMs / (1000 * 60 * 60));\n  const diffInDays = Math.floor(diffInMs / (1000 * 60 * 60 * 24));\n  if (diffInMinutes < 1) {\n    return 'Just now';\n  } else if (diffInMinutes < 60) {\n    return `${diffInMinutes}m ago`;\n  } else if (diffInHours < 24) {\n    return `${diffInHours}h ago`;\n  } else if (diffInDays < 7) {\n    return `${diffInDays}d ago`;\n  } else {\n    return timestamp.toLocaleDateString();\n  }\n}\nexport function formatDate(date) {\n  return date.toLocaleDateString();\n}\nexport function formatTime(date) {\n  return date.toLocaleTimeString([], {\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n}\nexport function isToday(date) {\n  const today = new Date();\n  return date.toDateString() === today.toDateString();\n}\nexport function isYesterday(date) {\n  const yesterday = new Date();\n  yesterday.setDate(yesterday.getDate() - 1);\n  return date.toDateString() === yesterday.toDateString();\n}","map":{"version":3,"names":["formatTimestampForThread","timestamp","now","diffInMs","getTime","diffInMinutes","Math","floor","diffInHours","diffInDays","toLocaleDateString","formatDate","date","formatTime","toLocaleTimeString","hour","minute","isToday","today","Date","toDateString","isYesterday","yesterday","setDate","getDate"],"sources":["D:\\Project\\github-teams\\teams-app-new\\src\\app\\utils\\datetime.utils.ts"],"sourcesContent":["export function formatTimestampForThread(timestamp: Date, now: Date): string {\r\n  if (!timestamp) return '';\r\n  \r\n  const diffInMs = now.getTime() - timestamp.getTime();\r\n  const diffInMinutes = Math.floor(diffInMs / (1000 * 60));\r\n  const diffInHours = Math.floor(diffInMs / (1000 * 60 * 60));\r\n  const diffInDays = Math.floor(diffInMs / (1000 * 60 * 60 * 24));\r\n  \r\n  if (diffInMinutes < 1) {\r\n    return 'Just now';\r\n  } else if (diffInMinutes < 60) {\r\n    return `${diffInMinutes}m ago`;\r\n  } else if (diffInHours < 24) {\r\n    return `${diffInHours}h ago`;\r\n  } else if (diffInDays < 7) {\r\n    return `${diffInDays}d ago`;\r\n  } else {\r\n    return timestamp.toLocaleDateString();\r\n  }\r\n}\r\n\r\nexport function formatDate(date: Date): string {\r\n  return date.toLocaleDateString();\r\n}\r\n\r\nexport function formatTime(date: Date): string {\r\n  return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n}\r\n\r\nexport function isToday(date: Date): boolean {\r\n  const today = new Date();\r\n  return date.toDateString() === today.toDateString();\r\n}\r\n\r\nexport function isYesterday(date: Date): boolean {\r\n  const yesterday = new Date();\r\n  yesterday.setDate(yesterday.getDate() - 1);\r\n  return date.toDateString() === yesterday.toDateString();\r\n}\r\n"],"mappings":"AAAA,OAAM,SAAUA,wBAAwBA,CAACC,SAAe,EAAEC,GAAS;EACjE,IAAI,CAACD,SAAS,EAAE,OAAO,EAAE;EAEzB,MAAME,QAAQ,GAAGD,GAAG,CAACE,OAAO,EAAE,GAAGH,SAAS,CAACG,OAAO,EAAE;EACpD,MAAMC,aAAa,GAAGC,IAAI,CAACC,KAAK,CAACJ,QAAQ,IAAI,IAAI,GAAG,EAAE,CAAC,CAAC;EACxD,MAAMK,WAAW,GAAGF,IAAI,CAACC,KAAK,CAACJ,QAAQ,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;EAC3D,MAAMM,UAAU,GAAGH,IAAI,CAACC,KAAK,CAACJ,QAAQ,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;EAE/D,IAAIE,aAAa,GAAG,CAAC,EAAE;IACrB,OAAO,UAAU;GAClB,MAAM,IAAIA,aAAa,GAAG,EAAE,EAAE;IAC7B,OAAO,GAAGA,aAAa,OAAO;GAC/B,MAAM,IAAIG,WAAW,GAAG,EAAE,EAAE;IAC3B,OAAO,GAAGA,WAAW,OAAO;GAC7B,MAAM,IAAIC,UAAU,GAAG,CAAC,EAAE;IACzB,OAAO,GAAGA,UAAU,OAAO;GAC5B,MAAM;IACL,OAAOR,SAAS,CAACS,kBAAkB,EAAE;;AAEzC;AAEA,OAAM,SAAUC,UAAUA,CAACC,IAAU;EACnC,OAAOA,IAAI,CAACF,kBAAkB,EAAE;AAClC;AAEA,OAAM,SAAUG,UAAUA,CAACD,IAAU;EACnC,OAAOA,IAAI,CAACE,kBAAkB,CAAC,EAAE,EAAE;IAAEC,IAAI,EAAE,SAAS;IAAEC,MAAM,EAAE;EAAS,CAAE,CAAC;AAC5E;AAEA,OAAM,SAAUC,OAAOA,CAACL,IAAU;EAChC,MAAMM,KAAK,GAAG,IAAIC,IAAI,EAAE;EACxB,OAAOP,IAAI,CAACQ,YAAY,EAAE,KAAKF,KAAK,CAACE,YAAY,EAAE;AACrD;AAEA,OAAM,SAAUC,WAAWA,CAACT,IAAU;EACpC,MAAMU,SAAS,GAAG,IAAIH,IAAI,EAAE;EAC5BG,SAAS,CAACC,OAAO,CAACD,SAAS,CAACE,OAAO,EAAE,GAAG,CAAC,CAAC;EAC1C,OAAOZ,IAAI,CAACQ,YAAY,EAAE,KAAKE,SAAS,CAACF,YAAY,EAAE;AACzD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
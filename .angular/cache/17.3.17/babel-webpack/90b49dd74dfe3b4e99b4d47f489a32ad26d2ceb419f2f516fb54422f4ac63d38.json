{"ast":null,"code":"import _asyncToGenerator from \"D:/Project/github-teams/teams-app-new/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _AgentWorkItemService;\nimport { firstValueFrom } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AgentWorkItemService {\n  constructor(http) {\n    this.http = http;\n  }\n  getAgentWorkItems() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const response = yield firstValueFrom(_this.http.get('http://localhost:8080/agentWorkItem'));\n        return response || [];\n      } catch (error) {\n        console.error('Failed to get agent work items:', error);\n        // Fallback for development - you can remove this in production\n        return [];\n      }\n    })();\n  }\n  createAgentWorkItem(threadId, status) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        yield firstValueFrom(_this2.http.post('http://localhost:8080/agentWorkItem', {\n          id: threadId,\n          status: status\n        }));\n      } catch (error) {\n        console.error('Failed to create agent work item:', error);\n      }\n    })();\n  }\n  updateAgentWorkItem(threadId, status) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        yield firstValueFrom(_this3.http.put(`http://localhost:8080/api/agent/work-items/${threadId}`, {\n          status: status\n        }));\n      } catch (error) {\n        console.error('Failed to update agent work item:', error);\n      }\n    })();\n  }\n}\n_AgentWorkItemService = AgentWorkItemService;\n_AgentWorkItemService.ɵfac = function AgentWorkItemService_Factory(t) {\n  return new (t || _AgentWorkItemService)(i0.ɵɵinject(i1.HttpClient));\n};\n_AgentWorkItemService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _AgentWorkItemService,\n  factory: _AgentWorkItemService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["firstValueFrom","AgentWorkItemService","constructor","http","getAgentWorkItems","_this","_asyncToGenerator","response","get","error","console","createAgentWorkItem","threadId","status","_this2","post","id","updateAgentWorkItem","_this3","put","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\Project\\github-teams\\teams-app-new\\src\\app\\services\\agent-work-item.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, firstValueFrom } from 'rxjs';\r\nimport { ThreadItemStatus } from './threads.service';\r\n\r\nexport interface AgentWorkItem {\r\n  id: string;\r\n  status: ThreadItemStatus;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AgentWorkItemService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  async getAgentWorkItems(): Promise<AgentWorkItem[]> {\r\n    try {\r\n      const response = await firstValueFrom(this.http.get<AgentWorkItem[]>('http://localhost:8080/agentWorkItem'));\r\n      return response || [];\r\n    } catch (error) {\r\n      console.error('Failed to get agent work items:', error);\r\n      // Fallback for development - you can remove this in production\r\n      return [];\r\n    }\r\n  }\r\n\r\n  async createAgentWorkItem(threadId: string, status: ThreadItemStatus): Promise<void> {\r\n    try {\r\n      await firstValueFrom(this.http.post('http://localhost:8080/agentWorkItem', {\r\n        id: threadId,\r\n        status: status\r\n      }));\r\n    } catch (error) {\r\n      console.error('Failed to create agent work item:', error);\r\n    }\r\n  }\r\n\r\n  async updateAgentWorkItem(threadId: string, status: ThreadItemStatus): Promise<void> {\r\n    try {\r\n      await firstValueFrom(this.http.put(`http://localhost:8080/api/agent/work-items/${threadId}`, {\r\n        status: status\r\n      }));\r\n    } catch (error) {\r\n      console.error('Failed to update agent work item:', error);\r\n    }\r\n  }\r\n}\r\n"],"mappings":";;AAEA,SAAqBA,cAAc,QAAQ,MAAM;;;AAWjD,OAAM,MAAOC,oBAAoB;EAC/BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEjCC,iBAAiBA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACrB,IAAI;QACF,MAAMC,QAAQ,SAASP,cAAc,CAACK,KAAI,CAACF,IAAI,CAACK,GAAG,CAAkB,qCAAqC,CAAC,CAAC;QAC5G,OAAOD,QAAQ,IAAI,EAAE;OACtB,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;QACvD;QACA,OAAO,EAAE;;IACV;EACH;EAEME,mBAAmBA,CAACC,QAAgB,EAAEC,MAAwB;IAAA,IAAAC,MAAA;IAAA,OAAAR,iBAAA;MAClE,IAAI;QACF,MAAMN,cAAc,CAACc,MAAI,CAACX,IAAI,CAACY,IAAI,CAAC,qCAAqC,EAAE;UACzEC,EAAE,EAAEJ,QAAQ;UACZC,MAAM,EAAEA;SACT,CAAC,CAAC;OACJ,CAAC,OAAOJ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;;IAC1D;EACH;EAEMQ,mBAAmBA,CAACL,QAAgB,EAAEC,MAAwB;IAAA,IAAAK,MAAA;IAAA,OAAAZ,iBAAA;MAClE,IAAI;QACF,MAAMN,cAAc,CAACkB,MAAI,CAACf,IAAI,CAACgB,GAAG,CAAC,8CAA8CP,QAAQ,EAAE,EAAE;UAC3FC,MAAM,EAAEA;SACT,CAAC,CAAC;OACJ,CAAC,OAAOJ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;;IAC1D;EACH;;wBAjCWR,oBAAoB;;mBAApBA,qBAAoB,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAApBtB,qBAAoB;EAAAuB,OAAA,EAApBvB,qBAAoB,CAAAwB,IAAA;EAAAC,UAAA,EAFnB;AAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
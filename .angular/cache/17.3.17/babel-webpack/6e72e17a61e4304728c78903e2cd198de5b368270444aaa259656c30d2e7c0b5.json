{"ast":null,"code":"var _ThreadListComponent;\nimport { EventEmitter } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { formatTimestampForThread } from '../../utils/datetime.utils';\nimport * as i0 from \"@angular/core\";\nfunction ThreadListComponent_ng_container_2_ng_container_1_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵlistener(\"click\", function ThreadListComponent_ng_container_2_ng_container_1_div_4_Template_div_click_0_listener() {\n      const thread_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r2.handleOnThreadSelected(thread_r2.id));\n    });\n    i0.ɵɵelementStart(1, \"div\", 9)(2, \"div\", 10)(3, \"div\", 11);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 12);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 13);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const thread_r2 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngClass\", ctx_r2.getThreadItemContainerStyle(thread_r2.id));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(thread_r2.topic.charAt(0).toUpperCase());\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(thread_r2.topic);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.formatTimestampForThread(thread_r2.lastMessageReceivedOn, ctx_r2.currentDate), \" \");\n  }\n}\nfunction ThreadListComponent_ng_container_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 5);\n    i0.ɵɵtext(2, \"Assigned to me\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 6);\n    i0.ɵɵtemplate(4, ThreadListComponent_ng_container_2_ng_container_1_div_4_Template, 9, 4, \"div\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.getCurrentStatusThreads());\n  }\n}\nfunction ThreadListComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ThreadListComponent_ng_container_2_ng_container_1_Template, 5, 1, \"ng-container\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    const noThreadsTemplate_r4 = i0.ɵɵreference(6);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.getCurrentStatusThreads().length > 0)(\"ngIfElse\", noThreadsTemplate_r4);\n  }\n}\nfunction ThreadListComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-loading-spinner\");\n  }\n}\nfunction ThreadListComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtext(1, \"No threads\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class ThreadListComponent {\n  constructor() {\n    this.threads = [];\n    this.isLoading = false;\n    this.tabs = [];\n    this.selectedTab = '';\n    this.onThreadSelected = new EventEmitter();\n    this.onStatusTabSelected = new EventEmitter();\n    this.destroy$ = new Subject();\n    this.currentDate = new Date();\n  }\n  ngOnInit() {\n    // Select the first thread when the component is mounted\n    if (!this.selectedThreadId && this.threads && this.threads.length > 0) {\n      const firstThread = this.threads.find(thread => thread.status === this.selectedTab.toLowerCase());\n      if (firstThread) {\n        this.handleOnThreadSelected(firstThread.id);\n      }\n    }\n  }\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n  handleOnThreadSelected(threadId) {\n    this.onThreadSelected.emit(threadId);\n  }\n  handleOnStatusTabSelected(tabValue) {\n    this.onStatusTabSelected.emit(tabValue);\n  }\n  getCurrentStatusThreads() {\n    return this.threads.filter(thread => thread.status === this.selectedTab.toLowerCase());\n  }\n  getThreadItemContainerStyle(threadId) {\n    return threadId === this.selectedThreadId ? 'selected' : 'unselected';\n  }\n  formatTimestampForThread(timestamp, now) {\n    return formatTimestampForThread(timestamp, now);\n  }\n}\n_ThreadListComponent = ThreadListComponent;\n_ThreadListComponent.ɵfac = function ThreadListComponent_Factory(t) {\n  return new (t || _ThreadListComponent)();\n};\n_ThreadListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _ThreadListComponent,\n  selectors: [[\"app-thread-list\"]],\n  inputs: {\n    threads: \"threads\",\n    isLoading: \"isLoading\",\n    selectedThreadId: \"selectedThreadId\",\n    tabs: \"tabs\",\n    selectedTab: \"selectedTab\"\n  },\n  outputs: {\n    onThreadSelected: \"onThreadSelected\",\n    onStatusTabSelected: \"onStatusTabSelected\"\n  },\n  decls: 7,\n  vars: 2,\n  consts: [[\"loadingTemplate\", \"\"], [\"noThreadsTemplate\", \"\"], [1, \"thread-list-container\"], [1, \"thread-list-content\"], [4, \"ngIf\", \"ngIfElse\"], [1, \"assigned-to-me-label\"], [1, \"thread-list\"], [\"class\", \"thread-item\", 3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"thread-item\", 3, \"click\", \"ngClass\"], [1, \"thread-item-content\"], [1, \"persona\"], [1, \"avatar\"], [1, \"persona-name\"], [1, \"timestamp\"], [1, \"no-threads-label\"]],\n  template: function ThreadListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 2)(1, \"div\", 3);\n      i0.ɵɵtemplate(2, ThreadListComponent_ng_container_2_Template, 2, 2, \"ng-container\", 4);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(3, ThreadListComponent_ng_template_3_Template, 1, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor)(5, ThreadListComponent_ng_template_5_Template, 2, 0, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n    }\n    if (rf & 2) {\n      const loadingTemplate_r5 = i0.ɵɵreference(4);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isLoading)(\"ngIfElse\", loadingTemplate_r5);\n    }\n  },\n  styles: [\".thread-list-container[_ngcontent-%COMP%] {\\n      width: 300px;\\n      min-width: 250px;\\n      max-width: 350px;\\n      border-right: 1px solid #e1dfdd;\\n      display: flex;\\n      flex-direction: column;\\n      background-color: #faf9f8;\\n      height: 100vh;\\n      overflow: hidden;\\n    }\\n    \\n    .thread-list-content[_ngcontent-%COMP%] {\\n      flex: 1;\\n      overflow-y: auto;\\n      scrollbar-width: thin;\\n      -ms-overflow-style: -ms-autohiding-scrollbar;\\n    }\\n    \\n    .thread-list-content[_ngcontent-%COMP%]::-webkit-scrollbar {\\n      width: 6px;\\n    }\\n    \\n    .thread-list-content[_ngcontent-%COMP%]::-webkit-scrollbar-thumb {\\n      background-color: #c8c6c4;\\n      border-radius: 3px;\\n    }\\n    \\n    .thread-list-content[_ngcontent-%COMP%]::-webkit-scrollbar-track {\\n      background-color: transparent;\\n    }\\n    \\n    .assigned-to-me-label[_ngcontent-%COMP%] {\\n      padding: 16px;\\n      font-weight: 600;\\n      color: #605e5c;\\n      border-bottom: 1px solid #e1dfdd;\\n      position: -webkit-sticky;\\n      position: sticky;\\n      top: 0;\\n      background-color: #faf9f8;\\n      z-index: 1;\\n    }\\n    \\n    .thread-list[_ngcontent-%COMP%] {\\n      padding: 0;\\n    }\\n    \\n    .thread-item[_ngcontent-%COMP%] {\\n      padding: 12px 16px;\\n      cursor: pointer;\\n      border-bottom: 1px solid #e1dfdd;\\n      transition: background-color 0.2s;\\n    }\\n    \\n    .thread-item[_ngcontent-%COMP%]:hover {\\n      background-color: #f3f2f1;\\n    }\\n    \\n    .thread-item.selected[_ngcontent-%COMP%] {\\n      background-color: #deecf9;\\n      border-left: 3px solid #0078d4;\\n    }\\n    \\n    .thread-item.unselected[_ngcontent-%COMP%] {\\n      background-color: transparent;\\n    }\\n    \\n    .thread-item-content[_ngcontent-%COMP%] {\\n      display: flex;\\n      flex-direction: column;\\n      gap: 8px;\\n    }\\n    \\n    .persona[_ngcontent-%COMP%] {\\n      display: flex;\\n      align-items: center;\\n      gap: 12px;\\n    }\\n    \\n    .avatar[_ngcontent-%COMP%] {\\n      width: 32px;\\n      height: 32px;\\n      border-radius: 50%;\\n      background-color: #0078d4;\\n      color: white;\\n      display: flex;\\n      align-items: center;\\n      justify-content: center;\\n      font-weight: 600;\\n      font-size: 14px;\\n    }\\n    \\n    .persona-name[_ngcontent-%COMP%] {\\n      font-weight: 500;\\n      color: #323130;\\n      overflow: hidden;\\n      text-overflow: ellipsis;\\n      white-space: nowrap;\\n      max-width: 200px;\\n    }\\n    \\n    .timestamp[_ngcontent-%COMP%] {\\n      font-size: 12px;\\n      color: #605e5c;\\n      margin-left: 44px;\\n    }\\n    \\n    .no-threads-label[_ngcontent-%COMP%] {\\n      padding: 16px;\\n      text-align: center;\\n      color: #605e5c;\\n      font-style: italic;\\n    }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY2hhdC90aHJlYWQtbGlzdC90aHJlYWQtbGlzdC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtJQUNJO01BQ0UsWUFBWTtNQUNaLGdCQUFnQjtNQUNoQixnQkFBZ0I7TUFDaEIsK0JBQStCO01BQy9CLGFBQWE7TUFDYixzQkFBc0I7TUFDdEIseUJBQXlCO01BQ3pCLGFBQWE7TUFDYixnQkFBZ0I7SUFDbEI7O0lBRUE7TUFDRSxPQUFPO01BQ1AsZ0JBQWdCO01BQ2hCLHFCQUFxQjtNQUNyQiw0Q0FBNEM7SUFDOUM7O0lBRUE7TUFDRSxVQUFVO0lBQ1o7O0lBRUE7TUFDRSx5QkFBeUI7TUFDekIsa0JBQWtCO0lBQ3BCOztJQUVBO01BQ0UsNkJBQTZCO0lBQy9COztJQUVBO01BQ0UsYUFBYTtNQUNiLGdCQUFnQjtNQUNoQixjQUFjO01BQ2QsZ0NBQWdDO01BQ2hDLHdCQUFnQjtNQUFoQixnQkFBZ0I7TUFDaEIsTUFBTTtNQUNOLHlCQUF5QjtNQUN6QixVQUFVO0lBQ1o7O0lBRUE7TUFDRSxVQUFVO0lBQ1o7O0lBRUE7TUFDRSxrQkFBa0I7TUFDbEIsZUFBZTtNQUNmLGdDQUFnQztNQUNoQyxpQ0FBaUM7SUFDbkM7O0lBRUE7TUFDRSx5QkFBeUI7SUFDM0I7O0lBRUE7TUFDRSx5QkFBeUI7TUFDekIsOEJBQThCO0lBQ2hDOztJQUVBO01BQ0UsNkJBQTZCO0lBQy9COztJQUVBO01BQ0UsYUFBYTtNQUNiLHNCQUFzQjtNQUN0QixRQUFRO0lBQ1Y7O0lBRUE7TUFDRSxhQUFhO01BQ2IsbUJBQW1CO01BQ25CLFNBQVM7SUFDWDs7SUFFQTtNQUNFLFdBQVc7TUFDWCxZQUFZO01BQ1osa0JBQWtCO01BQ2xCLHlCQUF5QjtNQUN6QixZQUFZO01BQ1osYUFBYTtNQUNiLG1CQUFtQjtNQUNuQix1QkFBdUI7TUFDdkIsZ0JBQWdCO01BQ2hCLGVBQWU7SUFDakI7O0lBRUE7TUFDRSxnQkFBZ0I7TUFDaEIsY0FBYztNQUNkLGdCQUFnQjtNQUNoQix1QkFBdUI7TUFDdkIsbUJBQW1CO01BQ25CLGdCQUFnQjtJQUNsQjs7SUFFQTtNQUNFLGVBQWU7TUFDZixjQUFjO01BQ2QsaUJBQWlCO0lBQ25COztJQUVBO01BQ0UsYUFBYTtNQUNiLGtCQUFrQjtNQUNsQixjQUFjO01BQ2Qsa0JBQWtCO0lBQ3BCIiwic291cmNlc0NvbnRlbnQiOlsiXG4gICAgLnRocmVhZC1saXN0LWNvbnRhaW5lciB7XG4gICAgICB3aWR0aDogMzAwcHg7XG4gICAgICBtaW4td2lkdGg6IDI1MHB4O1xuICAgICAgbWF4LXdpZHRoOiAzNTBweDtcbiAgICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICNlMWRmZGQ7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmYWY5Zjg7XG4gICAgICBoZWlnaHQ6IDEwMHZoO1xuICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICB9XG4gICAgXG4gICAgLnRocmVhZC1saXN0LWNvbnRlbnQge1xuICAgICAgZmxleDogMTtcbiAgICAgIG92ZXJmbG93LXk6IGF1dG87XG4gICAgICBzY3JvbGxiYXItd2lkdGg6IHRoaW47XG4gICAgICAtbXMtb3ZlcmZsb3ctc3R5bGU6IC1tcy1hdXRvaGlkaW5nLXNjcm9sbGJhcjtcbiAgICB9XG4gICAgXG4gICAgLnRocmVhZC1saXN0LWNvbnRlbnQ6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcbiAgICAgIHdpZHRoOiA2cHg7XG4gICAgfVxuICAgIFxuICAgIC50aHJlYWQtbGlzdC1jb250ZW50Ojotd2Via2l0LXNjcm9sbGJhci10aHVtYiB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzhjNmM0O1xuICAgICAgYm9yZGVyLXJhZGl1czogM3B4O1xuICAgIH1cbiAgICBcbiAgICAudGhyZWFkLWxpc3QtY29udGVudDo6LXdlYmtpdC1zY3JvbGxiYXItdHJhY2sge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgfVxuICAgIFxuICAgIC5hc3NpZ25lZC10by1tZS1sYWJlbCB7XG4gICAgICBwYWRkaW5nOiAxNnB4O1xuICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICAgIGNvbG9yOiAjNjA1ZTVjO1xuICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlMWRmZGQ7XG4gICAgICBwb3NpdGlvbjogc3RpY2t5O1xuICAgICAgdG9wOiAwO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZhZjlmODtcbiAgICAgIHotaW5kZXg6IDE7XG4gICAgfVxuICAgIFxuICAgIC50aHJlYWQtbGlzdCB7XG4gICAgICBwYWRkaW5nOiAwO1xuICAgIH1cbiAgICBcbiAgICAudGhyZWFkLWl0ZW0ge1xuICAgICAgcGFkZGluZzogMTJweCAxNnB4O1xuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlMWRmZGQ7XG4gICAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuMnM7XG4gICAgfVxuICAgIFxuICAgIC50aHJlYWQtaXRlbTpob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjNmMmYxO1xuICAgIH1cbiAgICBcbiAgICAudGhyZWFkLWl0ZW0uc2VsZWN0ZWQge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2RlZWNmOTtcbiAgICAgIGJvcmRlci1sZWZ0OiAzcHggc29saWQgIzAwNzhkNDtcbiAgICB9XG4gICAgXG4gICAgLnRocmVhZC1pdGVtLnVuc2VsZWN0ZWQge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgfVxuICAgIFxuICAgIC50aHJlYWQtaXRlbS1jb250ZW50IHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgZ2FwOiA4cHg7XG4gICAgfVxuICAgIFxuICAgIC5wZXJzb25hIHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgZ2FwOiAxMnB4O1xuICAgIH1cbiAgICBcbiAgICAuYXZhdGFyIHtcbiAgICAgIHdpZHRoOiAzMnB4O1xuICAgICAgaGVpZ2h0OiAzMnB4O1xuICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzAwNzhkNDtcbiAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICBmb250LXdlaWdodDogNjAwO1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgIH1cbiAgICBcbiAgICAucGVyc29uYS1uYW1lIHtcbiAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgICBjb2xvcjogIzMyMzEzMDtcbiAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgICBtYXgtd2lkdGg6IDIwMHB4O1xuICAgIH1cbiAgICBcbiAgICAudGltZXN0YW1wIHtcbiAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgIGNvbG9yOiAjNjA1ZTVjO1xuICAgICAgbWFyZ2luLWxlZnQ6IDQ0cHg7XG4gICAgfVxuICAgIFxuICAgIC5uby10aHJlYWRzLWxhYmVsIHtcbiAgICAgIHBhZGRpbmc6IDE2cHg7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICBjb2xvcjogIzYwNWU1YztcbiAgICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgICB9XG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["EventEmitter","Subject","formatTimestampForThread","i0","ɵɵelementStart","ɵɵlistener","ThreadListComponent_ng_container_2_ng_container_1_div_4_Template_div_click_0_listener","thread_r2","ɵɵrestoreView","_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","handleOnThreadSelected","id","ɵɵtext","ɵɵelementEnd","ɵɵproperty","getThreadItemContainerStyle","ɵɵadvance","ɵɵtextInterpolate","topic","charAt","toUpperCase","ɵɵtextInterpolate1","lastMessageReceivedOn","currentDate","ɵɵelementContainerStart","ɵɵtemplate","ThreadListComponent_ng_container_2_ng_container_1_div_4_Template","getCurrentStatusThreads","ThreadListComponent_ng_container_2_ng_container_1_Template","length","noThreadsTemplate_r4","ɵɵelement","ThreadListComponent","constructor","threads","isLoading","tabs","selectedTab","onThreadSelected","onStatusTabSelected","destroy$","Date","ngOnInit","selectedThreadId","firstThread","find","thread","status","toLowerCase","ngOnDestroy","next","complete","threadId","emit","handleOnStatusTabSelected","tabValue","filter","timestamp","now","selectors","inputs","outputs","decls","vars","consts","template","ThreadListComponent_Template","rf","ctx","ThreadListComponent_ng_container_2_Template","ThreadListComponent_ng_template_3_Template","ɵɵtemplateRefExtractor","ThreadListComponent_ng_template_5_Template","loadingTemplate_r5"],"sources":["D:\\Project\\github-teams\\teams-app-new\\src\\app\\chat\\thread-list\\thread-list.component.ts","D:\\Project\\github-teams\\teams-app-new\\src\\app\\chat\\thread-list\\thread-list.html"],"sourcesContent":["import { Component, Input, Output, EventEmitter, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { ThreadItem } from '../../services/threads.service';\r\nimport { formatTimestampForThread } from '../../utils/datetime.utils';\r\n\r\n@Component({\r\n  selector: 'app-thread-list',\r\n  templateUrl: './thread-list.html',\r\n  styles: [`\r\n    .thread-list-container {\r\n      width: 300px;\r\n      min-width: 250px;\r\n      max-width: 350px;\r\n      border-right: 1px solid #e1dfdd;\r\n      display: flex;\r\n      flex-direction: column;\r\n      background-color: #faf9f8;\r\n      height: 100vh;\r\n      overflow: hidden;\r\n    }\r\n    \r\n    .thread-list-content {\r\n      flex: 1;\r\n      overflow-y: auto;\r\n      scrollbar-width: thin;\r\n      -ms-overflow-style: -ms-autohiding-scrollbar;\r\n    }\r\n    \r\n    .thread-list-content::-webkit-scrollbar {\r\n      width: 6px;\r\n    }\r\n    \r\n    .thread-list-content::-webkit-scrollbar-thumb {\r\n      background-color: #c8c6c4;\r\n      border-radius: 3px;\r\n    }\r\n    \r\n    .thread-list-content::-webkit-scrollbar-track {\r\n      background-color: transparent;\r\n    }\r\n    \r\n    .assigned-to-me-label {\r\n      padding: 16px;\r\n      font-weight: 600;\r\n      color: #605e5c;\r\n      border-bottom: 1px solid #e1dfdd;\r\n      position: sticky;\r\n      top: 0;\r\n      background-color: #faf9f8;\r\n      z-index: 1;\r\n    }\r\n    \r\n    .thread-list {\r\n      padding: 0;\r\n    }\r\n    \r\n    .thread-item {\r\n      padding: 12px 16px;\r\n      cursor: pointer;\r\n      border-bottom: 1px solid #e1dfdd;\r\n      transition: background-color 0.2s;\r\n    }\r\n    \r\n    .thread-item:hover {\r\n      background-color: #f3f2f1;\r\n    }\r\n    \r\n    .thread-item.selected {\r\n      background-color: #deecf9;\r\n      border-left: 3px solid #0078d4;\r\n    }\r\n    \r\n    .thread-item.unselected {\r\n      background-color: transparent;\r\n    }\r\n    \r\n    .thread-item-content {\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 8px;\r\n    }\r\n    \r\n    .persona {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 12px;\r\n    }\r\n    \r\n    .avatar {\r\n      width: 32px;\r\n      height: 32px;\r\n      border-radius: 50%;\r\n      background-color: #0078d4;\r\n      color: white;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      font-weight: 600;\r\n      font-size: 14px;\r\n    }\r\n    \r\n    .persona-name {\r\n      font-weight: 500;\r\n      color: #323130;\r\n      overflow: hidden;\r\n      text-overflow: ellipsis;\r\n      white-space: nowrap;\r\n      max-width: 200px;\r\n    }\r\n    \r\n    .timestamp {\r\n      font-size: 12px;\r\n      color: #605e5c;\r\n      margin-left: 44px;\r\n    }\r\n    \r\n    .no-threads-label {\r\n      padding: 16px;\r\n      text-align: center;\r\n      color: #605e5c;\r\n      font-style: italic;\r\n    }\r\n  `]\r\n})\r\nexport class ThreadListComponent implements OnInit, OnDestroy {\r\n  @Input() threads: ThreadItem[] = [];\r\n  @Input() isLoading: boolean = false;\r\n  @Input() selectedThreadId?: string;\r\n  @Input() tabs: string[] = [];\r\n  @Input() selectedTab: string = '';\r\n  \r\n  @Output() onThreadSelected = new EventEmitter<string>();\r\n  @Output() onStatusTabSelected = new EventEmitter<string>();\r\n  \r\n  private destroy$ = new Subject<void>();\r\n  currentDate = new Date();\r\n  \r\n  constructor() {}\r\n  \r\n  ngOnInit() {\r\n    // Select the first thread when the component is mounted\r\n    if (!this.selectedThreadId && this.threads && this.threads.length > 0) {\r\n      const firstThread = this.threads.find(thread => thread.status === this.selectedTab.toLowerCase());\r\n      if (firstThread) {\r\n        this.handleOnThreadSelected(firstThread.id);\r\n      }\r\n    }\r\n  }\r\n  \r\n  ngOnDestroy() {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n  \r\n  handleOnThreadSelected(threadId: string): void {\r\n    this.onThreadSelected.emit(threadId);\r\n  }\r\n  \r\n  handleOnStatusTabSelected(tabValue: string): void {\r\n    this.onStatusTabSelected.emit(tabValue);\r\n  }\r\n  \r\n  getCurrentStatusThreads(): ThreadItem[] {\r\n    return this.threads.filter(thread => thread.status === this.selectedTab.toLowerCase());\r\n  }\r\n  \r\n  getThreadItemContainerStyle(threadId: string): string {\r\n    return threadId === this.selectedThreadId ? 'selected' : 'unselected';\r\n  }\r\n  \r\n  formatTimestampForThread(timestamp: Date, now: Date): string {\r\n    return formatTimestampForThread(timestamp, now);\r\n  }\r\n}\r\n","<div class=\"thread-list-container\">\r\n    <!-- <app-thread-list-header [tabs]=\"tabs\" [selectedTab]=\"selectedTab\" (onTabSelect)=\"handleOnStatusTabSelected($event)\">\r\n    </app-thread-list-header> -->\r\n\r\n    <div class=\"thread-list-content\">\r\n        <ng-container *ngIf=\"!isLoading; else loadingTemplate\">\r\n            <ng-container *ngIf=\"getCurrentStatusThreads().length > 0; else noThreadsTemplate\">\r\n                <div class=\"assigned-to-me-label\">Assigned to me</div>\r\n                <div class=\"thread-list\">\r\n                    <div *ngFor=\"let thread of getCurrentStatusThreads()\" class=\"thread-item\"\r\n                        [ngClass]=\"getThreadItemContainerStyle(thread.id)\" (click)=\"handleOnThreadSelected(thread.id)\">\r\n\r\n                        <div class=\"thread-item-content\">\r\n                            <div class=\"persona\">\r\n                                <div class=\"avatar\">{{ thread.topic.charAt(0).toUpperCase() }}</div>\r\n                                <div class=\"persona-name\">{{ thread.topic }}</div>\r\n                            </div>\r\n                            <div class=\"timestamp\">\r\n                                {{ formatTimestampForThread(thread.lastMessageReceivedOn, currentDate) }}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ng-container>\r\n        </ng-container>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #loadingTemplate>\r\n    <app-loading-spinner></app-loading-spinner>\r\n</ng-template>\r\n\r\n<ng-template #noThreadsTemplate>\r\n    <div class=\"no-threads-label\">No threads</div>\r\n</ng-template>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
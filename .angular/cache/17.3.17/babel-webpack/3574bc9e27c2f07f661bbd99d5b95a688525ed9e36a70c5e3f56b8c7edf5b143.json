{"ast":null,"code":"import { __awaiter as t } from \"../../../../node_modules/.pnpm/@rollup_plugin-typescript@11.1.6_rollup@4.24.4_tslib@2.6.3_typescript@4.9.5/node_modules/tslib/tslib.es6.js\";\nimport { sendMessageToParentAsync as e, sendMessageToParent as n, waitForMessageQueue as i, Communication as r } from \"../internal/communication.js\";\nimport { ensureInitialized as a, ensureInitializeCalled as o } from \"../internal/internalAPIs.js\";\nimport { getApiVersionTag as c } from \"../internal/telemetry.js\";\nimport { fullyQualifyUrlString as u, validateUrl as l } from \"../internal/utils.js\";\nimport { FrameContexts as s } from \"./constants.js\";\nimport { runtime as h } from \"./runtime.js\";\nconst f = \"v1\",\n  m = \"v2\";\nlet d;\nfunction b(t) {\n  d = t;\n}\nfunction k(n) {\n  const i = void 0 !== n,\n    r = i ? n : d;\n  if (!r) throw new Error(\"No parameters are provided for authentication\");\n  a(h, s.content, s.sidePanel, s.settings, s.remove, s.task, s.stage, s.meetingStage);\n  return function (n, i) {\n    return t(this, void 0, void 0, function* () {\n      const t = u(i.url);\n      return l(t), e(n, \"authentication.authenticate\", [t.href, i.width, i.height, i.isExternal]).then(([t, e]) => {\n        if (t) return e;\n        throw new Error(e);\n      });\n    });\n  }(r.successCallback || r.failureCallback ? c(f, \"authentication.authenticate\") : c(m, \"authentication.authenticate\"), r).then(t => {\n    try {\n      return r && r.successCallback ? (r.successCallback(t), \"\") : t;\n    } finally {\n      i || (d = void 0);\n    }\n  }).catch(t => {\n    try {\n      if (r && r.failureCallback) return r.failureCallback(t.message), \"\";\n      throw t;\n    } finally {\n      i || (d = void 0);\n    }\n  });\n}\nfunction p(t) {\n  o();\n  return function (t, n) {\n    return new Promise(i => {\n      i(e(t, \"authentication.getAuthToken\", [null == n ? void 0 : n.resources, null == n ? void 0 : n.claims, null == n ? void 0 : n.silent, null == n ? void 0 : n.tenantId]));\n    }).then(([t, e]) => {\n      if (t) return e;\n      throw new Error(e);\n    });\n  }(t && (t.successCallback || t.failureCallback) ? c(f, \"authentication.getAuthToken\") : c(m, \"authentication.getAuthToken\"), t).then(e => t && t.successCallback ? (t.successCallback(e), \"\") : e).catch(e => {\n    if (t && t.failureCallback) return t.failureCallback(e.message), \"\";\n    throw e;\n  });\n}\nfunction C(t) {\n  o();\n  return function (t) {\n    return new Promise(n => {\n      n(e(t, \"authentication.getUser\"));\n    }).then(([t, e]) => {\n      if (t) return e;\n      throw e;\n    });\n  }(t && (t.successCallback || t.failureCallback) ? c(f, \"authentication.getUser\") : c(m, \"authentication.getUser\")).then(e => t && t.successCallback ? (t.successCallback(e), null) : e).catch(e => {\n    const n = `Error returned, code = ${e.errorCode}, message = ${e.message}`;\n    if (t && t.failureCallback) return t.failureCallback(n), null;\n    throw new Error(n);\n  });\n}\nfunction w(t, e) {\n  a(h, s.authentication);\n  const o = c(e ? f : m, \"authentication.notifySuccess\");\n  n(o, \"authentication.authenticate.success\", [t]), i(r.parentWindow, () => setTimeout(() => r.currentWindow.close(), 200));\n}\nfunction g(t, e) {\n  a(h, s.authentication);\n  const o = c(e ? f : m, \"authentication.notifyFailure\");\n  n(o, \"authentication.authenticate.failure\", [t]), i(r.parentWindow, () => setTimeout(() => r.currentWindow.close(), 200));\n}\nvar v;\n!function (t) {\n  t.Public = \"public\", t.EUDB = \"eudb\", t.Other = \"other\";\n}(v || (v = {}));\nexport { v as DataResidency, k as authenticate, p as getAuthToken, C as getUser, g as notifyFailure, w as notifySuccess, b as registerAuthenticationHandlers };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
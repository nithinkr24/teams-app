{"ast":null,"code":"import { __awaiter as e } from \"../../../../../node_modules/.pnpm/@rollup_plugin-typescript@11.1.6_rollup@4.24.4_tslib@2.6.3_typescript@4.9.5/node_modules/tslib/tslib.es6.js\";\nimport { requestPortFromParentWithVersion as t } from \"../../internal/communication.js\";\nimport { ensureInitialized as r } from \"../../internal/internalAPIs.js\";\nimport { getLogger as n, getApiVersionTag as o } from \"../../internal/telemetry.js\";\nimport { errorNotSupportedOnPlatform as i } from \"../../public/constants.js\";\nimport { runtime as s } from \"../../public/runtime.js\";\nlet l;\nconst m = n(\"messageChannels.telemetry\");\nfunction p() {\n  return e(this, void 0, void 0, function* () {\n    if (l) return m(\"Returning telemetry port from cache\"), l;\n    if (!u()) throw i;\n    return l = yield t(o(\"v1\", \"messageChannels.telemetry.getTelemetryPort\"), \"messageChannels.telemetry.getTelemetryPort\"), l;\n  });\n}\nfunction u() {\n  var e;\n  return !(!r(s) || !(null === (e = s.supports.messageChannels) || void 0 === e ? void 0 : e.telemetry));\n}\nfunction a() {\n  l = void 0;\n}\nexport { a as _clearTelemetryPort, p as getTelemetryPort, u as isSupported };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\nimport { SendReadReceiptRequest as SendReadReceiptRequestMapper, SendChatMessageRequest as SendChatMessageRequestMapper, UpdateChatMessageRequest as UpdateChatMessageRequestMapper, CommunicationIdentifierModel as CommunicationIdentifierModelMapper, AddChatParticipantsRequest as AddChatParticipantsRequestMapper, UpdateChatThreadRequest as UpdateChatThreadRequestMapper, SendTypingNotificationRequest as SendTypingNotificationRequestMapper, CreateChatThreadRequest as CreateChatThreadRequestMapper } from \"../models/mappers.js\";\nexport const accept = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const endpoint = {\n  parameterPath: \"endpoint\",\n  mapper: {\n    serializedName: \"endpoint\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\nexport const chatThreadId = {\n  parameterPath: \"chatThreadId\",\n  mapper: {\n    serializedName: \"chatThreadId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const maxPageSize = {\n  parameterPath: [\"options\", \"maxPageSize\"],\n  mapper: {\n    serializedName: \"maxPageSize\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const skip = {\n  parameterPath: [\"options\", \"skip\"],\n  mapper: {\n    serializedName: \"skip\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const apiVersion = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2025-03-15\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const contentType = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const sendReadReceiptRequest = {\n  parameterPath: \"sendReadReceiptRequest\",\n  mapper: SendReadReceiptRequestMapper\n};\nexport const sendChatMessageRequest = {\n  parameterPath: \"sendChatMessageRequest\",\n  mapper: SendChatMessageRequestMapper\n};\nexport const startTime = {\n  parameterPath: [\"options\", \"startTime\"],\n  mapper: {\n    serializedName: \"startTime\",\n    type: {\n      name: \"DateTime\"\n    }\n  }\n};\nexport const chatMessageId = {\n  parameterPath: \"chatMessageId\",\n  mapper: {\n    serializedName: \"chatMessageId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const contentType1 = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/merge-patch+json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const updateChatMessageRequest = {\n  parameterPath: \"updateChatMessageRequest\",\n  mapper: UpdateChatMessageRequestMapper\n};\nexport const participantCommunicationIdentifier = {\n  parameterPath: \"participantCommunicationIdentifier\",\n  mapper: CommunicationIdentifierModelMapper\n};\nexport const addChatParticipantsRequest = {\n  parameterPath: \"addChatParticipantsRequest\",\n  mapper: AddChatParticipantsRequestMapper\n};\nexport const updateChatThreadRequest = {\n  parameterPath: \"updateChatThreadRequest\",\n  mapper: UpdateChatThreadRequestMapper\n};\nexport const sendTypingNotificationRequest = {\n  parameterPath: [\"options\", \"sendTypingNotificationRequest\"],\n  mapper: SendTypingNotificationRequestMapper\n};\nexport const nextLink = {\n  parameterPath: \"nextLink\",\n  mapper: {\n    serializedName: \"nextLink\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\nexport const createChatThreadRequest = {\n  parameterPath: \"createChatThreadRequest\",\n  mapper: CreateChatThreadRequestMapper\n};\nexport const repeatabilityRequestId = {\n  parameterPath: [\"options\", \"repeatabilityRequestId\"],\n  mapper: {\n    serializedName: \"repeatability-request-id\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n//# sourceMappingURL=parameters.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
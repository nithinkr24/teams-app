{"ast":null,"code":"import { ensureInitialized as t } from \"../internal/internalAPIs.js\";\nimport { configSetValidityStateHelper as e, getConfigHelper as n, configSetConfigHelper as s } from \"../internal/pagesHelpers.js\";\nimport { getApiVersionTag as i } from \"../internal/telemetry.js\";\nimport { getGenericOnCompleteHandler as r } from \"../internal/utils.js\";\nimport { FrameContexts as o } from \"./constants.js\";\nimport { runtime as m } from \"./runtime.js\";\nimport { registerOnSaveHandlerHelper as a, registerOnRemoveHandlerHelper as g } from \"./pages/config.js\";\nconst l = \"v1\";\nfunction c(t) {\n  e(i(l, \"settings.setValidityState\"), t);\n}\nfunction f(e) {\n  t(m, o.content, o.settings, o.remove, o.sidePanel), n(i(l, \"settings.getSettings\")).then(t => {\n    e(t);\n  });\n}\nfunction p(e, n) {\n  t(m, o.content, o.settings, o.sidePanel);\n  const a = null != n ? n : r();\n  s(i(l, \"settings.setSettings\"), e).then(() => {\n    a(!0);\n  }).catch(t => {\n    a(!1, t.message);\n  });\n}\nfunction u(t) {\n  a(i(l, \"settings.registerOnSaveHandler\"), t);\n}\nfunction j(t) {\n  g(i(l, \"settings.registerOnRemoveHandler\"), t);\n}\nexport { f as getSettings, j as registerOnRemoveHandler, u as registerOnSaveHandler, p as setSettings, c as setValidityState };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
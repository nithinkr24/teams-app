{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { isObjectWithProperties } from \"@azure/core-util\";\n/**\n * A static name/key-based credential that supports updating\n * the underlying name and key values.\n */\nexport class AzureNamedKeyCredential {\n  /**\n   * The value of the key to be used in authentication.\n   */\n  get key() {\n    return this._key;\n  }\n  /**\n   * The value of the name to be used in authentication.\n   */\n  get name() {\n    return this._name;\n  }\n  /**\n   * Create an instance of an AzureNamedKeyCredential for use\n   * with a service client.\n   *\n   * @param name - The initial value of the name to use in authentication.\n   * @param key - The initial value of the key to use in authentication.\n   */\n  constructor(name, key) {\n    if (!name || !key) {\n      throw new TypeError(\"name and key must be non-empty strings\");\n    }\n    this._name = name;\n    this._key = key;\n  }\n  /**\n   * Change the value of the key.\n   *\n   * Updates will take effect upon the next request after\n   * updating the key value.\n   *\n   * @param newName - The new name value to be used.\n   * @param newKey - The new key value to be used.\n   */\n  update(newName, newKey) {\n    if (!newName || !newKey) {\n      throw new TypeError(\"newName and newKey must be non-empty strings\");\n    }\n    this._name = newName;\n    this._key = newKey;\n  }\n}\n/**\n * Tests an object to determine whether it implements NamedKeyCredential.\n *\n * @param credential - The assumed NamedKeyCredential to be tested.\n */\nexport function isNamedKeyCredential(credential) {\n  return isObjectWithProperties(credential, [\"name\", \"key\"]) && typeof credential.key === \"string\" && typeof credential.name === \"string\";\n}\n//# sourceMappingURL=azureNamedKeyCredential.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
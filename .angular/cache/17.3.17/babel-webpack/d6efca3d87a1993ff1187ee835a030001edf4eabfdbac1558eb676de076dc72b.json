{"ast":null,"code":"import _asyncToGenerator from \"D:/Project/github-teams/teams-app-new/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * promise.race() wrapper that aborts rest of promises as soon as the first promise settles.\n */\nexport function cancelablePromiseRace(_x, _x2) {\n  return _cancelablePromiseRace.apply(this, arguments);\n}\nfunction _cancelablePromiseRace() {\n  _cancelablePromiseRace = _asyncToGenerator(function* (abortablePromiseBuilders, options) {\n    var _a, _b;\n    const aborter = new AbortController();\n    function abortHandler() {\n      aborter.abort();\n    }\n    (_a = options === null || options === void 0 ? void 0 : options.abortSignal) === null || _a === void 0 ? void 0 : _a.addEventListener(\"abort\", abortHandler);\n    try {\n      return yield Promise.race(abortablePromiseBuilders.map(p => p({\n        abortSignal: aborter.signal\n      })));\n    } finally {\n      aborter.abort();\n      (_b = options === null || options === void 0 ? void 0 : options.abortSignal) === null || _b === void 0 ? void 0 : _b.removeEventListener(\"abort\", abortHandler);\n    }\n  });\n  return _cancelablePromiseRace.apply(this, arguments);\n}","map":{"version":3,"names":["cancelablePromiseRace","_x","_x2","_cancelablePromiseRace","apply","arguments","_asyncToGenerator","abortablePromiseBuilders","options","_a","_b","aborter","AbortController","abortHandler","abort","abortSignal","addEventListener","Promise","race","map","p","signal","removeEventListener"],"sources":["D:/Project/github-teams/teams-app-new/node_modules/@azure/core-util/dist/browser/aborterUtils.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * promise.race() wrapper that aborts rest of promises as soon as the first promise settles.\n */\nexport async function cancelablePromiseRace(abortablePromiseBuilders, options) {\n    var _a, _b;\n    const aborter = new AbortController();\n    function abortHandler() {\n        aborter.abort();\n    }\n    (_a = options === null || options === void 0 ? void 0 : options.abortSignal) === null || _a === void 0 ? void 0 : _a.addEventListener(\"abort\", abortHandler);\n    try {\n        return await Promise.race(abortablePromiseBuilders.map((p) => p({ abortSignal: aborter.signal })));\n    }\n    finally {\n        aborter.abort();\n        (_b = options === null || options === void 0 ? void 0 : options.abortSignal) === null || _b === void 0 ? void 0 : _b.removeEventListener(\"abort\", abortHandler);\n    }\n}\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA,gBAAsBA,qBAAqBA,CAAAC,EAAA,EAAAC,GAAA;EAAA,OAAAC,sBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAc1C,SAAAF,uBAAA;EAAAA,sBAAA,GAAAG,iBAAA,CAdM,WAAqCC,wBAAwB,EAAEC,OAAO,EAAE;IAC3E,IAAIC,EAAE,EAAEC,EAAE;IACV,MAAMC,OAAO,GAAG,IAAIC,eAAe,CAAC,CAAC;IACrC,SAASC,YAAYA,CAAA,EAAG;MACpBF,OAAO,CAACG,KAAK,CAAC,CAAC;IACnB;IACA,CAACL,EAAE,GAAGD,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACO,WAAW,MAAM,IAAI,IAAIN,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACO,gBAAgB,CAAC,OAAO,EAAEH,YAAY,CAAC;IAC5J,IAAI;MACA,aAAaI,OAAO,CAACC,IAAI,CAACX,wBAAwB,CAACY,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAAC;QAAEL,WAAW,EAAEJ,OAAO,CAACU;MAAO,CAAC,CAAC,CAAC,CAAC;IACtG,CAAC,SACO;MACJV,OAAO,CAACG,KAAK,CAAC,CAAC;MACf,CAACJ,EAAE,GAAGF,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACO,WAAW,MAAM,IAAI,IAAIL,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACY,mBAAmB,CAAC,OAAO,EAAET,YAAY,CAAC;IACnK;EACJ,CAAC;EAAA,OAAAV,sBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _asyncToGenerator from \"D:/Project/github-teams/teams-app-new/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { createDefaultHttpClient as tspCreateDefaultHttpClient } from \"@typespec/ts-http-runtime\";\nimport { wrapAbortSignalLike } from \"./util/wrapAbortSignal.js\";\n/**\n * Create the correct HttpClient for the current environment.\n */\nexport function createDefaultHttpClient() {\n  const client = tspCreateDefaultHttpClient();\n  return {\n    sendRequest(request) {\n      return _asyncToGenerator(function* () {\n        // we wrap any AbortSignalLike here since the TypeSpec runtime expects a native AbortSignal.\n        // 99% of the time, this should be a no-op since a native AbortSignal is passed in.\n        const {\n          abortSignal,\n          cleanup\n        } = request.abortSignal ? wrapAbortSignalLike(request.abortSignal) : {};\n        try {\n          // eslint-disable-next-line no-param-reassign\n          request.abortSignal = abortSignal;\n          return yield client.sendRequest(request);\n        } finally {\n          cleanup === null || cleanup === void 0 ? void 0 : cleanup();\n        }\n      })();\n    }\n  };\n}","map":{"version":3,"names":["createDefaultHttpClient","tspCreateDefaultHttpClient","wrapAbortSignalLike","client","sendRequest","request","_asyncToGenerator","abortSignal","cleanup"],"sources":["D:/Project/github-teams/teams-app-new/node_modules/@azure/core-rest-pipeline/dist/browser/defaultHttpClient.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { createDefaultHttpClient as tspCreateDefaultHttpClient } from \"@typespec/ts-http-runtime\";\nimport { wrapAbortSignalLike } from \"./util/wrapAbortSignal.js\";\n/**\n * Create the correct HttpClient for the current environment.\n */\nexport function createDefaultHttpClient() {\n    const client = tspCreateDefaultHttpClient();\n    return {\n        async sendRequest(request) {\n            // we wrap any AbortSignalLike here since the TypeSpec runtime expects a native AbortSignal.\n            // 99% of the time, this should be a no-op since a native AbortSignal is passed in.\n            const { abortSignal, cleanup } = request.abortSignal\n                ? wrapAbortSignalLike(request.abortSignal)\n                : {};\n            try {\n                // eslint-disable-next-line no-param-reassign\n                request.abortSignal = abortSignal;\n                return await client.sendRequest(request);\n            }\n            finally {\n                cleanup === null || cleanup === void 0 ? void 0 : cleanup();\n            }\n        },\n    };\n}\n"],"mappings":";AAAA;AACA;AACA,SAASA,uBAAuB,IAAIC,0BAA0B,QAAQ,2BAA2B;AACjG,SAASC,mBAAmB,QAAQ,2BAA2B;AAC/D;AACA;AACA;AACA,OAAO,SAASF,uBAAuBA,CAAA,EAAG;EACtC,MAAMG,MAAM,GAAGF,0BAA0B,CAAC,CAAC;EAC3C,OAAO;IACGG,WAAWA,CAACC,OAAO,EAAE;MAAA,OAAAC,iBAAA;QACvB;QACA;QACA,MAAM;UAAEC,WAAW;UAAEC;QAAQ,CAAC,GAAGH,OAAO,CAACE,WAAW,GAC9CL,mBAAmB,CAACG,OAAO,CAACE,WAAW,CAAC,GACxC,CAAC,CAAC;QACR,IAAI;UACA;UACAF,OAAO,CAACE,WAAW,GAAGA,WAAW;UACjC,aAAaJ,MAAM,CAACC,WAAW,CAACC,OAAO,CAAC;QAC5C,CAAC,SACO;UACJG,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAAC,CAAC;QAC/D;MAAC;IACL;EACJ,CAAC;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { AzureKeyCredential } from \"@azure/core-auth\";\n// TODO: update when connection string format is finalized\nconst CONNECTION_STRING_REGEX = /endpoint=(.*);accesskey=(.*)/i;\nconst tryParseConnectionString = s => {\n  const match = s.match(CONNECTION_STRING_REGEX);\n  if ((match === null || match === void 0 ? void 0 : match[1]) && match[2]) {\n    return {\n      endpoint: match[1],\n      credential: new AzureKeyCredential(match[2])\n    };\n  }\n  return undefined;\n};\n/**\n * Returns an EndpointCredential to easily access properties of the connection string.\n * @hidden\n *\n * @param connectionString - The connection string to parse\n * @returns Object to access the endpoint and the credentials\n */\nexport const parseConnectionString = connectionString => {\n  const parsedConnectionString = tryParseConnectionString(connectionString);\n  if (parsedConnectionString) {\n    return parsedConnectionString;\n  } else {\n    throw new Error(`Invalid connection string ${connectionString}`);\n  }\n};\n//# sourceMappingURL=connectionString.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
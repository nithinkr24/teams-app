{"ast":null,"code":"import { sendAndHandleStatusAndReason as e } from \"../internal/communication.js\";\nimport { createTeamsDeepLinkForChat as s } from \"../internal/deepLinkUtilities.js\";\nimport { ensureInitialized as t } from \"../internal/internalAPIs.js\";\nimport { getApiVersionTag as r } from \"../internal/telemetry.js\";\nimport { FrameContexts as n, errorNotSupportedOnPlatform as o } from \"./constants.js\";\nimport { runtime as i } from \"./runtime.js\";\nfunction a(e) {\n  return m(r(\"v2\", \"chat.openChat\"), e);\n}\nfunction m(r, a) {\n  return new Promise(m => {\n    if (t(i, n.content, n.task), !u()) throw o;\n    if (i.isLegacyTeams) m(e(r, \"executeDeepLink\", s([a.user], void 0, a.message)));else {\n      m(e(r, \"chat.openChat\", {\n        members: [a.user],\n        message: a.message\n      }));\n    }\n  });\n}\nfunction c(a) {\n  const c = r(\"v2\", \"chat.openGroupChat\");\n  return new Promise(r => {\n    if (a.users.length < 1) throw Error(\"OpenGroupChat Failed: No users specified\");\n    if (1 === a.users.length) {\n      const e = {\n        user: a.users[0],\n        message: a.message\n      };\n      r(m(c, e));\n    } else {\n      if (t(i, n.content, n.task), !u()) throw o;\n      if (i.isLegacyTeams) r(e(c, \"executeDeepLink\", s(a.users, a.topic, a.message)));else {\n        r(e(c, \"chat.openChat\", {\n          members: a.users,\n          message: a.message,\n          topic: a.topic\n        }));\n      }\n    }\n  });\n}\nfunction u() {\n  return !(!t(i) || !i.supports.chat);\n}\nexport { u as isSupported, a as openChat, c as openGroupChat };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
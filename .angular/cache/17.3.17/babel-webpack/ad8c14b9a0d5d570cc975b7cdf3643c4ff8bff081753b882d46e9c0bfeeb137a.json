{"ast":null,"code":"import _asyncToGenerator from \"D:/Project/github-teams/teams-app-new/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { app, authentication } from '@microsoft/teams-js';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./common.service\";\nexport let TeamsAuthService = /*#__PURE__*/(() => {\n  var _TeamsAuthService;\n  class TeamsAuthService {\n    constructor(commonService) {\n      this.commonService = commonService;\n      this.isInitialized = false;\n      this.initializeTeams();\n    }\n    initializeTeams() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        if (_this.isInitialized) return;\n        try {\n          yield app.initialize();\n          _this.isInitialized = true;\n        } catch (error) {\n          console.error('Failed to initialize Teams SDK:', error);\n        }\n      })();\n    }\n    openLoginDialog() {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        try {\n          yield _this2.initializeTeams();\n          const loginUrl = new URL(environment.loginPath);\n          return new Promise(resolve => {\n            authentication.authenticate({\n              url: loginUrl.toString(),\n              width: 500,\n              height: 600,\n              successCallback: result => {\n                console.log('Login dialog closed, checking authentication...');\n                const response = JSON.parse(result);\n                resolve(response === null || response === void 0 ? void 0 : response.jenneToken);\n              },\n              failureCallback: reason => {\n                console.error('Login dialog was cancelled or failed:', reason);\n                resolve('');\n              }\n            });\n          });\n        } catch (error) {\n          console.error('Failed to open login dialog:', error);\n          return '';\n        }\n      })();\n    }\n  }\n  _TeamsAuthService = TeamsAuthService;\n  _TeamsAuthService.ɵfac = function TeamsAuthService_Factory(t) {\n    return new (t || _TeamsAuthService)(i0.ɵɵinject(i1.CommonService));\n  };\n  _TeamsAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: _TeamsAuthService,\n    factory: _TeamsAuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return TeamsAuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
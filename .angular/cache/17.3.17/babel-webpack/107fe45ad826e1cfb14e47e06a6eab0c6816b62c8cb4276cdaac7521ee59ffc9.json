{"ast":null,"code":"var _CommonService;\nimport * as i0 from \"@angular/core\";\nexport class CommonService {\n  constructor() {}\n  /**\n   * Sets a cookie with the specified name, value, and expiration days\n   * @param name - Cookie name\n   * @param value - Cookie value\n   * @param days - Number of days until expiration (0 for session cookie)\n   */\n  setCookie(name, value, days) {\n    let expires = '';\n    if (days) {\n      const date = new Date();\n      date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\n      expires = '; expires=' + date.toUTCString();\n    }\n    // Add the SameSite=None; Secure attribute\n    document.cookie = name + '=' + (value || '') + expires + '; path=/; SameSite=None; Secure';\n  }\n  /**\n   * Gets a cookie value by name\n   * @param name - Cookie name\n   * @returns Cookie value or null if not found\n   */\n  getCookie(name) {\n    const nameEQ = name + '=';\n    const ca = document.cookie.split(';');\n    for (let i = 0; i < ca.length; i++) {\n      let c = ca[i];\n      while (c.charAt(0) === ' ') c = c.substring(1, c.length);\n      if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);\n    }\n    return null;\n  }\n  /**\n   * Removes a cookie by setting its expiration date to the past\n   * @param name - Cookie name\n   */\n  removeCookie(name) {\n    document.cookie = name + '=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n  }\n}\n_CommonService = CommonService;\n_CommonService.ɵfac = function CommonService_Factory(t) {\n  return new (t || _CommonService)();\n};\n_CommonService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _CommonService,\n  factory: _CommonService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["CommonService","constructor","setCookie","name","value","days","expires","date","Date","setTime","getTime","toUTCString","document","cookie","getCookie","nameEQ","ca","split","i","length","c","charAt","substring","indexOf","removeCookie","factory","ɵfac","providedIn"],"sources":["D:\\Project\\github-teams\\teams-app-new\\src\\app\\services\\common.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommonService {\r\n\r\n  constructor() { }\r\n\r\n  /**\r\n   * Sets a cookie with the specified name, value, and expiration days\r\n   * @param name - Cookie name\r\n   * @param value - Cookie value\r\n   * @param days - Number of days until expiration (0 for session cookie)\r\n   */\r\n  setCookie(name: string, value: string, days: number): void {\r\n    let expires = '';\r\n    if (days) {\r\n      const date = new Date();\r\n      date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\r\n      expires = '; expires=' + date.toUTCString();\r\n    }\r\n    // Add the SameSite=None; Secure attribute\r\n    document.cookie = name + '=' + (value || '') + expires + '; path=/; SameSite=None; Secure';\r\n  }\r\n\r\n  /**\r\n   * Gets a cookie value by name\r\n   * @param name - Cookie name\r\n   * @returns Cookie value or null if not found\r\n   */\r\n  getCookie(name: string): string | null {\r\n    const nameEQ = name + '=';\r\n    const ca = document.cookie.split(';');\r\n    for (let i = 0; i < ca.length; i++) {\r\n      let c = ca[i];\r\n      while (c.charAt(0) === ' ') c = c.substring(1, c.length);\r\n      if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Removes a cookie by setting its expiration date to the past\r\n   * @param name - Cookie name\r\n   */\r\n  removeCookie(name: string): void {\r\n    document.cookie = name + '=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;';\r\n  }\r\n}\r\n"],"mappings":";;AAKA,OAAM,MAAOA,aAAa;EAExBC,YAAA,GAAgB;EAEhB;;;;;;EAMAC,SAASA,CAACC,IAAY,EAAEC,KAAa,EAAEC,IAAY;IACjD,IAAIC,OAAO,GAAG,EAAE;IAChB,IAAID,IAAI,EAAE;MACR,MAAME,IAAI,GAAG,IAAIC,IAAI,EAAE;MACvBD,IAAI,CAACE,OAAO,CAACF,IAAI,CAACG,OAAO,EAAE,GAAGL,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;MACzDC,OAAO,GAAG,YAAY,GAAGC,IAAI,CAACI,WAAW,EAAE;;IAE7C;IACAC,QAAQ,CAACC,MAAM,GAAGV,IAAI,GAAG,GAAG,IAAIC,KAAK,IAAI,EAAE,CAAC,GAAGE,OAAO,GAAG,iCAAiC;EAC5F;EAEA;;;;;EAKAQ,SAASA,CAACX,IAAY;IACpB,MAAMY,MAAM,GAAGZ,IAAI,GAAG,GAAG;IACzB,MAAMa,EAAE,GAAGJ,QAAQ,CAACC,MAAM,CAACI,KAAK,CAAC,GAAG,CAAC;IACrC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,EAAE,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;MAClC,IAAIE,CAAC,GAAGJ,EAAE,CAACE,CAAC,CAAC;MACb,OAAOE,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAED,CAAC,GAAGA,CAAC,CAACE,SAAS,CAAC,CAAC,EAAEF,CAAC,CAACD,MAAM,CAAC;MACxD,IAAIC,CAAC,CAACG,OAAO,CAACR,MAAM,CAAC,KAAK,CAAC,EAAE,OAAOK,CAAC,CAACE,SAAS,CAACP,MAAM,CAACI,MAAM,EAAEC,CAAC,CAACD,MAAM,CAAC;;IAE1E,OAAO,IAAI;EACb;EAEA;;;;EAIAK,YAAYA,CAACrB,IAAY;IACvBS,QAAQ,CAACC,MAAM,GAAGV,IAAI,GAAG,mDAAmD;EAC9E;;iBA3CWH,aAAa;;mBAAbA,cAAa;AAAA;;SAAbA,cAAa;EAAAyB,OAAA,EAAbzB,cAAa,CAAA0B,IAAA;EAAAC,UAAA,EAFZ;AAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
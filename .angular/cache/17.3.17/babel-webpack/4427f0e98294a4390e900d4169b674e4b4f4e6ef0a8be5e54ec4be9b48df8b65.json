{"ast":null,"code":"import _asyncToGenerator from \"D:/Project/github-teams/teams-app-new/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _AgentService;\nimport { firstValueFrom } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AgentService {\n  constructor(http) {\n    this.http = http;\n  }\n  getSalesRepInfo(teamsUserId) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const response = yield firstValueFrom(_this.http.post(`${environment.apiBaseUrl}TeamsChat/getSalesRepInfo`, {\n          aadObjectId: teamsUserId\n        }));\n        return response;\n      } catch (error) {\n        console.error('Failed to get teams sales Rep Information:', error);\n        return undefined;\n      }\n    })();\n  }\n  getAgentACSUser(teamsUserId) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const response = yield firstValueFrom(_this2.http.get(`${environment.apiBaseUrl}TeamsChat/agentACSUser/?teamsUserId=${teamsUserId}`));\n        return response.data;\n      } catch (error) {\n        console.error('Failed to get ACS user:', error);\n        return undefined;\n      }\n    })();\n  }\n  getEndpointUrl() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const response = yield firstValueFrom(_this3.http.get(`${environment.apiBaseUrl}TeamsChat/getEndpointUrl`));\n        return (response === null || response === void 0 ? void 0 : response.data) || '';\n      } catch (error) {\n        console.error('Failed to get endpoint URL:', error);\n        return '';\n      }\n    })();\n  }\n  getToken(acsUserId) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const response = yield firstValueFrom(_this4.http.post(`${environment.apiBaseUrl}TeamsChat/salesAgent-token`, {\n          SalesRepAcsUserId: acsUserId\n        }));\n        return response.data || {\n          token: ''\n        };\n      } catch (error) {\n        console.error('Failed to get token:', error);\n        return {\n          token: 'mock-token'\n        };\n      }\n    })();\n  }\n}\n_AgentService = AgentService;\n_AgentService.ɵfac = function AgentService_Factory(t) {\n  return new (t || _AgentService)(i0.ɵɵinject(i1.HttpClient));\n};\n_AgentService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _AgentService,\n  factory: _AgentService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["firstValueFrom","environment","AgentService","constructor","http","getSalesRepInfo","teamsUserId","_this","_asyncToGenerator","response","post","apiBaseUrl","aadObjectId","error","console","undefined","getAgentACSUser","_this2","get","data","getEndpointUrl","_this3","getToken","acsUserId","_this4","SalesRepAcsUserId","token","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\Project\\github-teams\\teams-app-new\\src\\app\\services\\agent.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { firstValueFrom } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\nimport { apiEndpoints } from '../utils/constants';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AgentService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  async getSalesRepInfo(teamsUserId: string): Promise<any | undefined> {\r\n    try {\r\n      const response = await firstValueFrom(\r\n        this.http.post<any>(\r\n          `${environment.apiBaseUrl}TeamsChat/getSalesRepInfo`,\r\n          { aadObjectId: teamsUserId }\r\n        )\r\n      );\r\n      return response;\r\n    } catch (error) {\r\n      console.error('Failed to get teams sales Rep Information:', error);\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  async getAgentACSUser(teamsUserId: string): Promise<any | undefined> {\r\n    try {\r\n      const response = await firstValueFrom(this.http.get<any>(`${environment.apiBaseUrl}TeamsChat/agentACSUser/?teamsUserId=${teamsUserId}`));\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Failed to get ACS user:', error);\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  async getEndpointUrl(): Promise<string> {\r\n    try {\r\n      const response = await firstValueFrom(this.http.get<{ data: any }>(`${environment.apiBaseUrl}TeamsChat/getEndpointUrl`));\r\n      return response?.data || '';\r\n    } catch (error) {\r\n      console.error('Failed to get endpoint URL:', error);\r\n      return '';\r\n    }\r\n  }\r\n\r\n  async getToken(acsUserId: string): Promise<any> {\r\n    try {\r\n      const response = await firstValueFrom(this.http.post<any>(`${environment.apiBaseUrl}TeamsChat/salesAgent-token`, { SalesRepAcsUserId: acsUserId}));\r\n      return response.data || { token: '' };\r\n    } catch (error) {\r\n      console.error('Failed to get token:', error);\r\n      return { token: 'mock-token' };\r\n    }\r\n  }\r\n  \r\n}\r\n"],"mappings":";;AAEA,SAASA,cAAc,QAAQ,MAAM;AACrC,SAASC,WAAW,QAAQ,gCAAgC;;;AAO5D,OAAM,MAAOC,YAAY;EACvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEjCC,eAAeA,CAACC,WAAmB;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACvC,IAAI;QACF,MAAMC,QAAQ,SAAST,cAAc,CACnCO,KAAI,CAACH,IAAI,CAACM,IAAI,CACZ,GAAGT,WAAW,CAACU,UAAU,2BAA2B,EACpD;UAAEC,WAAW,EAAEN;QAAW,CAAE,CAC7B,CACF;QACD,OAAOG,QAAQ;OAChB,CAAC,OAAOI,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;QAClE,OAAOE,SAAS;;IACjB;EACH;EAEMC,eAAeA,CAACV,WAAmB;IAAA,IAAAW,MAAA;IAAA,OAAAT,iBAAA;MACvC,IAAI;QACF,MAAMC,QAAQ,SAAST,cAAc,CAACiB,MAAI,CAACb,IAAI,CAACc,GAAG,CAAM,GAAGjB,WAAW,CAACU,UAAU,uCAAuCL,WAAW,EAAE,CAAC,CAAC;QACxI,OAAOG,QAAQ,CAACU,IAAI;OACrB,CAAC,OAAON,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QAC/C,OAAOE,SAAS;;IACjB;EACH;EAEMK,cAAcA,CAAA;IAAA,IAAAC,MAAA;IAAA,OAAAb,iBAAA;MAClB,IAAI;QACF,MAAMC,QAAQ,SAAST,cAAc,CAACqB,MAAI,CAACjB,IAAI,CAACc,GAAG,CAAgB,GAAGjB,WAAW,CAACU,UAAU,0BAA0B,CAAC,CAAC;QACxH,OAAO,CAAAF,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEU,IAAI,KAAI,EAAE;OAC5B,CAAC,OAAON,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;QACnD,OAAO,EAAE;;IACV;EACH;EAEMS,QAAQA,CAACC,SAAiB;IAAA,IAAAC,MAAA;IAAA,OAAAhB,iBAAA;MAC9B,IAAI;QACF,MAAMC,QAAQ,SAAST,cAAc,CAACwB,MAAI,CAACpB,IAAI,CAACM,IAAI,CAAM,GAAGT,WAAW,CAACU,UAAU,4BAA4B,EAAE;UAAEc,iBAAiB,EAAEF;QAAS,CAAC,CAAC,CAAC;QAClJ,OAAOd,QAAQ,CAACU,IAAI,IAAI;UAAEO,KAAK,EAAE;QAAE,CAAE;OACtC,CAAC,OAAOb,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5C,OAAO;UAAEa,KAAK,EAAE;QAAY,CAAE;;IAC/B;EACH;;gBA9CWxB,YAAY;;mBAAZA,aAAY,EAAAyB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAZ5B,aAAY;EAAA6B,OAAA,EAAZ7B,aAAY,CAAA8B,IAAA;EAAAC,UAAA,EAFX;AAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
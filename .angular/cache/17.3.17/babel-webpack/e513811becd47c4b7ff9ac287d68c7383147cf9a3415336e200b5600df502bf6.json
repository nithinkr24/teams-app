{"ast":null,"code":"import { appInitializeHelper as t, registerOnThemeChangeHandlerHelper as e, openLinkHelper as n } from \"../internal/appHelpers.js\";\nimport { sendMessageToParent as r } from \"../internal/communication.js\";\nimport { GlobalVars as i } from \"../internal/globalVars.js\";\nimport { registerHandlerHelper as o } from \"../internal/handlers.js\";\nimport { ensureInitializeCalled as a, ensureInitialized as s } from \"../internal/internalAPIs.js\";\nimport { getTabInstancesHelper as c, getMruTabInstancesHelper as l, shareDeepLinkHelper as u, setCurrentFrameHelper as f } from \"../internal/pagesHelpers.js\";\nimport { getApiVersionTag as m } from \"../internal/telemetry.js\";\nimport { getGenericOnCompleteHandler as p } from \"../internal/utils.js\";\nimport { FrameContexts as g } from \"./constants.js\";\nimport { runtime as H } from \"./runtime.js\";\nimport { enablePrintCapability as b, print as d, registerOnLoadHandlerHelper as h, registerBeforeUnloadHandlerHelper as C } from \"./teamsAPIs.js\";\nimport { registerBackButtonHandlerHelper as j } from \"./pages/backStack.js\";\nconst x = \"v1\";\nfunction B(e, n) {\n  t(m(x, \"initialize\"), n).then(() => {\n    e && e();\n  });\n}\nfunction k() {\n  b();\n}\nfunction v() {\n  d();\n}\nfunction E(t) {\n  a(), r(m(x, \"getContext\"), \"getContext\", e => {\n    e.frameContext || (e.frameContext = i.frameContext), t(e);\n  });\n}\nfunction L(t) {\n  e(m(x, \"registerOnThemeChangeHandlerHelper\"), t);\n}\nfunction P(t) {\n  o(m(x, \"registerFullScreenHandler\"), \"fullScreenChange\", t, []);\n}\nfunction I(t) {\n  o(m(x, \"registerAppButtonClickHandler\"), \"appButtonClick\", t, [g.content]);\n}\nfunction S(t) {\n  o(m(x, \"registerAppButtonHoverEnterHandler\"), \"appButtonHoverEnter\", t, [g.content]);\n}\nfunction y(t) {\n  o(m(x, \"registerAppButtonHoverLeaveHandler\"), \"appButtonHoverLeave\", t, [g.content]);\n}\nfunction A(t) {\n  j(m(x, \"registerBackButtonHandler\"), t);\n}\nfunction F(t) {\n  h(m(x, \"registerOnLoadHandler\"), t);\n}\nfunction T(t) {\n  C(m(x, \"registerBeforeUnloadHandler\"), t);\n}\nfunction U(t) {\n  o(m(x, \"registerFocusEnterHandler\"), \"focusEnter\", t, []);\n}\nfunction W(t) {\n  o(m(x, \"registerChangeSettingsHandler\"), \"changeSettings\", t, [g.content]);\n}\nfunction z(t, e) {\n  s(H), c(m(x, \"getTabInstances\"), e).then(e => {\n    t(e);\n  });\n}\nfunction D(t, e) {\n  s(H), l(m(x, \"getMruTabInstances\"), e).then(e => {\n    t(e);\n  });\n}\nfunction O(t) {\n  u(m(x, \"shareDeepLink\"), {\n    subPageId: t.subEntityId,\n    subPageLabel: t.subEntityLabel,\n    subPageWebUrl: t.subEntityWebUrl\n  });\n}\nfunction M(t, e) {\n  s(H, g.content, g.sidePanel, g.settings, g.task, g.stage, g.meetingStage);\n  const r = null != e ? e : p();\n  n(m(x, \"executeDeepLink\"), t).then(() => {\n    r(!0);\n  }).catch(t => {\n    r(!1, t.message);\n  });\n}\nfunction V(t) {\n  f(m(x, \"setFrameContext\"), t);\n}\nfunction q(e, n, r) {\n  t(m(x, \"initializeWithFrameContext\"), r).then(() => n && n()), f(m(x, \"setFrameContext\"), e);\n}\nexport { k as enablePrintCapability, M as executeDeepLink, E as getContext, D as getMruTabInstances, z as getTabInstances, B as initialize, q as initializeWithFrameContext, v as print, I as registerAppButtonClickHandler, S as registerAppButtonHoverEnterHandler, y as registerAppButtonHoverLeaveHandler, A as registerBackButtonHandler, T as registerBeforeUnloadHandler, W as registerChangeSettingsHandler, U as registerFocusEnterHandler, P as registerFullScreenHandler, F as registerOnLoadHandler, L as registerOnThemeChangeHandler, V as setFrameContext, O as shareDeepLink };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { HostClientType as i } from \"../public/constants.js\";\nimport { ErrorCode as t } from \"../public/interfaces.js\";\nimport { isRuntimeInitialized as e } from \"../public/runtime.js\";\nimport { errorLibraryNotInitialized as n, defaultSDKVersionForCompatCheck as o, userOriginUrlValidationRegExp as r } from \"./constants.js\";\nimport { GlobalVars as l } from \"./globalVars.js\";\nimport { getLogger as s } from \"./telemetry.js\";\nimport { compareSDKVersions as a } from \"./utils.js\";\nconst f = s(\"internal\"),\n  c = f.extend(\"ensureInitializeCalled\"),\n  d = f.extend(\"ensureInitialized\");\nfunction p() {\n  if (!l.initializeCalled) throw c(n), new Error(n);\n}\nfunction m(i, ...t) {\n  if (!l.initializeCompleted) throw d(\"%s. initializeCalled: %s\", n, l.initializeCalled.toString()), new Error(n);\n  if (t && t.length > 0) {\n    let i = !1;\n    for (let e = 0; e < t.length; e++) if (t[e] === l.frameContext) {\n      i = !0;\n      break;\n    }\n    if (!i) throw new Error(`This call is only allowed in following contexts: ${JSON.stringify(t)}. Current context: \"${l.frameContext}\".`);\n  }\n  return e(i);\n}\nfunction u(i = o) {\n  const t = a(l.clientSupportedSDKVersion, i);\n  return !isNaN(t) && t >= 0;\n}\nfunction C() {\n  return l.hostClientType == i.android || l.hostClientType == i.ios || l.hostClientType == i.ipados || l.hostClientType == i.visionOS;\n}\nfunction h(i = o) {\n  if (!C()) {\n    throw {\n      errorCode: t.NOT_SUPPORTED_ON_PLATFORM\n    };\n  }\n  if (!u(i)) {\n    throw {\n      errorCode: t.OLD_PLATFORM\n    };\n  }\n}\nfunction w(i) {\n  let t = l.additionalValidOrigins.concat(i.filter(i => \"string\" == typeof i && r.test(i)));\n  const e = {};\n  t = t.filter(i => !e[i] && (e[i] = !0, !0)), l.additionalValidOrigins = t;\n}\nexport { p as ensureInitializeCalled, m as ensureInitialized, u as isCurrentSDKVersionAtLeast, C as isHostClientMobile, w as processAdditionalValidOrigins, h as throwExceptionIfMobileApiIsNotSupported };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
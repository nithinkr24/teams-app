{"ast":null,"code":"import _asyncToGenerator from \"D:/Project/github-teams/teams-app-new/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { ensureSecureConnection } from \"./checkInsecureConnection.js\";\n/**\n * Name of the OAuth2 Authentication Policy\n */\nexport const oauth2AuthenticationPolicyName = \"oauth2AuthenticationPolicy\";\n/**\n * Gets a pipeline policy that adds authorization header from OAuth2 schemes\n */\nexport function oauth2AuthenticationPolicy(options) {\n  return {\n    name: oauth2AuthenticationPolicyName,\n    sendRequest(request, next) {\n      return _asyncToGenerator(function* () {\n        var _a, _b;\n        // Ensure allowInsecureConnection is explicitly set when sending request to non-https URLs\n        ensureSecureConnection(request, options);\n        const scheme = (_b = (_a = request.authSchemes) !== null && _a !== void 0 ? _a : options.authSchemes) === null || _b === void 0 ? void 0 : _b.find(x => x.kind === \"oauth2\");\n        // Skip adding authentication header if no OAuth2 authentication scheme is found\n        if (!scheme) {\n          return next(request);\n        }\n        const token = yield options.credential.getOAuth2Token(scheme.flows, {\n          abortSignal: request.abortSignal\n        });\n        request.headers.set(\"Authorization\", `Bearer ${token}`);\n        return next(request);\n      })();\n    }\n  };\n}\n//# sourceMappingURL=oauth2AuthenticationPolicy.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
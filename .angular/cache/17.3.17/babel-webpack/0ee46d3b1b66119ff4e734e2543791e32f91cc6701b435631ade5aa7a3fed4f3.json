{"ast":null,"code":"import { sendMessageToParent as o } from \"../internal/communication.js\";\nimport { locationAPIsRequiredVersion as t } from \"../internal/constants.js\";\nimport { ensureInitialized as r, isCurrentSDKVersionAtLeast as n } from \"../internal/internalAPIs.js\";\nimport { getApiVersionTag as i } from \"../internal/telemetry.js\";\nimport { FrameContexts as a, errorNotSupportedOnPlatform as e } from \"./constants.js\";\nimport { ErrorCode as c } from \"./interfaces.js\";\nimport { runtime as l } from \"./runtime.js\";\nfunction s(s, f) {\n  if (!f) throw new Error(\"[location.getLocation] Callback cannot be null\");\n  if (r(l, a.content, a.task), !n(t)) throw {\n    errorCode: c.OLD_PLATFORM\n  };\n  if (!s) throw {\n    errorCode: c.INVALID_ARGUMENTS\n  };\n  if (!m()) throw e;\n  o(i(\"v1\", \"location.getLocation\"), \"location.getLocation\", [s], f);\n}\nfunction f(s, f) {\n  if (!f) throw new Error(\"[location.showLocation] Callback cannot be null\");\n  if (r(l, a.content, a.task), !n(t)) throw {\n    errorCode: c.OLD_PLATFORM\n  };\n  if (!s) throw {\n    errorCode: c.INVALID_ARGUMENTS\n  };\n  if (!m()) throw e;\n  o(i(\"v1\", \"location.showLocation\"), \"location.showLocation\", [s], f);\n}\nfunction m() {\n  return !(!r(l) || !l.supports.location);\n}\nexport { s as getLocation, m as isSupported, f as showLocation };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { sendAndHandleStatusAndReason as r } from \"../../internal/communication.js\";\nimport { ensureInitialized as o } from \"../../internal/internalAPIs.js\";\nimport { getApiVersionTag as t } from \"../../internal/telemetry.js\";\nimport { FrameContexts as e } from \"../constants.js\";\nimport { runtime as n } from \"../runtime.js\";\nimport * as i from \"./handoff.js\";\nexport { i as handoff };\nfunction m(i) {\n  return new Promise(m => {\n    if (o(n, e.content), !l()) throw new Error(\"Not supported\");\n    if (!i.itemId || !i.itemId.trim()) throw new Error(\"Must supply an itemId to openMailItem\");\n    m(r(t(\"v2\", \"mail.openMailItem\"), \"mail.openMailItem\", i));\n  });\n}\nfunction p(i) {\n  return new Promise(m => {\n    if (o(n, e.content), !l()) throw new Error(\"Not supported\");\n    m(r(t(\"v2\", \"mail.composeMail\"), \"mail.composeMail\", i));\n  });\n}\nfunction l() {\n  return !(!o(n) || !n.supports.mail);\n}\nvar a;\n!function (r) {\n  r.New = \"new\", r.Reply = \"reply\", r.ReplyAll = \"replyAll\", r.Forward = \"forward\";\n}(a || (a = {}));\nexport { a as ComposeMailType, p as composeMail, l as isSupported, m as openMailItem };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { serializeMessageRequest as e } from \"./messageObjects.js\";\nimport { getLogger as s } from \"./telemetry.js\";\nfunction i(e) {\n  return void 0 !== e.uuidAsString ? `${e.uuidAsString} (legacy id: ${e.id})` : void 0 !== e.uuid ? `${e.uuid.toString()} (legacy id: ${e.id})` : `legacy id: ${e.id} (no uuid)`;\n}\nconst t = s(\"flushMessageQueue\");\nfunction u(s, u, o, g) {\n  if (s && u && 0 !== o.length) for (; o.length > 0;) {\n    const n = o.shift();\n    if (n) {\n      const o = e(n);\n      t(\"Flushing message %s from %s message queue via postMessage.\", i(o), g), s.postMessage(o, u);\n    }\n  }\n}\nexport { u as flushMessageQueue, i as getMessageIdsAsLogString };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { sendMessageToParent as e } from \"../internal/communication.js\";\nimport { registerHandler as o } from \"../internal/handlers.js\";\nimport { ensureInitialized as r } from \"../internal/internalAPIs.js\";\nimport { getApiVersionTag as l } from \"../internal/telemetry.js\";\nimport { FrameContexts as t } from \"../public/constants.js\";\nimport { ErrorCode as n } from \"../public/interfaces.js\";\nimport { runtime as i } from \"../public/runtime.js\";\nconst d = \"v1\";\nvar a, s, c, f, u, g;\nfunction S(o, n) {\n  if (r(i, t.content), !o || 0 === o.length) throw new Error(\"[files.getCloudStorageFolders] channelId name cannot be null or empty\");\n  if (!n) throw new Error(\"[files.getCloudStorageFolders] Callback cannot be null\");\n  e(l(d, \"files.getCloudStorageFolders\"), \"files.getCloudStorageFolders\", [o], n);\n}\nfunction C(o, n) {\n  if (r(i, t.content), !o || 0 === o.length) throw new Error(\"[files.addCloudStorageFolder] channelId name cannot be null or empty\");\n  if (!n) throw new Error(\"[files.addCloudStorageFolder] Callback cannot be null\");\n  e(l(d, \"files.addCloudStorageFolder\"), \"files.addCloudStorageFolder\", [o], n);\n}\nfunction w(o, n, a) {\n  if (r(i, t.content), !o) throw new Error(\"[files.deleteCloudStorageFolder] channelId name cannot be null or empty\");\n  if (!n) throw new Error(\"[files.deleteCloudStorageFolder] folderToDelete cannot be null or empty\");\n  if (!a) throw new Error(\"[files.deleteCloudStorageFolder] Callback cannot be null\");\n  e(l(d, \"files.deleteCloudStorageFolder\"), \"files.deleteCloudStorageFolder\", [o, n], a);\n}\nfunction v(o, n, a) {\n  if (r(i, t.content), !o || !n) throw new Error(\"[files.getCloudStorageFolderContents] folder/providerCode name cannot be null or empty\");\n  if (!a) throw new Error(\"[files.getCloudStorageFolderContents] Callback cannot be null\");\n  if (\"isSubdirectory\" in o && !o.isSubdirectory) throw new Error(\"[files.getCloudStorageFolderContents] provided folder is not a subDirectory\");\n  e(l(d, \"files.getCloudStorageFolderContents\"), \"files.getCloudStorageFolderContents\", [o, n], a);\n}\nfunction F(o, n, a) {\n  if (r(i, t.content), !o || !n) throw new Error(\"[files.openCloudStorageFile] file/providerCode cannot be null or empty\");\n  if (o.isSubdirectory) throw new Error(\"[files.openCloudStorageFile] provided file is a subDirectory\");\n  e(l(d, \"files.openCloudStorageFile\"), \"files.openCloudStorageFile\", [o, n, a]);\n}\nfunction h(o = !1, n) {\n  if (r(i, t.content), !n) throw new Error(\"[files.getExternalProviders] Callback cannot be null\");\n  e(l(d, \"files.getExternalProviders\"), \"files.getExternalProviders\", [o], n);\n}\nfunction p(o, n, a, s, c = !1, f) {\n  if (r(i, t.content), !o || 0 === o.length) throw new Error(\"[files.copyMoveFiles] selectedFiles cannot be null or empty\");\n  if (!n) throw new Error(\"[files.copyMoveFiles] providerCode cannot be null or empty\");\n  if (!a) throw new Error(\"[files.copyMoveFiles] destinationFolder cannot be null or empty\");\n  if (!s) throw new Error(\"[files.copyMoveFiles] destinationProviderCode cannot be null or empty\");\n  if (!f) throw new Error(\"[files.copyMoveFiles] callback cannot be null\");\n  e(l(d, \"files.copyMoveFiles\"), \"files.copyMoveFiles\", [o, n, a, s, c], f);\n}\nfunction m(o) {\n  if (r(i, t.content), !o) throw new Error(\"[files.getFileDownloads] Callback cannot be null\");\n  e(l(d, \"files.getFileDownloads\"), \"files.getFileDownloads\", [], o);\n}\nfunction b(o = void 0, n) {\n  if (r(i, t.content), !n) throw new Error(\"[files.openDownloadFolder] Callback cannot be null\");\n  e(l(d, \"files.openDownloadFolder\"), \"files.openDownloadFolder\", [o], n);\n}\nfunction E(o) {\n  if (r(i, t.content), !o) throw G(n.INVALID_ARGUMENTS, \"[files.addCloudStorageProvider] callback cannot be null\");\n  e(l(d, \"files.addCloudStorageProvider\"), \"files.addCloudStorageProvider\", [], o);\n}\nfunction P(o, a) {\n  if (r(i, t.content), !a) throw G(n.INVALID_ARGUMENTS, \"[files.removeCloudStorageProvider] callback cannot be null\");\n  if (!o || !o.content) throw G(n.INVALID_ARGUMENTS, \"[files.removeCloudStorageProvider] 3P cloud storage provider request content is missing\");\n  e(l(d, \"files.removeCloudStorageProvider\"), \"files.removeCloudStorageProvider\", [o], a);\n}\nfunction D(o, a) {\n  if (r(i, t.content), !a) throw G(n.INVALID_ARGUMENTS, \"[files.addCloudStorageProviderFile] callback cannot be null\");\n  if (!o || !o.content) throw G(n.INVALID_ARGUMENTS, \"[files.addCloudStorageProviderFile] 3P cloud storage provider request content is missing\");\n  e(l(d, \"files.addCloudStorageProviderFile\"), \"files.addCloudStorageProviderFile\", [o], a);\n}\nfunction I(o, a) {\n  if (r(i, t.content), !a) throw G(n.INVALID_ARGUMENTS, \"[files.renameCloudStorageProviderFile] callback cannot be null\");\n  if (!o || !o.content) throw G(n.INVALID_ARGUMENTS, \"[files.renameCloudStorageProviderFile] 3P cloud storage provider request content is missing\");\n  e(l(d, \"files.renameCloudStorageProviderFile\"), \"files.renameCloudStorageProviderFile\", [o], a);\n}\nfunction A(o, a) {\n  if (r(i, t.content), !a) throw G(n.INVALID_ARGUMENTS, \"[files.deleteCloudStorageProviderFile] callback cannot be null\");\n  if (!(o && o.content && o.content.itemList && o.content.itemList.length > 0)) throw G(n.INVALID_ARGUMENTS, \"[files.deleteCloudStorageProviderFile] 3P cloud storage provider request content details are missing\");\n  e(l(d, \"files.deleteCloudStorageProviderFile\"), \"files.deleteCloudStorageProviderFile\", [o], a);\n}\nfunction N(o, a) {\n  if (r(i, t.content), !a) throw G(n.INVALID_ARGUMENTS, \"[files.downloadCloudStorageProviderFile] callback cannot be null\");\n  if (!(o && o.content && o.content.itemList && o.content.itemList.length > 0)) throw G(n.INVALID_ARGUMENTS, \"[files.downloadCloudStorageProviderFile] 3P cloud storage provider request content details are missing\");\n  e(l(d, \"files.downloadCloudStorageProviderFile\"), \"files.downloadCloudStorageProviderFile\", [o], a);\n}\nfunction y(o, a) {\n  if (r(i, t.content), !a) throw G(n.INVALID_ARGUMENTS, \"[files.uploadCloudStorageProviderFile] callback cannot be null\");\n  if (!(o && o.content && o.content.itemList && o.content.itemList.length > 0)) throw G(n.INVALID_ARGUMENTS, \"[files.uploadCloudStorageProviderFile] 3P cloud storage provider request content details are missing\");\n  if (!o.content.destinationFolder) throw G(n.INVALID_ARGUMENTS, \"[files.uploadCloudStorageProviderFile] Invalid destination folder details\");\n  e(l(d, \"files.uploadCloudStorageProviderFile\"), \"files.uploadCloudStorageProviderFile\", [o], a);\n}\nfunction L(e) {\n  if (r(i), !e) throw new Error(\"[registerCloudStorageProviderListChangeHandler] Handler cannot be null\");\n  o(l(d, \"files.registerCloudStorageProviderListChangeHandler\"), \"files.cloudStorageProviderListChange\", e);\n}\nfunction M(e) {\n  if (r(i), !e) throw new Error(\"[registerCloudStorageProviderContentChangeHandler] Handler cannot be null\");\n  o(l(d, \"files.registerCloudStorageProviderContentChangeHandler\"), \"files.cloudStorageProviderContentChange\", e);\n}\nfunction G(e, o) {\n  return {\n    errorCode: e,\n    message: o\n  };\n}\n!function (e) {\n  e.Dropbox = \"DROPBOX\", e.Box = \"BOX\", e.Sharefile = \"SHAREFILE\", e.GoogleDrive = \"GOOGLEDRIVE\", e.Egnyte = \"EGNYTE\", e.SharePoint = \"SharePoint\";\n}(a || (a = {})), function (e) {\n  e[e.Sharepoint = 0] = \"Sharepoint\", e[e.WopiIntegration = 1] = \"WopiIntegration\", e[e.Google = 2] = \"Google\", e[e.OneDrive = 3] = \"OneDrive\", e[e.Recent = 4] = \"Recent\", e[e.Aggregate = 5] = \"Aggregate\", e[e.FileSystem = 6] = \"FileSystem\", e[e.Search = 7] = \"Search\", e[e.AllFiles = 8] = \"AllFiles\", e[e.SharedWithMe = 9] = \"SharedWithMe\";\n}(s || (s = {})), function (e) {\n  e.ClassMaterials = \"classMaterials\";\n}(c || (c = {})), function (e) {\n  e.Readonly = \"readonly\";\n}(f || (f = {})), function (e) {\n  e.Downloaded = \"Downloaded\", e.Downloading = \"Downloading\", e.Failed = \"Failed\";\n}(u || (u = {})), function (e) {\n  e.Download = \"DOWNLOAD\", e.Upload = \"UPLOAD\", e.Delete = \"DELETE\";\n}(g || (g = {}));\nexport { a as CloudStorageProvider, g as CloudStorageProviderFileAction, s as CloudStorageProviderType, f as DocumentLibraryAccessType, u as FileDownloadStatus, c as SpecialDocumentLibraryType, C as addCloudStorageFolder, E as addCloudStorageProvider, D as addCloudStorageProviderFile, p as copyMoveFiles, w as deleteCloudStorageFolder, A as deleteCloudStorageProviderFile, N as downloadCloudStorageProviderFile, v as getCloudStorageFolderContents, S as getCloudStorageFolders, h as getExternalProviders, m as getFileDownloads, F as openCloudStorageFile, b as openDownloadFolder, M as registerCloudStorageProviderContentChangeHandler, L as registerCloudStorageProviderListChangeHandler, P as removeCloudStorageProvider, I as renameCloudStorageProviderFile, y as uploadCloudStorageProviderFile };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { __awaiter as e } from \"../../../../../node_modules/.pnpm/@rollup_plugin-typescript@11.1.6_rollup@4.24.4_tslib@2.6.3_typescript@4.9.5/node_modules/tslib/tslib.es6.js\";\nimport { sendMessageToParent as n, sendAndHandleSdkError as t } from \"../../internal/communication.js\";\nimport { registerHandler as i, doesHandlerExist as a, removeHandler as o } from \"../../internal/handlers.js\";\nimport { ensureInitialized as r } from \"../../internal/internalAPIs.js\";\nimport { getApiVersionTag as l } from \"../../internal/telemetry.js\";\nimport { FrameContexts as g } from \"../constants.js\";\nimport { ErrorCode as s } from \"../interfaces.js\";\nimport { runtime as d } from \"../runtime.js\";\nimport * as c from \"./appShareButton.js\";\nexport { c as appShareButton };\nconst u = \"v1\";\nvar m, p, h, C, S, f;\nfunction b(e) {\n  if (!e) throw new Error(\"[get incoming client audio state] Callback cannot be null\");\n  r(d, g.sidePanel, g.meetingStage), n(l(u, \"meeting.getIncomingClientAudioState\"), \"getIncomingClientAudioState\", e);\n}\nfunction A(e) {\n  if (!e) throw new Error(\"[toggle incoming client audio] Callback cannot be null\");\n  r(d, g.sidePanel, g.meetingStage), n(l(u, \"meeting.toggleIncomingClientAudio\"), \"toggleIncomingClientAudio\", e);\n}\nfunction w(e) {\n  if (!e) throw new Error(\"[get meeting details] Callback cannot be null\");\n  r(d, g.sidePanel, g.meetingStage, g.settings, g.content), n(l(u, \"meeting.getMeetingDetails\"), \"meeting.getMeetingDetails\", e);\n}\nfunction v() {\n  var n, i, a;\n  return e(this, void 0, void 0, function* () {\n    let e;\n    r(d, g.sidePanel, g.meetingStage, g.settings, g.content);\n    try {\n      const n = !0;\n      e = yield t(l(\"v2\", \"meeting.getMeetingDetailsVerbose\"), \"meeting.getMeetingDetails\", n);\n    } catch (e) {\n      throw new Error(null === (n = null == e ? void 0 : e.errorCode) || void 0 === n ? void 0 : n.toString());\n    }\n    if (((null === (i = e.details) || void 0 === i ? void 0 : i.type) == C.GroupCall || (null === (a = e.details) || void 0 === a ? void 0 : a.type) == C.OneOnOneCall) && !e.details.originalCallerInfo) throw new Error(s.NOT_SUPPORTED_ON_PLATFORM.toString());\n    return e;\n  });\n}\nfunction H(e) {\n  if (!e) throw new Error(\"[get Authentication Token For AnonymousUser] Callback cannot be null\");\n  r(d, g.sidePanel, g.meetingStage, g.task), n(l(u, \"meeting.getAuthenticationTokenForAnonymousUser\"), \"meeting.getAuthenticationTokenForAnonymousUser\", e);\n}\nfunction k(e) {\n  if (!e) throw new Error(\"[get live stream state] Callback cannot be null\");\n  r(d, g.sidePanel), n(l(u, \"meeting.getLiveStreamState\"), \"meeting.getLiveStreamState\", e);\n}\nfunction _(e, t, i) {\n  if (!e) throw new Error(\"[request start live streaming] Callback cannot be null\");\n  r(d, g.sidePanel), n(l(u, \"meeting.requestStartLiveStreaming\"), \"meeting.requestStartLiveStreaming\", [t, i], e);\n}\nfunction M(e) {\n  if (!e) throw new Error(\"[request stop live streaming] Callback cannot be null\");\n  r(d, g.sidePanel), n(l(u, \"meeting.requestStopLiveStreaming\"), \"meeting.requestStopLiveStreaming\", e);\n}\nfunction E(e) {\n  if (!e) throw new Error(\"[register live stream changed handler] Handler cannot be null\");\n  r(d, g.sidePanel), i(l(u, \"meeting.registerLiveStreamChangedHandler\"), \"meeting.liveStreamChanged\", e);\n}\nfunction P(e, t, i = {\n  sharingProtocol: S.Collaborative\n}) {\n  if (!e) throw new Error(\"[share app content to stage] Callback cannot be null\");\n  r(d, g.sidePanel, g.meetingStage), n(l(u, \"meeting.shareAppContentToStage\"), \"meeting.shareAppContentToStage\", [t, i], e);\n}\nfunction j(e) {\n  if (!e) throw new Error(\"[get app content stage sharing capabilities] Callback cannot be null\");\n  r(d, g.sidePanel, g.meetingStage), n(l(u, \"meeting.getAppContentStageSharingCapabilities\"), \"meeting.getAppContentStageSharingCapabilities\", e);\n}\nfunction q(e) {\n  if (!e) throw new Error(\"[stop sharing app content to stage] Callback cannot be null\");\n  r(d, g.sidePanel, g.meetingStage), n(l(u, \"meeting.stopSharingAppContentToStage\"), \"meeting.stopSharingAppContentToStage\", e);\n}\nfunction T(e) {\n  if (!e) throw new Error(\"[get app content stage sharing state] Callback cannot be null\");\n  r(d, g.sidePanel, g.meetingStage), n(l(u, \"meeting.getAppContentStageSharingState\"), \"meeting.getAppContentStageSharingState\", e);\n}\nfunction D(e) {\n  if (!e) throw new Error(\"[registerSpeakingStateChangeHandler] Handler cannot be null\");\n  r(d, g.sidePanel, g.meetingStage), i(l(u, \"meeting.registerSpeakingStateChangeHandler\"), \"meeting.speakingStateChanged\", e);\n}\nfunction y(e) {\n  if (!e) throw new Error(\"[registerRaiseHandStateChangedHandler] Handler cannot be null\");\n  r(d, g.sidePanel, g.meetingStage), i(l(u, \"meeting.registerRaiseHandStateChangedHandler\"), \"meeting.raiseHandStateChanged\", e);\n}\nfunction O(e) {\n  if (!e) throw new Error(\"[registerMeetingReactionReceivedHandler] Handler cannot be null\");\n  r(d, g.sidePanel, g.meetingStage), i(l(u, \"meeting.registerMeetingReactionReceivedHandler\"), \"meeting.meetingReactionReceived\", e);\n}\nfunction R(e) {\n  if (void 0 === (null == e ? void 0 : e.joinWebUrl) || null === (null == e ? void 0 : e.joinWebUrl)) return Promise.reject(new Error(\"Invalid joinMeetingParams\"));\n  r(d);\n  const n = {\n    joinWebUrl: e.joinWebUrl.href,\n    source: e.source || f.Other\n  };\n  return t(l(\"v2\", \"meeting.joinMeeting\"), \"meeting.joinMeeting\", n);\n}\nfunction I(t, s) {\n  if (!s) throw new Error(\"[requestAppAudioHandling] Callback response cannot be null\");\n  if (!t.micMuteStateChangedCallback) throw new Error(\"[requestAppAudioHandling] Callback Mic mute state handler cannot be null\");\n  r(d, g.sidePanel, g.meetingStage), t.isAppHandlingAudio ? function (t, a) {\n    const o = (n, o) => {\n      if (n && null != o) throw new Error(\"[requestAppAudioHandling] Callback response - both parameters cannot be set\");\n      if (n) throw new Error(`[requestAppAudioHandling] Callback response - SDK error ${n.errorCode} ${n.message}`);\n      if (\"boolean\" != typeof o) throw new Error(\"[requestAppAudioHandling] Callback response - isHostAudioless must be a boolean\");\n      const r = n => e(this, void 0, void 0, function* () {\n        try {\n          const e = yield t.micMuteStateChangedCallback(n);\n          F(e, e.isMicMuted === n.isMicMuted ? m.HostInitiated : m.AppDeclinedToChange);\n        } catch (e) {\n          F(n, m.AppFailedToChange);\n        }\n      });\n      i(l(u, \"meeting.registerMicStateChangeHandler\"), \"meeting.micStateChanged\", r);\n      const g = e => {\n        var n;\n        null === (n = t.audioDeviceSelectionChangedCallback) || void 0 === n || n.call(t, e);\n      };\n      i(l(u, \"meeting.registerAudioDeviceSelectionChangedHandler\"), \"meeting.audioDeviceSelectionChanged\", g), a(o);\n    };\n    n(l(u, \"meeting.requestAppAudioHandling\"), \"meeting.requestAppAudioHandling\", [t.isAppHandlingAudio], o);\n  }(t, s) : function (e, t) {\n    const i = (e, n) => {\n      if (e && null != n) throw new Error(\"[requestAppAudioHandling] Callback response - both parameters cannot be set\");\n      if (e) throw new Error(`[requestAppAudioHandling] Callback response - SDK error ${e.errorCode} ${e.message}`);\n      if (\"boolean\" != typeof n) throw new Error(\"[requestAppAudioHandling] Callback response - isHostAudioless must be a boolean\");\n      a(\"meeting.micStateChanged\") && o(\"meeting.micStateChanged\"), a(\"meeting.audioDeviceSelectionChanged\") && o(\"meeting.audioDeviceSelectionChanged\"), t(n);\n    };\n    n(l(u, \"meeting.requestAppAudioHandling\"), \"meeting.requestAppAudioHandling\", [e.isAppHandlingAudio], i);\n  }(t, s);\n}\nfunction U(e) {\n  F(e, m.AppInitiated);\n}\nfunction F(e, t) {\n  r(d, g.sidePanel, g.meetingStage), n(l(u, \"meeting.setMicStateWithReason\"), \"meeting.updateMicState\", [e, t]);\n}\n!function (e) {\n  e[e.HostInitiated = 0] = \"HostInitiated\", e[e.AppInitiated = 1] = \"AppInitiated\", e[e.AppDeclinedToChange = 2] = \"AppDeclinedToChange\", e[e.AppFailedToChange = 3] = \"AppFailedToChange\";\n}(m || (m = {})), function (e) {\n  e.like = \"like\", e.heart = \"heart\", e.laugh = \"laugh\", e.surprised = \"surprised\", e.applause = \"applause\";\n}(p || (p = {})), function (e) {\n  e.Unknown = \"Unknown\", e.Adhoc = \"Adhoc\", e.Scheduled = \"Scheduled\", e.Recurring = \"Recurring\", e.Broadcast = \"Broadcast\", e.MeetNow = \"MeetNow\";\n}(h || (h = {})), function (e) {\n  e.OneOnOneCall = \"oneOnOneCall\", e.GroupCall = \"groupCall\";\n}(C || (C = {})), function (e) {\n  e.Collaborative = \"Collaborative\", e.ScreenShare = \"ScreenShare\";\n}(S || (S = {})), function (e) {\n  e.M365CalendarGridContextMenu = \"m365_calendar_grid_context_menu\", e.M365CalendarGridPeek = \"m365_calendar_grid_peek\", e.M365CalendarGridEventCardJoinButton = \"m365_calendar_grid_event_card_join_button\", e.M365CalendarFormRibbonJoinButton = \"m365_calendar_form_ribbon_join_button\", e.M365CalendarFormJoinTeamsMeetingButton = \"m365_calendar_form_join_teams_meeting_button\", e.Other = \"other\";\n}(f || (f = {}));\nexport { C as CallType, f as EventActionSource, p as MeetingReactionType, h as MeetingType, S as SharingProtocol, j as getAppContentStageSharingCapabilities, T as getAppContentStageSharingState, H as getAuthenticationTokenForAnonymousUser, b as getIncomingClientAudioState, k as getLiveStreamState, w as getMeetingDetails, v as getMeetingDetailsVerbose, R as joinMeeting, E as registerLiveStreamChangedHandler, O as registerMeetingReactionReceivedHandler, y as registerRaiseHandStateChangedHandler, D as registerSpeakingStateChangeHandler, I as requestAppAudioHandling, _ as requestStartLiveStreaming, M as requestStopLiveStreaming, P as shareAppContentToStage, q as stopSharingAppContentToStage, A as toggleIncomingClientAudio, U as updateMicState };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
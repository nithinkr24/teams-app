{"ast":null,"code":"import _asyncToGenerator from \"D:/Project/github-teams/teams-app-new/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * The programmatic identifier of the bearerTokenAuthenticationPolicy.\n */\nexport const keyCredentialAuthenticationPolicyName = \"keyCredentialAuthenticationPolicy\";\nexport function keyCredentialAuthenticationPolicy(credential, apiKeyHeaderName) {\n  return {\n    name: keyCredentialAuthenticationPolicyName,\n    sendRequest(request, next) {\n      return _asyncToGenerator(function* () {\n        request.headers.set(apiKeyHeaderName, credential.key);\n        return next(request);\n      })();\n    }\n  };\n}","map":{"version":3,"names":["keyCredentialAuthenticationPolicyName","keyCredentialAuthenticationPolicy","credential","apiKeyHeaderName","name","sendRequest","request","next","_asyncToGenerator","headers","set","key"],"sources":["D:/Project/github-teams/teams-app-new/node_modules/@azure-rest/core-client/dist/browser/keyCredentialAuthenticationPolicy.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * The programmatic identifier of the bearerTokenAuthenticationPolicy.\n */\nexport const keyCredentialAuthenticationPolicyName = \"keyCredentialAuthenticationPolicy\";\nexport function keyCredentialAuthenticationPolicy(credential, apiKeyHeaderName) {\n    return {\n        name: keyCredentialAuthenticationPolicyName,\n        async sendRequest(request, next) {\n            request.headers.set(apiKeyHeaderName, credential.key);\n            return next(request);\n        },\n    };\n}\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,qCAAqC,GAAG,mCAAmC;AACxF,OAAO,SAASC,iCAAiCA,CAACC,UAAU,EAAEC,gBAAgB,EAAE;EAC5E,OAAO;IACHC,IAAI,EAAEJ,qCAAqC;IACrCK,WAAWA,CAACC,OAAO,EAAEC,IAAI,EAAE;MAAA,OAAAC,iBAAA;QAC7BF,OAAO,CAACG,OAAO,CAACC,GAAG,CAACP,gBAAgB,EAAED,UAAU,CAACS,GAAG,CAAC;QACrD,OAAOJ,IAAI,CAACD,OAAO,CAAC;MAAC;IACzB;EACJ,CAAC;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
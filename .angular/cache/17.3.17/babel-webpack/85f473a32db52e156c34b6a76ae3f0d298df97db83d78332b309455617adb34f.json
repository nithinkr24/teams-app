{"ast":null,"code":"import { __require as e } from \"../../../../ms@2.1.2/node_modules/ms/index.js\";\nvar n = function (n) {\n  function t(e) {\n    let n,\n      s,\n      o,\n      a = null;\n    function l(...e) {\n      if (!l.enabled) return;\n      const r = l,\n        s = Number(new Date()),\n        o = s - (n || s);\n      r.diff = o, r.prev = n, r.curr = s, n = s, e[0] = t.coerce(e[0]), \"string\" != typeof e[0] && e.unshift(\"%O\");\n      let a = 0;\n      e[0] = e[0].replace(/%([a-zA-Z%])/g, (n, s) => {\n        if (\"%%\" === n) return \"%\";\n        a++;\n        const o = t.formatters[s];\n        if (\"function\" == typeof o) {\n          const t = e[a];\n          n = o.call(r, t), e.splice(a, 1), a--;\n        }\n        return n;\n      }), t.formatArgs.call(r, e);\n      (r.log || t.log).apply(r, e);\n    }\n    return l.namespace = e, l.useColors = t.useColors(), l.color = t.selectColor(e), l.extend = r, l.destroy = t.destroy, Object.defineProperty(l, \"enabled\", {\n      enumerable: !0,\n      configurable: !1,\n      get: () => null !== a ? a : (s !== t.namespaces && (s = t.namespaces, o = t.enabled(e)), o),\n      set: e => {\n        a = e;\n      }\n    }), \"function\" == typeof t.init && t.init(l), l;\n  }\n  function r(e, n) {\n    const r = t(this.namespace + (void 0 === n ? \":\" : n) + e);\n    return r.log = this.log, r;\n  }\n  function s(e) {\n    return e.toString().substring(2, e.toString().length - 2).replace(/\\.\\*\\?$/, \"*\");\n  }\n  return t.debug = t, t.default = t, t.coerce = function (e) {\n    if (e instanceof Error) return e.stack || e.message;\n    return e;\n  }, t.disable = function () {\n    const e = [...t.names.map(s), ...t.skips.map(s).map(e => \"-\" + e)].join(\",\");\n    return t.enable(\"\"), e;\n  }, t.enable = function (e) {\n    let n;\n    t.save(e), t.namespaces = e, t.names = [], t.skips = [];\n    const r = (\"string\" == typeof e ? e : \"\").split(/[\\s,]+/),\n      s = r.length;\n    for (n = 0; n < s; n++) r[n] && (\"-\" === (e = r[n].replace(/\\*/g, \".*?\"))[0] ? t.skips.push(new RegExp(\"^\" + e.slice(1) + \"$\")) : t.names.push(new RegExp(\"^\" + e + \"$\")));\n  }, t.enabled = function (e) {\n    if (\"*\" === e[e.length - 1]) return !0;\n    let n, r;\n    for (n = 0, r = t.skips.length; n < r; n++) if (t.skips[n].test(e)) return !1;\n    for (n = 0, r = t.names.length; n < r; n++) if (t.names[n].test(e)) return !0;\n    return !1;\n  }, t.humanize = e(), t.destroy = function () {\n    console.warn(\"Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.\");\n  }, Object.keys(n).forEach(e => {\n    t[e] = n[e];\n  }), t.names = [], t.skips = [], t.formatters = {}, t.selectColor = function (e) {\n    let n = 0;\n    for (let t = 0; t < e.length; t++) n = (n << 5) - n + e.charCodeAt(t), n |= 0;\n    return t.colors[Math.abs(n) % t.colors.length];\n  }, t.enable(t.load()), t;\n};\nexport { n as c };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { sendMessageToParent as o } from \"../../../internal/communication.js\";\nimport { storedMessages as r, dialogTelemetryVersionNumber as n } from \"../../../internal/dialogHelpers.js\";\nimport { removeHandler as e, registerHandler as i } from \"../../../internal/handlers.js\";\nimport { ensureInitialized as t } from \"../../../internal/internalAPIs.js\";\nimport { getApiVersionTag as a } from \"../../../internal/telemetry.js\";\nimport { FrameContexts as s, errorNotSupportedOnPlatform as m } from \"../../constants.js\";\nimport { runtime as l } from \"../../runtime.js\";\nfunction d(r) {\n  if (t(l, s.task), !p()) throw m;\n  o(a(n, \"dialog.url.parentCommunication.sendMessageToParentFromDialog\"), \"messageForParent\", [r]);\n}\nfunction g(r) {\n  if (t(l, s.content, s.sidePanel, s.meetingStage), !p()) throw m;\n  o(a(n, \"dialog.url.parentCommunication.sendMessageToDialog\"), \"messageForChild\", [r]);\n}\nfunction u(o) {\n  if (t(l, s.task), !p()) throw m;\n  for (e(\"messageForChild\"), i(a(n, \"dialog.url.parentCommunication.registerMessageForChildHandler\"), \"messageForChild\", o), r.reverse(); r.length > 0;) {\n    o(r.pop());\n  }\n}\nfunction p() {\n  var o, r;\n  return t(l) && !!(null === (r = null === (o = l.supports.dialog) || void 0 === o ? void 0 : o.url) || void 0 === r ? void 0 : r.parentCommunication);\n}\nexport { p as isSupported, u as registerOnMessageFromParent, g as sendMessageToDialog, d as sendMessageToParentFromDialog };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
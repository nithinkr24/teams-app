{"ast":null,"code":"import { __rest as r } from \"../../../../node_modules/.pnpm/@rollup_plugin-typescript@11.1.6_rollup@4.24.4_tslib@2.6.3_typescript@4.9.5/node_modules/tslib/tslib.es6.js\";\nimport { CartStatus as e } from \"../public/marketplace.js\";\nimport t from \"../../../../node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/validate.js\";\nfunction o(r) {\n  try {\n    return r.cartItems = s(r.cartItems), r;\n  } catch (r) {\n    throw new Error(\"Error deserializing cart\");\n  }\n}\nfunction s(r) {\n  return r.map(r => {\n    if (r.imageURL) {\n      const e = new URL(r.imageURL);\n      r.imageURL = e;\n    }\n    return r.accessories && (r.accessories = s(r.accessories)), r;\n  });\n}\nconst i = e => {\n  try {\n    return e.map(e => {\n      const {\n          imageURL: t,\n          accessories: o\n        } = e,\n        s = r(e, [\"imageURL\", \"accessories\"]),\n        n = Object.assign({}, s);\n      return t && (n.imageURL = t.href), o && (n.accessories = i(o)), n;\n    });\n  } catch (r) {\n    throw new Error(\"Error serializing cart items\");\n  }\n};\nfunction n(r) {\n  if (!Array.isArray(r) || 0 === r.length) throw new Error(\"cartItems must be a non-empty array\");\n  for (const e of r) c(e), a(e.accessories);\n}\nfunction a(r) {\n  if (null != r) {\n    if (!Array.isArray(r) || 0 === r.length) throw new Error(\"CartItem.accessories must be a non-empty array\");\n    for (const e of r) {\n      if (e.accessories) throw new Error(\"Item in CartItem.accessories cannot have accessories\");\n      c(e);\n    }\n  }\n}\nfunction c(r) {\n  if (!r.id) throw new Error(\"cartItem.id must not be empty\");\n  if (!r.name) throw new Error(\"cartItem.name must not be empty\");\n  u(r.price), f(r.quantity);\n}\nfunction m(r) {\n  if (null != r) {\n    if (!r) throw new Error(\"id must not be empty\");\n    if (!1 === t(r)) throw new Error(\"id must be a valid UUID\");\n  }\n}\nfunction u(r) {\n  if (\"number\" != typeof r || r < 0) throw new Error(`price ${r} must be a number not less than 0`);\n  if (parseFloat(r.toFixed(3)) !== r) throw new Error(`price ${r} must have at most 3 decimal places`);\n}\nfunction f(r) {\n  if (\"number\" != typeof r || r <= 0 || parseInt(r.toString()) !== r) throw new Error(`quantity ${r} must be an integer greater than 0`);\n}\nfunction p(r) {\n  if (!Object.values(e).includes(r)) throw new Error(`cartStatus ${r} is not valid`);\n}\nexport { o as deserializeCart, s as deserializeCartItems, i as serializeCartItems, a as validateAccessoryItems, c as validateBasicCartItem, n as validateCartItems, p as validateCartStatus, u as validatePrice, f as validateQuantity, m as validateUuid };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _asyncToGenerator from \"D:/Project/github-teams/teams-app-new/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { getHeaderName, setPlatformSpecificData } from \"./userAgentPlatform.js\";\nimport { SDK_VERSION } from \"../constants.js\";\nfunction getUserAgentString(telemetryInfo) {\n  const parts = [];\n  for (const [key, value] of telemetryInfo) {\n    const token = value ? `${key}/${value}` : key;\n    parts.push(token);\n  }\n  return parts.join(\" \");\n}\n/**\n * @internal\n */\nexport function getUserAgentHeaderName() {\n  return getHeaderName();\n}\n/**\n * @internal\n */\nexport function getUserAgentValue(_x) {\n  return _getUserAgentValue.apply(this, arguments);\n}\nfunction _getUserAgentValue() {\n  _getUserAgentValue = _asyncToGenerator(function* (prefix) {\n    const runtimeInfo = new Map();\n    runtimeInfo.set(\"ts-http-runtime\", SDK_VERSION);\n    yield setPlatformSpecificData(runtimeInfo);\n    const defaultAgent = getUserAgentString(runtimeInfo);\n    const userAgentValue = prefix ? `${prefix} ${defaultAgent}` : defaultAgent;\n    return userAgentValue;\n  });\n  return _getUserAgentValue.apply(this, arguments);\n}","map":{"version":3,"names":["getHeaderName","setPlatformSpecificData","SDK_VERSION","getUserAgentString","telemetryInfo","parts","key","value","token","push","join","getUserAgentHeaderName","getUserAgentValue","_x","_getUserAgentValue","apply","arguments","_asyncToGenerator","prefix","runtimeInfo","Map","set","defaultAgent","userAgentValue"],"sources":["D:/Project/github-teams/teams-app-new/node_modules/@typespec/ts-http-runtime/dist/browser/util/userAgent.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { getHeaderName, setPlatformSpecificData } from \"./userAgentPlatform.js\";\nimport { SDK_VERSION } from \"../constants.js\";\nfunction getUserAgentString(telemetryInfo) {\n    const parts = [];\n    for (const [key, value] of telemetryInfo) {\n        const token = value ? `${key}/${value}` : key;\n        parts.push(token);\n    }\n    return parts.join(\" \");\n}\n/**\n * @internal\n */\nexport function getUserAgentHeaderName() {\n    return getHeaderName();\n}\n/**\n * @internal\n */\nexport async function getUserAgentValue(prefix) {\n    const runtimeInfo = new Map();\n    runtimeInfo.set(\"ts-http-runtime\", SDK_VERSION);\n    await setPlatformSpecificData(runtimeInfo);\n    const defaultAgent = getUserAgentString(runtimeInfo);\n    const userAgentValue = prefix ? `${prefix} ${defaultAgent}` : defaultAgent;\n    return userAgentValue;\n}\n"],"mappings":";AAAA;AACA;AACA,SAASA,aAAa,EAAEC,uBAAuB,QAAQ,wBAAwB;AAC/E,SAASC,WAAW,QAAQ,iBAAiB;AAC7C,SAASC,kBAAkBA,CAACC,aAAa,EAAE;EACvC,MAAMC,KAAK,GAAG,EAAE;EAChB,KAAK,MAAM,CAACC,GAAG,EAAEC,KAAK,CAAC,IAAIH,aAAa,EAAE;IACtC,MAAMI,KAAK,GAAGD,KAAK,GAAG,GAAGD,GAAG,IAAIC,KAAK,EAAE,GAAGD,GAAG;IAC7CD,KAAK,CAACI,IAAI,CAACD,KAAK,CAAC;EACrB;EACA,OAAOH,KAAK,CAACK,IAAI,CAAC,GAAG,CAAC;AAC1B;AACA;AACA;AACA;AACA,OAAO,SAASC,sBAAsBA,CAAA,EAAG;EACrC,OAAOX,aAAa,CAAC,CAAC;AAC1B;AACA;AACA;AACA;AACA,gBAAsBY,iBAAiBA,CAAAC,EAAA;EAAA,OAAAC,kBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAOtC,SAAAF,mBAAA;EAAAA,kBAAA,GAAAG,iBAAA,CAPM,WAAiCC,MAAM,EAAE;IAC5C,MAAMC,WAAW,GAAG,IAAIC,GAAG,CAAC,CAAC;IAC7BD,WAAW,CAACE,GAAG,CAAC,iBAAiB,EAAEnB,WAAW,CAAC;IAC/C,MAAMD,uBAAuB,CAACkB,WAAW,CAAC;IAC1C,MAAMG,YAAY,GAAGnB,kBAAkB,CAACgB,WAAW,CAAC;IACpD,MAAMI,cAAc,GAAGL,MAAM,GAAG,GAAGA,MAAM,IAAII,YAAY,EAAE,GAAGA,YAAY;IAC1E,OAAOC,cAAc;EACzB,CAAC;EAAA,OAAAT,kBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
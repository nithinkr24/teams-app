{"ast":null,"code":"import { __awaiter as t } from \"../../../../node_modules/.pnpm/@rollup_plugin-typescript@11.1.6_rollup@4.24.4_tslib@2.6.3_typescript@4.9.5/node_modules/tslib/tslib.es6.js\";\nimport { callFunctionInHost as e, callFunctionInHostAndHandleResponse as r } from \"../internal/communication.js\";\nimport { registerHandler as o } from \"../internal/handlers.js\";\nimport { ensureInitialized as n } from \"../internal/internalAPIs.js\";\nimport { ResponseHandler as s } from \"../internal/responseHandler.js\";\nimport { getApiVersionTag as i } from \"../internal/telemetry.js\";\nimport { errorNotSupportedOnPlatform as a } from \"./constants.js\";\nimport { runtime as c } from \"./runtime.js\";\nclass h {\n  constructor(t) {\n    this.event = t;\n  }\n  serialize() {\n    return {\n      altKey: this.event.altKey,\n      bubbles: this.event.bubbles,\n      cancelBubble: this.event.cancelBubble,\n      charCode: this.event.charCode,\n      code: this.event.code,\n      composed: this.event.composed,\n      ctrlKey: this.event.ctrlKey,\n      defaultPrevented: this.event.defaultPrevented,\n      detail: this.event.detail,\n      eventPhase: this.event.eventPhase,\n      isComposing: this.event.isComposing,\n      isTrusted: this.event.isTrusted,\n      key: this.event.key,\n      keyCode: this.event.keyCode,\n      location: this.event.location,\n      metaKey: this.event.metaKey,\n      repeat: this.event.repeat,\n      returnValue: this.event.returnValue,\n      shiftKey: this.event.shiftKey,\n      timeStamp: this.event.timeStamp,\n      type: this.event.type,\n      which: this.event.which\n    };\n  }\n}\nfunction u(t) {\n  return t.toLowerCase().split(\"+\").sort().join(\"+\");\n}\nfunction l(t, e) {\n  if (function (t) {\n    return t.ctrlKey || t.shiftKey || t.altKey || t.metaKey || !!t.key && \"escape\" === t.key.toLowerCase();\n  }(e)) {\n    const r = function (t) {\n      return [t.ctrlKey && \"ctrl\", t.shiftKey && \"shift\", t.altKey && \"alt\", t.metaKey && \"meta\", t.key.toLowerCase()].filter(Boolean).sort().join(\"+\");\n    }(e);\n    if (t.has(r)) return {\n      matchedShortcut: r,\n      isOverridable: f.has(r)\n    };\n  }\n  return {\n    matchedShortcut: void 0,\n    isOverridable: !1\n  };\n}\nfunction d(t) {\n  y.clear(), t.shortcuts.forEach(t => {\n    y.add(u(t));\n  }), f.clear(), t.overridableShortcuts.forEach(t => {\n    f.add(u(t));\n  });\n}\nclass v extends s {\n  validate(t) {\n    return t && Array.isArray(t.shortcuts) && Array.isArray(t.overridableShortcuts);\n  }\n  deserialize(t) {\n    return t;\n  }\n}\nfunction m(t) {\n  if (t.target.closest(`[${g}]`)) return;\n  const {\n    matchedShortcut: r,\n    isOverridable: o\n  } = l(y, t);\n  if (!r) return;\n  if (o && p) {\n    if (p(t, {\n      matchedShortcut: r\n    })) return;\n  }\n  const n = new h(t);\n  e(\"shortcutRelay.forwardShortcutEvent\", [n], i(\"v2\", \"shortcutRelay.forwardShortcutEvent\")), t.preventDefault(), t.stopImmediatePropagation();\n}\nconst f = new Set(),\n  y = new Set();\nlet p,\n  b = !1;\nfunction w(t) {\n  if (!C()) throw a;\n  const e = p;\n  return p = t, e;\n}\nfunction K() {\n  if (!C()) throw a;\n  b = !1, y.clear(), f.clear(), p = void 0, document.removeEventListener(\"keydown\", m, {\n    capture: !0\n  });\n}\nfunction S() {\n  return t(this, void 0, void 0, function* () {\n    if (!C()) throw a;\n    var t;\n    d(yield r(\"shortcutRelay.getHostShortcuts\", [], new v(), i(\"v2\", \"shortcutRelay.getHostShortcuts\"))), b || document.addEventListener(\"keydown\", m, {\n      capture: !0\n    }), b = !0, t = t => {\n      d(t);\n    }, o(i(\"v2\", \"shortcutRelay.hostShortcutChanged\"), \"shortcutRelay.hostShortcutChanged\", t);\n  });\n}\nfunction C() {\n  return !(!n(c) || !c.supports.shortcutRelay);\n}\nconst g = \"data-disable-shortcuts-forwarding\";\nexport { g as DISABLE_SHORTCUT_FORWARDING_ATTRIBUTE, S as enableShortcutRelayCapability, C as isSupported, K as resetIsShortcutRelayCapabilityEnabled, w as setOverridableShortcutHandler };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
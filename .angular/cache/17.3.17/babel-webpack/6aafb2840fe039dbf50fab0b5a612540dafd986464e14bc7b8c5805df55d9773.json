{"ast":null,"code":"/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\nimport { SendReadReceiptRequest as SendReadReceiptRequestMapper, SendChatMessageRequest as SendChatMessageRequestMapper, UpdateChatMessageRequest as UpdateChatMessageRequestMapper, CommunicationIdentifierModel as CommunicationIdentifierModelMapper, AddChatParticipantsRequest as AddChatParticipantsRequestMapper, UpdateChatThreadRequest as UpdateChatThreadRequestMapper, SendTypingNotificationRequest as SendTypingNotificationRequestMapper, CreateChatThreadRequest as CreateChatThreadRequestMapper } from \"../models/mappers.js\";\nexport const accept = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const endpoint = {\n  parameterPath: \"endpoint\",\n  mapper: {\n    serializedName: \"endpoint\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\nexport const chatThreadId = {\n  parameterPath: \"chatThreadId\",\n  mapper: {\n    serializedName: \"chatThreadId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const maxPageSize = {\n  parameterPath: [\"options\", \"maxPageSize\"],\n  mapper: {\n    serializedName: \"maxPageSize\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const skip = {\n  parameterPath: [\"options\", \"skip\"],\n  mapper: {\n    serializedName: \"skip\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const apiVersion = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2025-03-15\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const contentType = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const sendReadReceiptRequest = {\n  parameterPath: \"sendReadReceiptRequest\",\n  mapper: SendReadReceiptRequestMapper\n};\nexport const sendChatMessageRequest = {\n  parameterPath: \"sendChatMessageRequest\",\n  mapper: SendChatMessageRequestMapper\n};\nexport const startTime = {\n  parameterPath: [\"options\", \"startTime\"],\n  mapper: {\n    serializedName: \"startTime\",\n    type: {\n      name: \"DateTime\"\n    }\n  }\n};\nexport const chatMessageId = {\n  parameterPath: \"chatMessageId\",\n  mapper: {\n    serializedName: \"chatMessageId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const contentType1 = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/merge-patch+json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const updateChatMessageRequest = {\n  parameterPath: \"updateChatMessageRequest\",\n  mapper: UpdateChatMessageRequestMapper\n};\nexport const participantCommunicationIdentifier = {\n  parameterPath: \"participantCommunicationIdentifier\",\n  mapper: CommunicationIdentifierModelMapper\n};\nexport const addChatParticipantsRequest = {\n  parameterPath: \"addChatParticipantsRequest\",\n  mapper: AddChatParticipantsRequestMapper\n};\nexport const updateChatThreadRequest = {\n  parameterPath: \"updateChatThreadRequest\",\n  mapper: UpdateChatThreadRequestMapper\n};\nexport const sendTypingNotificationRequest = {\n  parameterPath: [\"options\", \"sendTypingNotificationRequest\"],\n  mapper: SendTypingNotificationRequestMapper\n};\nexport const nextLink = {\n  parameterPath: \"nextLink\",\n  mapper: {\n    serializedName: \"nextLink\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\nexport const createChatThreadRequest = {\n  parameterPath: \"createChatThreadRequest\",\n  mapper: CreateChatThreadRequestMapper\n};\nexport const repeatabilityRequestId = {\n  parameterPath: [\"options\", \"repeatabilityRequestId\"],\n  mapper: {\n    serializedName: \"repeatability-request-id\",\n    type: {\n      name: \"String\"\n    }\n  }\n};","map":{"version":3,"names":["SendReadReceiptRequest","SendReadReceiptRequestMapper","SendChatMessageRequest","SendChatMessageRequestMapper","UpdateChatMessageRequest","UpdateChatMessageRequestMapper","CommunicationIdentifierModel","CommunicationIdentifierModelMapper","AddChatParticipantsRequest","AddChatParticipantsRequestMapper","UpdateChatThreadRequest","UpdateChatThreadRequestMapper","SendTypingNotificationRequest","SendTypingNotificationRequestMapper","CreateChatThreadRequest","CreateChatThreadRequestMapper","accept","parameterPath","mapper","defaultValue","isConstant","serializedName","type","name","endpoint","required","skipEncoding","chatThreadId","maxPageSize","skip","apiVersion","contentType","sendReadReceiptRequest","sendChatMessageRequest","startTime","chatMessageId","contentType1","updateChatMessageRequest","participantCommunicationIdentifier","addChatParticipantsRequest","updateChatThreadRequest","sendTypingNotificationRequest","nextLink","createChatThreadRequest","repeatabilityRequestId"],"sources":["D:/Project/github-teams/teams-app-new/node_modules/@azure/communication-chat/dist/browser/generated/src/models/parameters.js"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\nimport { SendReadReceiptRequest as SendReadReceiptRequestMapper, SendChatMessageRequest as SendChatMessageRequestMapper, UpdateChatMessageRequest as UpdateChatMessageRequestMapper, CommunicationIdentifierModel as CommunicationIdentifierModelMapper, AddChatParticipantsRequest as AddChatParticipantsRequestMapper, UpdateChatThreadRequest as UpdateChatThreadRequestMapper, SendTypingNotificationRequest as SendTypingNotificationRequestMapper, CreateChatThreadRequest as CreateChatThreadRequestMapper, } from \"../models/mappers.js\";\nexport const accept = {\n    parameterPath: \"accept\",\n    mapper: {\n        defaultValue: \"application/json\",\n        isConstant: true,\n        serializedName: \"Accept\",\n        type: {\n            name: \"String\",\n        },\n    },\n};\nexport const endpoint = {\n    parameterPath: \"endpoint\",\n    mapper: {\n        serializedName: \"endpoint\",\n        required: true,\n        type: {\n            name: \"String\",\n        },\n    },\n    skipEncoding: true,\n};\nexport const chatThreadId = {\n    parameterPath: \"chatThreadId\",\n    mapper: {\n        serializedName: \"chatThreadId\",\n        required: true,\n        type: {\n            name: \"String\",\n        },\n    },\n};\nexport const maxPageSize = {\n    parameterPath: [\"options\", \"maxPageSize\"],\n    mapper: {\n        serializedName: \"maxPageSize\",\n        type: {\n            name: \"Number\",\n        },\n    },\n};\nexport const skip = {\n    parameterPath: [\"options\", \"skip\"],\n    mapper: {\n        serializedName: \"skip\",\n        type: {\n            name: \"Number\",\n        },\n    },\n};\nexport const apiVersion = {\n    parameterPath: \"apiVersion\",\n    mapper: {\n        defaultValue: \"2025-03-15\",\n        isConstant: true,\n        serializedName: \"api-version\",\n        type: {\n            name: \"String\",\n        },\n    },\n};\nexport const contentType = {\n    parameterPath: [\"options\", \"contentType\"],\n    mapper: {\n        defaultValue: \"application/json\",\n        isConstant: true,\n        serializedName: \"Content-Type\",\n        type: {\n            name: \"String\",\n        },\n    },\n};\nexport const sendReadReceiptRequest = {\n    parameterPath: \"sendReadReceiptRequest\",\n    mapper: SendReadReceiptRequestMapper,\n};\nexport const sendChatMessageRequest = {\n    parameterPath: \"sendChatMessageRequest\",\n    mapper: SendChatMessageRequestMapper,\n};\nexport const startTime = {\n    parameterPath: [\"options\", \"startTime\"],\n    mapper: {\n        serializedName: \"startTime\",\n        type: {\n            name: \"DateTime\",\n        },\n    },\n};\nexport const chatMessageId = {\n    parameterPath: \"chatMessageId\",\n    mapper: {\n        serializedName: \"chatMessageId\",\n        required: true,\n        type: {\n            name: \"String\",\n        },\n    },\n};\nexport const contentType1 = {\n    parameterPath: [\"options\", \"contentType\"],\n    mapper: {\n        defaultValue: \"application/merge-patch+json\",\n        isConstant: true,\n        serializedName: \"Content-Type\",\n        type: {\n            name: \"String\",\n        },\n    },\n};\nexport const updateChatMessageRequest = {\n    parameterPath: \"updateChatMessageRequest\",\n    mapper: UpdateChatMessageRequestMapper,\n};\nexport const participantCommunicationIdentifier = {\n    parameterPath: \"participantCommunicationIdentifier\",\n    mapper: CommunicationIdentifierModelMapper,\n};\nexport const addChatParticipantsRequest = {\n    parameterPath: \"addChatParticipantsRequest\",\n    mapper: AddChatParticipantsRequestMapper,\n};\nexport const updateChatThreadRequest = {\n    parameterPath: \"updateChatThreadRequest\",\n    mapper: UpdateChatThreadRequestMapper,\n};\nexport const sendTypingNotificationRequest = {\n    parameterPath: [\"options\", \"sendTypingNotificationRequest\"],\n    mapper: SendTypingNotificationRequestMapper,\n};\nexport const nextLink = {\n    parameterPath: \"nextLink\",\n    mapper: {\n        serializedName: \"nextLink\",\n        required: true,\n        type: {\n            name: \"String\",\n        },\n    },\n    skipEncoding: true,\n};\nexport const createChatThreadRequest = {\n    parameterPath: \"createChatThreadRequest\",\n    mapper: CreateChatThreadRequestMapper,\n};\nexport const repeatabilityRequestId = {\n    parameterPath: [\"options\", \"repeatabilityRequestId\"],\n    mapper: {\n        serializedName: \"repeatability-request-id\",\n        type: {\n            name: \"String\",\n        },\n    },\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
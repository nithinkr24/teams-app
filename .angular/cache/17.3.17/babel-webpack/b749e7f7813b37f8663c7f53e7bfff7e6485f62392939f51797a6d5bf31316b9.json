{"ast":null,"code":"import { sendMessageToParent as r } from \"../../internal/communication.js\";\nimport { ensureInitialized as e } from \"../../internal/internalAPIs.js\";\nimport { getApiVersionTag as t } from \"../../internal/telemetry.js\";\nimport { FrameContexts as n, errorNotSupportedOnPlatform as a } from \"../../public/constants.js\";\nimport { runtime as o } from \"../../public/runtime.js\";\nimport * as l from \"./fullTrust/fullTrust.js\";\nexport { l as fullTrust };\nvar i;\nfunction m(l, i) {\n  if (e(o, n.content), !f()) throw a;\n  if (!l) throw new Error(\"[teams.getTeamChannels] groupId cannot be null or empty\");\n  if (!i) throw new Error(\"[teams.getTeamChannels] Callback cannot be null\");\n  r(t(\"v1\", \"teams.getTeamChannels\"), \"teams.getTeamChannels\", [l], i);\n}\nfunction s(n, l) {\n  if (e(o), !f()) throw a;\n  if (!n) throw new Error(\"[teams.refreshSiteUrl] threadId cannot be null or empty\");\n  if (!l) throw new Error(\"[teams.refreshSiteUrl] Callback cannot be null\");\n  r(t(\"v1\", \"teams.refreshSiteUrl\"), \"teams.refreshSiteUrl\", [n], l);\n}\nfunction f() {\n  return !(!e(o) || !o.supports.teams);\n}\n!function (r) {\n  r[r.Regular = 0] = \"Regular\", r[r.Private = 1] = \"Private\", r[r.Shared = 2] = \"Shared\";\n}(i || (i = {}));\nexport { i as ChannelType, m as getTeamChannels, f as isSupported, s as refreshSiteUrl };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
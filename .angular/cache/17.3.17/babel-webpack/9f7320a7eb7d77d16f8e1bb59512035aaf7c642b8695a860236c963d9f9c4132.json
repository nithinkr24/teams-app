{"ast":null,"code":"import { __awaiter as i } from \"../../../../node_modules/.pnpm/@rollup_plugin-typescript@11.1.6_rollup@4.24.4_tslib@2.6.3_typescript@4.9.5/node_modules/tslib/tslib.es6.js\";\nimport { sendMessageToParent as e, sendAndHandleStatusAndReason as t, callFunctionInHostAndHandleResponse as n, initializeCommunication as o } from \"./communication.js\";\nimport { errorLibraryNotInitialized as r, defaultSDKVersionForCompatCheck as s } from \"./constants.js\";\nimport { GlobalVars as l } from \"./globalVars.js\";\nimport { registerOnThemeChangeHandler as a, initializeHandlers as p } from \"./handlers.js\";\nimport { ensureInitializeCalled as u, ensureInitialized as m, processAdditionalValidOrigins as c } from \"./internalAPIs.js\";\nimport { getLogger as f } from \"./telemetry.js\";\nimport { isNullOrUndefined as d } from \"./typeCheckUtilities.js\";\nimport { inServerSideRenderingEnvironment as g, runWithTimeout as h, normalizeAgeGroupValue as S, compareSDKVersions as j } from \"./utils.js\";\nimport { Messages as v } from \"../public/app/app.js\";\nimport { FrameContexts as w } from \"../public/constants.js\";\nimport { initialize as y } from \"../public/dialog/dialog.js\";\nimport { initialize as z } from \"../public/menus.js\";\nimport { runtime as b, applyRuntimeConfig as P, generateVersionBasedTeamsRuntimeConfig as C, mapTeamsVersionToSupportedCapabilities as x, versionAndPlatformAgnosticTeamsRuntimeConfig as D } from \"../public/runtime.js\";\nimport { version as E } from \"../public/version.js\";\nimport { SimpleTypeResponseHandler as V } from \"./responseHandler.js\";\nimport { initialize as K } from \"../public/pages/config.js\";\nconst _ = f(\"app\");\nfunction k(i, e) {\n  if (g()) {\n    return _.extend(\"initialize\")(\"window object undefined at initialization\"), Promise.resolve();\n  }\n  return h(() => function (i, e) {\n    return new Promise(t => {\n      l.initializeCalled || (l.initializeCalled = !0, p(), l.initializePromise = o(e, i).then(({\n        context: i,\n        clientType: e,\n        runtimeConfig: t,\n        clientSupportedSDKVersion: n = s\n      }) => {\n        l.frameContext = i, l.hostClientType = e, l.clientSupportedSDKVersion = n;\n        try {\n          J(\"Parsing %s\", t);\n          let i = JSON.parse(t);\n          if (J(\"Checking if %o is a valid runtime object\", null != i ? i : \"null\"), !i || !i.apiVersion) throw new Error(\"Received runtime config is invalid\");\n          i = S(i), t && P(i);\n        } catch (i) {\n          if (!(i instanceof SyntaxError)) throw i;\n          try {\n            J(\"Attempting to parse %s as an SDK version\", t), isNaN(j(t, s)) || (l.clientSupportedSDKVersion = t);\n            let i = JSON.parse(n);\n            if (J(\"givenRuntimeConfig parsed to %o\", null != i ? i : \"null\"), !i) throw new Error(\"givenRuntimeConfig string was successfully parsed. However, it parsed to value of null\");\n            i = S(i), P(i);\n          } catch (i) {\n            if (!(i instanceof SyntaxError)) throw i;\n            P(C(l.clientSupportedSDKVersion, D, x));\n          }\n        }\n        l.initializeCompleted = !0;\n      }), z(), K(), y()), Array.isArray(e) && c(e), void 0 !== l.initializePromise ? t(l.initializePromise) : J(\"GlobalVars.initializePromise is unexpectedly undefined\");\n    });\n  }(i, e), 6e4, new Error(\"SDK initialization timed out.\"));\n}\nfunction A(i) {\n  e(i, v.AppLoaded, [E]);\n}\nfunction F(i, t) {\n  e(i, v.ExpectedFailure, [t.reason, t.message]);\n}\nfunction N(i, t) {\n  e(i, v.Failure, [t.reason, t.message]);\n}\nfunction R(e) {\n  return i(this, void 0, void 0, function* () {\n    if (l.initializeCompleted) return H(e);\n    if (!l.initializePromise) throw new Error(r);\n    return l.initializePromise.then(() => H(e));\n  });\n}\nfunction H(t) {\n  return i(this, void 0, void 0, function* () {\n    return m(b) && (null === (i = b.supports.app) || void 0 === i ? void 0 : i.notifySuccessResponse) ? n(v.Success, [E], new V(), t).then(() => ({\n      hasFinishedSuccessfully: !0\n    })) : (e(t, v.Success, [E]), {\n      hasFinishedSuccessfully: \"unknown\"\n    });\n    var i;\n  });\n}\nconst J = _.extend(\"initializeHelper\");\nfunction L(i, e) {\n  !d(e) && u(), a(i, e);\n}\nfunction O(i, e) {\n  return new Promise(n => {\n    m(b, w.content, w.sidePanel, w.settings, w.task, w.stage, w.meetingStage), n(t(i, \"executeDeepLink\", e));\n  });\n}\nexport { k as appInitializeHelper, H as callNotifySuccessInHost, A as notifyAppLoadedHelper, F as notifyExpectedFailureHelper, N as notifyFailureHelper, R as notifySuccessHelper, O as openLinkHelper, L as registerOnThemeChangeHandlerHelper };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * Helper function to convert OperationOptions to RequestParameters\n * @param options - the options that are used by Modular layer to send the request\n * @returns the result of the conversion in RequestParameters of RLC layer\n */\nexport function operationOptionsToRequestParameters(options) {\n  var _a, _b, _c, _d, _e, _f;\n  return {\n    allowInsecureConnection: (_a = options.requestOptions) === null || _a === void 0 ? void 0 : _a.allowInsecureConnection,\n    timeout: (_b = options.requestOptions) === null || _b === void 0 ? void 0 : _b.timeout,\n    skipUrlEncoding: (_c = options.requestOptions) === null || _c === void 0 ? void 0 : _c.skipUrlEncoding,\n    abortSignal: options.abortSignal,\n    onUploadProgress: (_d = options.requestOptions) === null || _d === void 0 ? void 0 : _d.onUploadProgress,\n    onDownloadProgress: (_e = options.requestOptions) === null || _e === void 0 ? void 0 : _e.onDownloadProgress,\n    headers: Object.assign({}, (_f = options.requestOptions) === null || _f === void 0 ? void 0 : _f.headers),\n    onResponse: options.onResponse\n  };\n}\n//# sourceMappingURL=operationOptionHelpers.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { exponentialRetryStrategy } from \"../retryStrategies/exponentialRetryStrategy.js\";\nimport { retryPolicy } from \"./retryPolicy.js\";\nimport { DEFAULT_RETRY_POLICY_COUNT } from \"../constants.js\";\n/**\n * Name of the {@link systemErrorRetryPolicy}\n */\nexport const systemErrorRetryPolicyName = \"systemErrorRetryPolicy\";\n/**\n * A retry policy that specifically seeks to handle errors in the\n * underlying transport layer (e.g. DNS lookup failures) rather than\n * retryable error codes from the server itself.\n * @param options - Options that customize the policy.\n */\nexport function systemErrorRetryPolicy(options = {}) {\n  var _a;\n  return {\n    name: systemErrorRetryPolicyName,\n    sendRequest: retryPolicy([exponentialRetryStrategy(Object.assign(Object.assign({}, options), {\n      ignoreHttpStatusCodes: true\n    }))], {\n      maxRetries: (_a = options.maxRetries) !== null && _a !== void 0 ? _a : DEFAULT_RETRY_POLICY_COUNT\n    }).sendRequest\n  };\n}\n//# sourceMappingURL=systemErrorRetryPolicy.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
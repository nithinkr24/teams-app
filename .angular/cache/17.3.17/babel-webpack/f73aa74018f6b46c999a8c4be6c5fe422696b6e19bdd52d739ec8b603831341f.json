{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { getIdentifierKind, getIdentifierRawId } from \"./identifierModels.js\";\nconst assertNotNullOrUndefined = (obj, prop) => {\n  const subObjName = Object.keys(obj)[0];\n  const subObj = obj[subObjName];\n  if (prop in subObj) {\n    return subObj[prop];\n  }\n  throw new Error(`Property ${prop} is required for identifier of type ${subObjName}.`);\n};\nconst assertMaximumOneNestedModel = identifier => {\n  const presentProperties = [];\n  if (identifier.communicationUser !== undefined) {\n    presentProperties.push(\"communicationUser\");\n  }\n  if (identifier.microsoftTeamsUser !== undefined) {\n    presentProperties.push(\"microsoftTeamsUser\");\n  }\n  if (identifier.microsoftTeamsApp !== undefined) {\n    presentProperties.push(\"microsoftTeamsApp\");\n  }\n  if (identifier.phoneNumber !== undefined) {\n    presentProperties.push(\"phoneNumber\");\n  }\n  if (identifier.teamsExtensionUser !== undefined) {\n    presentProperties.push(\"teamsExtensionUser\");\n  }\n  if (presentProperties.length > 1) {\n    throw new Error(`Only one of the properties in ${JSON.stringify(presentProperties)} should be present.`);\n  }\n};\n/**\n * @hidden\n * Translates a CommunicationIdentifier to its serialized format for sending a request.\n * @param identifier - The CommunicationIdentifier to be serialized.\n */\nexport const serializeCommunicationIdentifier = identifier => {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n  const identifierKind = getIdentifierKind(identifier);\n  switch (identifierKind.kind) {\n    case \"communicationUser\":\n      return {\n        rawId: getIdentifierRawId(identifierKind),\n        communicationUser: {\n          id: identifierKind.communicationUserId\n        }\n      };\n    case \"phoneNumber\":\n      return {\n        rawId: (_a = identifierKind.rawId) !== null && _a !== void 0 ? _a : getIdentifierRawId(identifierKind),\n        phoneNumber: {\n          value: identifierKind.phoneNumber,\n          isAnonymous: (_b = identifierKind.isAnonymous) !== null && _b !== void 0 ? _b : false,\n          assertedId: identifierKind.assertedId\n        }\n      };\n    case \"microsoftTeamsUser\":\n      return {\n        rawId: (_c = identifierKind.rawId) !== null && _c !== void 0 ? _c : getIdentifierRawId(identifierKind),\n        microsoftTeamsUser: {\n          userId: identifierKind.microsoftTeamsUserId,\n          isAnonymous: (_d = identifierKind.isAnonymous) !== null && _d !== void 0 ? _d : false,\n          cloud: (_e = identifierKind.cloud) !== null && _e !== void 0 ? _e : \"public\"\n        }\n      };\n    case \"microsoftTeamsApp\":\n      return {\n        rawId: (_f = identifierKind.rawId) !== null && _f !== void 0 ? _f : getIdentifierRawId(identifierKind),\n        microsoftTeamsApp: {\n          appId: identifierKind.teamsAppId,\n          cloud: (_g = identifierKind.cloud) !== null && _g !== void 0 ? _g : \"public\"\n        }\n      };\n    case \"teamsExtensionUser\":\n      return {\n        rawId: (_h = identifierKind.rawId) !== null && _h !== void 0 ? _h : getIdentifierRawId(identifierKind),\n        teamsExtensionUser: {\n          userId: identifierKind.userId,\n          tenantId: identifierKind.tenantId,\n          resourceId: identifierKind.resourceId,\n          cloud: (_j = identifierKind.cloud) !== null && _j !== void 0 ? _j : \"public\"\n        }\n      };\n    case \"unknown\":\n      return {\n        rawId: identifierKind.id\n      };\n    default:\n      throw new Error(`Can't serialize an identifier with kind ${identifierKind.kind}`);\n  }\n};\nconst getKind = serializedIdentifier => {\n  if (serializedIdentifier.communicationUser) {\n    return \"communicationUser\";\n  }\n  if (serializedIdentifier.phoneNumber) {\n    return \"phoneNumber\";\n  }\n  if (serializedIdentifier.microsoftTeamsUser) {\n    return \"microsoftTeamsUser\";\n  }\n  if (serializedIdentifier.microsoftTeamsApp) {\n    return \"microsoftTeamsApp\";\n  }\n  if (serializedIdentifier.teamsExtensionUser) {\n    return \"teamsExtensionUser\";\n  }\n  return \"unknown\";\n};\n/**\n * @hidden\n * Translates the serialized format of a communication identifier to CommunicationIdentifier.\n * @param serializedIdentifier - The SerializedCommunicationIdentifier to be deserialized.\n */\nexport const deserializeCommunicationIdentifier = serializedIdentifier => {\n  var _a, _b;\n  assertMaximumOneNestedModel(serializedIdentifier);\n  const communicationUser = serializedIdentifier.communicationUser;\n  const microsoftTeamsUser = serializedIdentifier.microsoftTeamsUser;\n  const microsoftTeamsApp = serializedIdentifier.microsoftTeamsApp;\n  const phoneNumber = serializedIdentifier.phoneNumber;\n  const teamsExtensionUser = serializedIdentifier.teamsExtensionUser;\n  const kind = (_a = serializedIdentifier.kind) !== null && _a !== void 0 ? _a : getKind(serializedIdentifier);\n  if (kind === \"communicationUser\" && communicationUser) {\n    return {\n      kind: \"communicationUser\",\n      communicationUserId: assertNotNullOrUndefined({\n        communicationUser\n      }, \"id\")\n    };\n  }\n  if (kind === \"phoneNumber\" && phoneNumber) {\n    return {\n      kind: \"phoneNumber\",\n      phoneNumber: assertNotNullOrUndefined({\n        phoneNumber\n      }, \"value\"),\n      rawId: assertNotNullOrUndefined({\n        phoneNumber: serializedIdentifier\n      }, \"rawId\"),\n      isAnonymous: (_b = phoneNumber.isAnonymous) !== null && _b !== void 0 ? _b : false,\n      assertedId: phoneNumber.assertedId\n    };\n  }\n  if (kind === \"microsoftTeamsUser\" && microsoftTeamsUser) {\n    return {\n      kind: \"microsoftTeamsUser\",\n      microsoftTeamsUserId: assertNotNullOrUndefined({\n        microsoftTeamsUser\n      }, \"userId\"),\n      isAnonymous: assertNotNullOrUndefined({\n        microsoftTeamsUser\n      }, \"isAnonymous\"),\n      cloud: assertNotNullOrUndefined({\n        microsoftTeamsUser\n      }, \"cloud\"),\n      rawId: assertNotNullOrUndefined({\n        microsoftTeamsUser: serializedIdentifier\n      }, \"rawId\")\n    };\n  }\n  if (kind === \"microsoftTeamsApp\" && microsoftTeamsApp) {\n    return {\n      kind: \"microsoftTeamsApp\",\n      teamsAppId: assertNotNullOrUndefined({\n        microsoftTeamsApp\n      }, \"appId\"),\n      cloud: assertNotNullOrUndefined({\n        microsoftTeamsApp\n      }, \"cloud\"),\n      rawId: assertNotNullOrUndefined({\n        microsoftTeamsApp: serializedIdentifier\n      }, \"rawId\")\n    };\n  }\n  if (kind === \"teamsExtensionUser\" && teamsExtensionUser) {\n    return {\n      kind: \"teamsExtensionUser\",\n      userId: assertNotNullOrUndefined({\n        teamsExtensionUser\n      }, \"userId\"),\n      tenantId: assertNotNullOrUndefined({\n        teamsExtensionUser\n      }, \"tenantId\"),\n      resourceId: assertNotNullOrUndefined({\n        teamsExtensionUser\n      }, \"resourceId\"),\n      cloud: assertNotNullOrUndefined({\n        teamsExtensionUser\n      }, \"cloud\"),\n      rawId: assertNotNullOrUndefined({\n        teamsExtensionUser: serializedIdentifier\n      }, \"rawId\")\n    };\n  }\n  return {\n    kind: \"unknown\",\n    id: assertNotNullOrUndefined({\n      unknown: serializedIdentifier\n    }, \"rawId\")\n  };\n};\n//# sourceMappingURL=identifierModelSerializer.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
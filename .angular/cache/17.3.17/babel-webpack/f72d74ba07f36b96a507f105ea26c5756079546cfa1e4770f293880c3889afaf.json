{"ast":null,"code":"import { sendAndHandleSdkError as e } from \"../internal/communication.js\";\nimport { ensureInitialized as t } from \"../internal/internalAPIs.js\";\nimport { getApiVersionTag as n } from \"../internal/telemetry.js\";\nimport { FrameContexts as i } from \"./constants.js\";\nimport { runtime as r } from \"./runtime.js\";\nconst o = \"v2\";\nvar a, s;\nfunction d() {\n  return !(!t(r, i.meetingStage, i.sidePanel, i.content) || !r.supports.interactive);\n}\n!function (e) {\n  e.guest = \"Guest\", e.attendee = \"Attendee\", e.presenter = \"Presenter\", e.organizer = \"Organizer\";\n}(a || (a = {})), function (e) {\n  e.added = \"Added\", e.alreadyExists = \"AlreadyExists\", e.conflict = \"Conflict\", e.notFound = \"NotFound\";\n}(s || (s = {}));\nclass l {\n  getFluidTenantInfo() {\n    return u(), new Promise(t => {\n      t(e(n(o, \"interactive.getFluidTenantInfo\"), \"interactive.getFluidTenantInfo\"));\n    });\n  }\n  getFluidToken(t) {\n    return u(), new Promise(i => {\n      i(e(n(o, \"interactive.getFluidToken\"), \"interactive.getFluidToken\", t));\n    });\n  }\n  getFluidContainerId() {\n    return u(), new Promise(t => {\n      t(e(n(o, \"interactive.getFluidContainerId\"), \"interactive.getFluidContainerId\"));\n    });\n  }\n  setFluidContainerId(t) {\n    return u(), new Promise(i => {\n      i(e(n(o, \"interactive.setFluidContainerId\"), \"interactive.setFluidContainerId\", t));\n    });\n  }\n  getNtpTime() {\n    return u(), new Promise(t => {\n      t(e(n(o, \"interactive.getNtpTime\"), \"interactive.getNtpTime\"));\n    });\n  }\n  registerClientId(t) {\n    return u(), new Promise(i => {\n      i(e(n(o, \"interactive.registerClientId\"), \"interactive.registerClientId\", t));\n    });\n  }\n  getClientRoles(t) {\n    return u(), new Promise(i => {\n      i(e(n(o, \"interactive.getClientRoles\"), \"interactive.getClientRoles\", t));\n    });\n  }\n  getClientInfo(t) {\n    return u(), new Promise(i => {\n      i(e(n(o, \"interactive.getClientInfo\"), \"interactive.getClientInfo\", t));\n    });\n  }\n  static create() {\n    return u(), new l();\n  }\n}\nfunction u() {\n  if (!d()) throw new Error(\"LiveShareHost Not supported\");\n}\nexport { s as ContainerState, l as LiveShareHost, a as UserMeetingRole, d as isSupported };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _asyncToGenerator from \"D:/Project/github-teams/teams-app-new/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { stringToUint8Array, uint8ArrayToString } from \"../../util/bytesEncoding.js\";\nimport { ensureSecureConnection } from \"./checkInsecureConnection.js\";\n/**\n * Name of the Basic Authentication Policy\n */\nexport const basicAuthenticationPolicyName = \"bearerAuthenticationPolicy\";\n/**\n * Gets a pipeline policy that adds basic authentication to requests\n */\nexport function basicAuthenticationPolicy(options) {\n  return {\n    name: basicAuthenticationPolicyName,\n    sendRequest(request, next) {\n      return _asyncToGenerator(function* () {\n        var _a, _b;\n        // Ensure allowInsecureConnection is explicitly set when sending request to non-https URLs\n        ensureSecureConnection(request, options);\n        const scheme = (_b = (_a = request.authSchemes) !== null && _a !== void 0 ? _a : options.authSchemes) === null || _b === void 0 ? void 0 : _b.find(x => x.kind === \"http\" && x.scheme === \"basic\");\n        // Skip adding authentication header if no basic authentication scheme is found\n        if (!scheme) {\n          return next(request);\n        }\n        const {\n          username,\n          password\n        } = options.credential;\n        const headerValue = uint8ArrayToString(stringToUint8Array(`${username}:${password}`, \"utf-8\"), \"base64\");\n        request.headers.set(\"Authorization\", `Basic ${headerValue}`);\n        return next(request);\n      })();\n    }\n  };\n}","map":{"version":3,"names":["stringToUint8Array","uint8ArrayToString","ensureSecureConnection","basicAuthenticationPolicyName","basicAuthenticationPolicy","options","name","sendRequest","request","next","_asyncToGenerator","_a","_b","scheme","authSchemes","find","x","kind","username","password","credential","headerValue","headers","set"],"sources":["D:/Project/github-teams/teams-app-new/node_modules/@typespec/ts-http-runtime/dist/browser/policies/auth/basicAuthenticationPolicy.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { stringToUint8Array, uint8ArrayToString } from \"../../util/bytesEncoding.js\";\nimport { ensureSecureConnection } from \"./checkInsecureConnection.js\";\n/**\n * Name of the Basic Authentication Policy\n */\nexport const basicAuthenticationPolicyName = \"bearerAuthenticationPolicy\";\n/**\n * Gets a pipeline policy that adds basic authentication to requests\n */\nexport function basicAuthenticationPolicy(options) {\n    return {\n        name: basicAuthenticationPolicyName,\n        async sendRequest(request, next) {\n            var _a, _b;\n            // Ensure allowInsecureConnection is explicitly set when sending request to non-https URLs\n            ensureSecureConnection(request, options);\n            const scheme = (_b = ((_a = request.authSchemes) !== null && _a !== void 0 ? _a : options.authSchemes)) === null || _b === void 0 ? void 0 : _b.find((x) => x.kind === \"http\" && x.scheme === \"basic\");\n            // Skip adding authentication header if no basic authentication scheme is found\n            if (!scheme) {\n                return next(request);\n            }\n            const { username, password } = options.credential;\n            const headerValue = uint8ArrayToString(stringToUint8Array(`${username}:${password}`, \"utf-8\"), \"base64\");\n            request.headers.set(\"Authorization\", `Basic ${headerValue}`);\n            return next(request);\n        },\n    };\n}\n"],"mappings":";AAAA;AACA;AACA,SAASA,kBAAkB,EAAEC,kBAAkB,QAAQ,6BAA6B;AACpF,SAASC,sBAAsB,QAAQ,8BAA8B;AACrE;AACA;AACA;AACA,OAAO,MAAMC,6BAA6B,GAAG,4BAA4B;AACzE;AACA;AACA;AACA,OAAO,SAASC,yBAAyBA,CAACC,OAAO,EAAE;EAC/C,OAAO;IACHC,IAAI,EAAEH,6BAA6B;IAC7BI,WAAWA,CAACC,OAAO,EAAEC,IAAI,EAAE;MAAA,OAAAC,iBAAA;QAC7B,IAAIC,EAAE,EAAEC,EAAE;QACV;QACAV,sBAAsB,CAACM,OAAO,EAAEH,OAAO,CAAC;QACxC,MAAMQ,MAAM,GAAG,CAACD,EAAE,GAAI,CAACD,EAAE,GAAGH,OAAO,CAACM,WAAW,MAAM,IAAI,IAAIH,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGN,OAAO,CAACS,WAAY,MAAM,IAAI,IAAIF,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACG,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAI,KAAK,MAAM,IAAID,CAAC,CAACH,MAAM,KAAK,OAAO,CAAC;QACtM;QACA,IAAI,CAACA,MAAM,EAAE;UACT,OAAOJ,IAAI,CAACD,OAAO,CAAC;QACxB;QACA,MAAM;UAAEU,QAAQ;UAAEC;QAAS,CAAC,GAAGd,OAAO,CAACe,UAAU;QACjD,MAAMC,WAAW,GAAGpB,kBAAkB,CAACD,kBAAkB,CAAC,GAAGkB,QAAQ,IAAIC,QAAQ,EAAE,EAAE,OAAO,CAAC,EAAE,QAAQ,CAAC;QACxGX,OAAO,CAACc,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE,SAASF,WAAW,EAAE,CAAC;QAC5D,OAAOZ,IAAI,CAACD,OAAO,CAAC;MAAC;IACzB;EACJ,CAAC;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
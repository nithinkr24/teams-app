{"ast":null,"code":"import { sendMessageToParent as t, callFunctionInHost as r } from \"../internal/communication.js\";\nimport { registerHandler as n, removeHandler as o } from \"../internal/handlers.js\";\nimport { ensureInitialized as i } from \"../internal/internalAPIs.js\";\nimport { getApiVersionTag as e } from \"../internal/telemetry.js\";\nimport { isNullOrUndefined as p } from \"../internal/typeCheckUtilities.js\";\nimport { ErrorCode as l } from \"../public/interfaces.js\";\nimport { runtime as s } from \"../public/runtime.js\";\nconst m = \"v2\";\nfunction a(t) {\n  if (!A()) throw new Error(l.NOT_SUPPORTED_ON_PLATFORM.toString());\n  if (p(t)) throw new Error(l.INVALID_ARGUMENTS.toString());\n  n(e(m, \"otherApp.install\"), \"otherApp.install\", t);\n}\nfunction f() {\n  if (!A()) throw new Error(l.NOT_SUPPORTED_ON_PLATFORM.toString());\n  t(e(m, \"otherApp.unregisterInstall\"), \"otherApp.unregisterInstall\"), o(\"otherApp.install\");\n}\nfunction h(t) {\n  if (!A()) throw new Error(l.NOT_SUPPORTED_ON_PLATFORM.toString());\n  return r(\"otherApp.notifyInstallCompleted\", [t.toString()], e(m, \"otherApp.notifyInstallCompleted\"));\n}\nfunction A() {\n  return !(!i(s) || !s.supports.otherAppStateChange);\n}\nexport { A as isSupported, h as notifyInstallCompleted, a as registerAppInstallationHandler, f as unregisterAppInstallationHandler };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
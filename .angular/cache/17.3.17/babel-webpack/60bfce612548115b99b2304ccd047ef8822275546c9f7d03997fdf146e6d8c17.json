{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/** @internal */\nexport const knownContextKeys = {\n  span: Symbol.for(\"@azure/core-tracing span\"),\n  namespace: Symbol.for(\"@azure/core-tracing namespace\")\n};\n/**\n * Creates a new {@link TracingContext} with the given options.\n * @param options - A set of known keys that may be set on the context.\n * @returns A new {@link TracingContext} with the given options.\n *\n * @internal\n */\nexport function createTracingContext(options = {}) {\n  let context = new TracingContextImpl(options.parentContext);\n  if (options.span) {\n    context = context.setValue(knownContextKeys.span, options.span);\n  }\n  if (options.namespace) {\n    context = context.setValue(knownContextKeys.namespace, options.namespace);\n  }\n  return context;\n}\n/** @internal */\nexport class TracingContextImpl {\n  constructor(initialContext) {\n    this._contextMap = initialContext instanceof TracingContextImpl ? new Map(initialContext._contextMap) : new Map();\n  }\n  setValue(key, value) {\n    const newContext = new TracingContextImpl(this);\n    newContext._contextMap.set(key, value);\n    return newContext;\n  }\n  getValue(key) {\n    return this._contextMap.get(key);\n  }\n  deleteValue(key) {\n    const newContext = new TracingContextImpl(this);\n    newContext._contextMap.delete(key);\n    return newContext;\n  }\n}","map":{"version":3,"names":["knownContextKeys","span","Symbol","for","namespace","createTracingContext","options","context","TracingContextImpl","parentContext","setValue","constructor","initialContext","_contextMap","Map","key","value","newContext","set","getValue","get","deleteValue","delete"],"sources":["D:/Project/github-teams/teams-app-new/node_modules/@azure/core-tracing/dist/browser/tracingContext.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/** @internal */\nexport const knownContextKeys = {\n    span: Symbol.for(\"@azure/core-tracing span\"),\n    namespace: Symbol.for(\"@azure/core-tracing namespace\"),\n};\n/**\n * Creates a new {@link TracingContext} with the given options.\n * @param options - A set of known keys that may be set on the context.\n * @returns A new {@link TracingContext} with the given options.\n *\n * @internal\n */\nexport function createTracingContext(options = {}) {\n    let context = new TracingContextImpl(options.parentContext);\n    if (options.span) {\n        context = context.setValue(knownContextKeys.span, options.span);\n    }\n    if (options.namespace) {\n        context = context.setValue(knownContextKeys.namespace, options.namespace);\n    }\n    return context;\n}\n/** @internal */\nexport class TracingContextImpl {\n    constructor(initialContext) {\n        this._contextMap =\n            initialContext instanceof TracingContextImpl\n                ? new Map(initialContext._contextMap)\n                : new Map();\n    }\n    setValue(key, value) {\n        const newContext = new TracingContextImpl(this);\n        newContext._contextMap.set(key, value);\n        return newContext;\n    }\n    getValue(key) {\n        return this._contextMap.get(key);\n    }\n    deleteValue(key) {\n        const newContext = new TracingContextImpl(this);\n        newContext._contextMap.delete(key);\n        return newContext;\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAO,MAAMA,gBAAgB,GAAG;EAC5BC,IAAI,EAAEC,MAAM,CAACC,GAAG,CAAC,0BAA0B,CAAC;EAC5CC,SAAS,EAAEF,MAAM,CAACC,GAAG,CAAC,+BAA+B;AACzD,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASE,oBAAoBA,CAACC,OAAO,GAAG,CAAC,CAAC,EAAE;EAC/C,IAAIC,OAAO,GAAG,IAAIC,kBAAkB,CAACF,OAAO,CAACG,aAAa,CAAC;EAC3D,IAAIH,OAAO,CAACL,IAAI,EAAE;IACdM,OAAO,GAAGA,OAAO,CAACG,QAAQ,CAACV,gBAAgB,CAACC,IAAI,EAAEK,OAAO,CAACL,IAAI,CAAC;EACnE;EACA,IAAIK,OAAO,CAACF,SAAS,EAAE;IACnBG,OAAO,GAAGA,OAAO,CAACG,QAAQ,CAACV,gBAAgB,CAACI,SAAS,EAAEE,OAAO,CAACF,SAAS,CAAC;EAC7E;EACA,OAAOG,OAAO;AAClB;AACA;AACA,OAAO,MAAMC,kBAAkB,CAAC;EAC5BG,WAAWA,CAACC,cAAc,EAAE;IACxB,IAAI,CAACC,WAAW,GACZD,cAAc,YAAYJ,kBAAkB,GACtC,IAAIM,GAAG,CAACF,cAAc,CAACC,WAAW,CAAC,GACnC,IAAIC,GAAG,CAAC,CAAC;EACvB;EACAJ,QAAQA,CAACK,GAAG,EAAEC,KAAK,EAAE;IACjB,MAAMC,UAAU,GAAG,IAAIT,kBAAkB,CAAC,IAAI,CAAC;IAC/CS,UAAU,CAACJ,WAAW,CAACK,GAAG,CAACH,GAAG,EAAEC,KAAK,CAAC;IACtC,OAAOC,UAAU;EACrB;EACAE,QAAQA,CAACJ,GAAG,EAAE;IACV,OAAO,IAAI,CAACF,WAAW,CAACO,GAAG,CAACL,GAAG,CAAC;EACpC;EACAM,WAAWA,CAACN,GAAG,EAAE;IACb,MAAME,UAAU,GAAG,IAAIT,kBAAkB,CAAC,IAAI,CAAC;IAC/CS,UAAU,CAACJ,WAAW,CAACS,MAAM,CAACP,GAAG,CAAC;IAClC,OAAOE,UAAU;EACrB;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
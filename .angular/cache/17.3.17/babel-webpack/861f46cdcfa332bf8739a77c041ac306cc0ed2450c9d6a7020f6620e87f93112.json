{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { __rest } from \"tslib\";\nimport { deserializeCommunicationIdentifier, serializeCommunicationIdentifier } from \"@azure/communication-common\";\nexport const mapToCreateChatThreadOptionsRestModel = options => {\n  const {\n      participants,\n      idempotencyToken\n    } = options,\n    rest = __rest(options, [\"participants\", \"idempotencyToken\"]);\n  return Object.assign({\n    repeatabilityRequestId: idempotencyToken\n  }, rest);\n};\n/**\n * @internal\n * Mapping chat participant customer model to chat participant REST model\n */\nexport const mapToChatParticipantRestModel = chatParticipant => {\n  const {\n      id\n    } = chatParticipant,\n    rest = __rest(chatParticipant, [\"id\"]);\n  return Object.assign(Object.assign({}, rest), {\n    communicationIdentifier: serializeCommunicationIdentifier(id)\n  });\n};\n/**\n * @internal\n * Mapping add participants request to add chat participants request REST model\n */\nexport const mapToAddChatParticipantsRequestRestModel = addParticipantsRequest => {\n  var _a;\n  return {\n    participants: (_a = addParticipantsRequest.participants) === null || _a === void 0 ? void 0 : _a.map(participant => mapToChatParticipantRestModel(participant))\n  };\n};\n/**\n * @internal\n * Mapping chat participant REST model to chat participant SDK model\n */\nexport const mapToChatParticipantSdkModel = chatParticipant => {\n  const {\n      communicationIdentifier\n    } = chatParticipant,\n    rest = __rest(chatParticipant, [\"communicationIdentifier\"]);\n  return Object.assign(Object.assign({}, rest), {\n    id: deserializeCommunicationIdentifier(communicationIdentifier)\n  });\n};\n/**\n * @internal\n */\nexport const mapToChatContentSdkModel = content => {\n  const {\n      participants,\n      initiatorCommunicationIdentifier\n    } = content,\n    otherChatContents = __rest(content, [\"participants\", \"initiatorCommunicationIdentifier\"]);\n  let result = Object.assign({}, otherChatContents);\n  if (initiatorCommunicationIdentifier) {\n    const initiator = deserializeCommunicationIdentifier(initiatorCommunicationIdentifier);\n    result = Object.assign(Object.assign({}, result), {\n      initiator\n    });\n  }\n  if (participants) {\n    result = Object.assign(Object.assign({}, result), {\n      participants: participants === null || participants === void 0 ? void 0 : participants.map(participant => mapToChatParticipantSdkModel(participant))\n    });\n  }\n  return result;\n};\n/**\n * @internal\n * Mapping chat message REST model to chat message SDK model\n */\nexport const mapToChatMessageSdkModel = chatMessage => {\n  const {\n      content,\n      senderCommunicationIdentifier\n    } = chatMessage,\n    otherChatMessage = __rest(chatMessage, [\"content\", \"senderCommunicationIdentifier\"]);\n  let result = Object.assign({}, otherChatMessage);\n  if (content) {\n    result = Object.assign(Object.assign({}, result), {\n      content: mapToChatContentSdkModel(content)\n    });\n  }\n  if (senderCommunicationIdentifier) {\n    const sender = deserializeCommunicationIdentifier(senderCommunicationIdentifier);\n    result = Object.assign(Object.assign({}, result), {\n      sender\n    });\n  }\n  return result;\n};\n/**\n * @internal\n * Mapping chat messages collection REST model to chat message SDK model array\n */\nexport const mapToChatMessagesSdkModelArray = chatMessagesCollection => {\n  var _a;\n  return (_a = chatMessagesCollection.value) === null || _a === void 0 ? void 0 : _a.map(chatMessage => mapToChatMessageSdkModel(chatMessage));\n};\n/**\n * @internal\n * Mapping chat retention policy REST model to chat retention policy SDK model\n */\nexport const mapToRetentionPolicySdkModel = retentionPolicy => {\n  if (retentionPolicy.kind === \"threadCreationDate\") {\n    return retentionPolicy;\n  }\n  if (retentionPolicy.kind === \"none\") {\n    return retentionPolicy;\n  } else {\n    throw new Error(`Retention Policy ${retentionPolicy.kind} is not supported`);\n  }\n};\n/**\n * @internal\n * Mapping chat thread REST model to chat thread SDK model\n */\nexport const mapToChatThreadPropertiesSdkModel = chatThread => {\n  const {\n      createdByCommunicationIdentifier,\n      retentionPolicy\n    } = chatThread,\n    rest = __rest(chatThread, [\"createdByCommunicationIdentifier\", \"retentionPolicy\"]);\n  let result = Object.assign({}, rest);\n  if (createdByCommunicationIdentifier) {\n    result = Object.assign(Object.assign({}, result), {\n      createdBy: deserializeCommunicationIdentifier(createdByCommunicationIdentifier)\n    });\n  }\n  if (retentionPolicy) {\n    result = Object.assign(Object.assign({}, result), {\n      retentionPolicy: mapToRetentionPolicySdkModel(retentionPolicy)\n    });\n  }\n  return result;\n};\n/**\n * @internal\n * Mapping chat thread REST model to chat thread SDK model\n */\nexport const mapToCreateChatThreadResultSdkModel = result => {\n  const {\n      chatThread\n    } = result,\n    rest = __rest(result, [\"chatThread\"]);\n  if (chatThread) {\n    return Object.assign(Object.assign({}, rest), {\n      chatThread: mapToChatThreadPropertiesSdkModel(chatThread)\n    });\n  } else {\n    return Object.assign({}, rest);\n  }\n};\n/**\n * @internal\n * Mapping read receipt REST model to read receipt SDK model\n */\nexport const mapToReadReceiptSdkModel = readReceipt => {\n  const {\n      senderCommunicationIdentifier\n    } = readReceipt,\n    rest = __rest(readReceipt, [\"senderCommunicationIdentifier\"]);\n  return Object.assign(Object.assign({}, rest), {\n    sender: deserializeCommunicationIdentifier(senderCommunicationIdentifier)\n  });\n};","map":{"version":3,"names":["__rest","deserializeCommunicationIdentifier","serializeCommunicationIdentifier","mapToCreateChatThreadOptionsRestModel","options","participants","idempotencyToken","rest","Object","assign","repeatabilityRequestId","mapToChatParticipantRestModel","chatParticipant","id","communicationIdentifier","mapToAddChatParticipantsRequestRestModel","addParticipantsRequest","_a","map","participant","mapToChatParticipantSdkModel","mapToChatContentSdkModel","content","initiatorCommunicationIdentifier","otherChatContents","result","initiator","mapToChatMessageSdkModel","chatMessage","senderCommunicationIdentifier","otherChatMessage","sender","mapToChatMessagesSdkModelArray","chatMessagesCollection","value","mapToRetentionPolicySdkModel","retentionPolicy","kind","Error","mapToChatThreadPropertiesSdkModel","chatThread","createdByCommunicationIdentifier","createdBy","mapToCreateChatThreadResultSdkModel","mapToReadReceiptSdkModel","readReceipt"],"sources":["D:/Project/github-teams/teams-app-new/node_modules/@azure/communication-chat/dist/browser/models/mappers.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { __rest } from \"tslib\";\nimport { deserializeCommunicationIdentifier, serializeCommunicationIdentifier, } from \"@azure/communication-common\";\nexport const mapToCreateChatThreadOptionsRestModel = (options) => {\n    const { participants, idempotencyToken } = options, rest = __rest(options, [\"participants\", \"idempotencyToken\"]);\n    return Object.assign({ repeatabilityRequestId: idempotencyToken }, rest);\n};\n/**\n * @internal\n * Mapping chat participant customer model to chat participant REST model\n */\nexport const mapToChatParticipantRestModel = (chatParticipant) => {\n    const { id } = chatParticipant, rest = __rest(chatParticipant, [\"id\"]);\n    return Object.assign(Object.assign({}, rest), { communicationIdentifier: serializeCommunicationIdentifier(id) });\n};\n/**\n * @internal\n * Mapping add participants request to add chat participants request REST model\n */\nexport const mapToAddChatParticipantsRequestRestModel = (addParticipantsRequest) => {\n    var _a;\n    return {\n        participants: (_a = addParticipantsRequest.participants) === null || _a === void 0 ? void 0 : _a.map((participant) => mapToChatParticipantRestModel(participant)),\n    };\n};\n/**\n * @internal\n * Mapping chat participant REST model to chat participant SDK model\n */\nexport const mapToChatParticipantSdkModel = (chatParticipant) => {\n    const { communicationIdentifier } = chatParticipant, rest = __rest(chatParticipant, [\"communicationIdentifier\"]);\n    return Object.assign(Object.assign({}, rest), { id: deserializeCommunicationIdentifier(communicationIdentifier) });\n};\n/**\n * @internal\n */\nexport const mapToChatContentSdkModel = (content) => {\n    const { participants, initiatorCommunicationIdentifier } = content, otherChatContents = __rest(content, [\"participants\", \"initiatorCommunicationIdentifier\"]);\n    let result = Object.assign({}, otherChatContents);\n    if (initiatorCommunicationIdentifier) {\n        const initiator = deserializeCommunicationIdentifier(initiatorCommunicationIdentifier);\n        result = Object.assign(Object.assign({}, result), { initiator });\n    }\n    if (participants) {\n        result = Object.assign(Object.assign({}, result), { participants: participants === null || participants === void 0 ? void 0 : participants.map((participant) => mapToChatParticipantSdkModel(participant)) });\n    }\n    return result;\n};\n/**\n * @internal\n * Mapping chat message REST model to chat message SDK model\n */\nexport const mapToChatMessageSdkModel = (chatMessage) => {\n    const { content, senderCommunicationIdentifier } = chatMessage, otherChatMessage = __rest(chatMessage, [\"content\", \"senderCommunicationIdentifier\"]);\n    let result = Object.assign({}, otherChatMessage);\n    if (content) {\n        result = Object.assign(Object.assign({}, result), { content: mapToChatContentSdkModel(content) });\n    }\n    if (senderCommunicationIdentifier) {\n        const sender = deserializeCommunicationIdentifier(senderCommunicationIdentifier);\n        result = Object.assign(Object.assign({}, result), { sender });\n    }\n    return result;\n};\n/**\n * @internal\n * Mapping chat messages collection REST model to chat message SDK model array\n */\nexport const mapToChatMessagesSdkModelArray = (chatMessagesCollection) => {\n    var _a;\n    return (_a = chatMessagesCollection.value) === null || _a === void 0 ? void 0 : _a.map((chatMessage) => mapToChatMessageSdkModel(chatMessage));\n};\n/**\n * @internal\n * Mapping chat retention policy REST model to chat retention policy SDK model\n */\nexport const mapToRetentionPolicySdkModel = (retentionPolicy) => {\n    if (retentionPolicy.kind === \"threadCreationDate\") {\n        return retentionPolicy;\n    }\n    if (retentionPolicy.kind === \"none\") {\n        return retentionPolicy;\n    }\n    else {\n        throw new Error(`Retention Policy ${retentionPolicy.kind} is not supported`);\n    }\n};\n/**\n * @internal\n * Mapping chat thread REST model to chat thread SDK model\n */\nexport const mapToChatThreadPropertiesSdkModel = (chatThread) => {\n    const { createdByCommunicationIdentifier, retentionPolicy } = chatThread, rest = __rest(chatThread, [\"createdByCommunicationIdentifier\", \"retentionPolicy\"]);\n    let result = Object.assign({}, rest);\n    if (createdByCommunicationIdentifier) {\n        result = Object.assign(Object.assign({}, result), { createdBy: deserializeCommunicationIdentifier(createdByCommunicationIdentifier) });\n    }\n    if (retentionPolicy) {\n        result = Object.assign(Object.assign({}, result), { retentionPolicy: mapToRetentionPolicySdkModel(retentionPolicy) });\n    }\n    return result;\n};\n/**\n * @internal\n * Mapping chat thread REST model to chat thread SDK model\n */\nexport const mapToCreateChatThreadResultSdkModel = (result) => {\n    const { chatThread } = result, rest = __rest(result, [\"chatThread\"]);\n    if (chatThread) {\n        return Object.assign(Object.assign({}, rest), { chatThread: mapToChatThreadPropertiesSdkModel(chatThread) });\n    }\n    else {\n        return Object.assign({}, rest);\n    }\n};\n/**\n * @internal\n * Mapping read receipt REST model to read receipt SDK model\n */\nexport const mapToReadReceiptSdkModel = (readReceipt) => {\n    const { senderCommunicationIdentifier } = readReceipt, rest = __rest(readReceipt, [\"senderCommunicationIdentifier\"]);\n    return Object.assign(Object.assign({}, rest), { sender: deserializeCommunicationIdentifier(senderCommunicationIdentifier) });\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\nexport const ChatMessageReadReceiptsCollection = {\n  type: {\n    name: \"Composite\",\n    className: \"ChatMessageReadReceiptsCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ChatMessageReadReceipt\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const ChatMessageReadReceipt = {\n  type: {\n    name: \"Composite\",\n    className: \"ChatMessageReadReceipt\",\n    modelProperties: {\n      senderCommunicationIdentifier: {\n        serializedName: \"senderCommunicationIdentifier\",\n        type: {\n          name: \"Composite\",\n          className: \"CommunicationIdentifierModel\"\n        }\n      },\n      chatMessageId: {\n        serializedName: \"chatMessageId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      readOn: {\n        serializedName: \"readOn\",\n        required: true,\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\nexport const CommunicationIdentifierModel = {\n  type: {\n    name: \"Composite\",\n    className: \"CommunicationIdentifierModel\",\n    modelProperties: {\n      kind: {\n        serializedName: \"kind\",\n        type: {\n          name: \"String\"\n        }\n      },\n      rawId: {\n        serializedName: \"rawId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      communicationUser: {\n        serializedName: \"communicationUser\",\n        type: {\n          name: \"Composite\",\n          className: \"CommunicationUserIdentifierModel\"\n        }\n      },\n      phoneNumber: {\n        serializedName: \"phoneNumber\",\n        type: {\n          name: \"Composite\",\n          className: \"PhoneNumberIdentifierModel\"\n        }\n      },\n      microsoftTeamsUser: {\n        serializedName: \"microsoftTeamsUser\",\n        type: {\n          name: \"Composite\",\n          className: \"MicrosoftTeamsUserIdentifierModel\"\n        }\n      },\n      microsoftTeamsApp: {\n        serializedName: \"microsoftTeamsApp\",\n        type: {\n          name: \"Composite\",\n          className: \"MicrosoftTeamsAppIdentifierModel\"\n        }\n      }\n    }\n  }\n};\nexport const CommunicationUserIdentifierModel = {\n  type: {\n    name: \"Composite\",\n    className: \"CommunicationUserIdentifierModel\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const PhoneNumberIdentifierModel = {\n  type: {\n    name: \"Composite\",\n    className: \"PhoneNumberIdentifierModel\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const MicrosoftTeamsUserIdentifierModel = {\n  type: {\n    name: \"Composite\",\n    className: \"MicrosoftTeamsUserIdentifierModel\",\n    modelProperties: {\n      userId: {\n        serializedName: \"userId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      isAnonymous: {\n        serializedName: \"isAnonymous\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      cloud: {\n        serializedName: \"cloud\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const MicrosoftTeamsAppIdentifierModel = {\n  type: {\n    name: \"Composite\",\n    className: \"MicrosoftTeamsAppIdentifierModel\",\n    modelProperties: {\n      appId: {\n        serializedName: \"appId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      cloud: {\n        serializedName: \"cloud\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const CommunicationErrorResponse = {\n  type: {\n    name: \"Composite\",\n    className: \"CommunicationErrorResponse\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ChatError\"\n        }\n      }\n    }\n  }\n};\nexport const ChatError = {\n  type: {\n    name: \"Composite\",\n    className: \"ChatError\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      target: {\n        serializedName: \"target\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      details: {\n        serializedName: \"details\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ChatError\"\n            }\n          }\n        }\n      },\n      innerError: {\n        serializedName: \"innererror\",\n        type: {\n          name: \"Composite\",\n          className: \"ChatError\"\n        }\n      }\n    }\n  }\n};\nexport const SendReadReceiptRequest = {\n  type: {\n    name: \"Composite\",\n    className: \"SendReadReceiptRequest\",\n    modelProperties: {\n      chatMessageId: {\n        serializedName: \"chatMessageId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const SendChatMessageRequest = {\n  type: {\n    name: \"Composite\",\n    className: \"SendChatMessageRequest\",\n    modelProperties: {\n      content: {\n        serializedName: \"content\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      senderDisplayName: {\n        serializedName: \"senderDisplayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"text\", \"html\", \"topicUpdated\", \"participantAdded\", \"participantRemoved\"]\n        }\n      },\n      metadata: {\n        serializedName: \"metadata\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\nexport const SendChatMessageResult = {\n  type: {\n    name: \"Composite\",\n    className: \"SendChatMessageResult\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const ChatMessagesCollection = {\n  type: {\n    name: \"Composite\",\n    className: \"ChatMessagesCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ChatMessage\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const ChatMessage = {\n  type: {\n    name: \"Composite\",\n    className: \"ChatMessage\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"text\", \"html\", \"topicUpdated\", \"participantAdded\", \"participantRemoved\"]\n        }\n      },\n      sequenceId: {\n        serializedName: \"sequenceId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      content: {\n        serializedName: \"content\",\n        type: {\n          name: \"Composite\",\n          className: \"ChatMessageContent\"\n        }\n      },\n      senderDisplayName: {\n        serializedName: \"senderDisplayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdOn: {\n        serializedName: \"createdOn\",\n        required: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      senderCommunicationIdentifier: {\n        serializedName: \"senderCommunicationIdentifier\",\n        type: {\n          name: \"Composite\",\n          className: \"CommunicationIdentifierModel\"\n        }\n      },\n      deletedOn: {\n        serializedName: \"deletedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      editedOn: {\n        serializedName: \"editedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      metadata: {\n        serializedName: \"metadata\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\nexport const ChatMessageContent = {\n  type: {\n    name: \"Composite\",\n    className: \"ChatMessageContent\",\n    modelProperties: {\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      },\n      topic: {\n        serializedName: \"topic\",\n        type: {\n          name: \"String\"\n        }\n      },\n      participants: {\n        serializedName: \"participants\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ChatParticipant\"\n            }\n          }\n        }\n      },\n      attachments: {\n        serializedName: \"attachments\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ChatAttachment\"\n            }\n          }\n        }\n      },\n      initiatorCommunicationIdentifier: {\n        serializedName: \"initiatorCommunicationIdentifier\",\n        type: {\n          name: \"Composite\",\n          className: \"CommunicationIdentifierModel\"\n        }\n      }\n    }\n  }\n};\nexport const ChatParticipant = {\n  type: {\n    name: \"Composite\",\n    className: \"ChatParticipant\",\n    modelProperties: {\n      communicationIdentifier: {\n        serializedName: \"communicationIdentifier\",\n        type: {\n          name: \"Composite\",\n          className: \"CommunicationIdentifierModel\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      shareHistoryTime: {\n        serializedName: \"shareHistoryTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      metadata: {\n        serializedName: \"metadata\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\nexport const ChatAttachment = {\n  type: {\n    name: \"Composite\",\n    className: \"ChatAttachment\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      attachmentType: {\n        serializedName: \"attachmentType\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"image\", \"file\"]\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      url: {\n        serializedName: \"url\",\n        type: {\n          name: \"String\"\n        }\n      },\n      previewUrl: {\n        serializedName: \"previewUrl\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const UpdateChatMessageRequest = {\n  type: {\n    name: \"Composite\",\n    className: \"UpdateChatMessageRequest\",\n    modelProperties: {\n      content: {\n        serializedName: \"content\",\n        type: {\n          name: \"String\"\n        }\n      },\n      metadata: {\n        serializedName: \"metadata\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\nexport const ChatParticipantsCollection = {\n  type: {\n    name: \"Composite\",\n    className: \"ChatParticipantsCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ChatParticipant\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const AddChatParticipantsRequest = {\n  type: {\n    name: \"Composite\",\n    className: \"AddChatParticipantsRequest\",\n    modelProperties: {\n      participants: {\n        serializedName: \"participants\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ChatParticipant\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\nexport const AddChatParticipantsResult = {\n  type: {\n    name: \"Composite\",\n    className: \"AddChatParticipantsResult\",\n    modelProperties: {\n      invalidParticipants: {\n        serializedName: \"invalidParticipants\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ChatError\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\nexport const CreateChatThreadRequest = {\n  type: {\n    name: \"Composite\",\n    className: \"CreateChatThreadRequest\",\n    modelProperties: {\n      topic: {\n        serializedName: \"topic\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      participants: {\n        serializedName: \"participants\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ChatParticipant\"\n            }\n          }\n        }\n      },\n      metadata: {\n        serializedName: \"metadata\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      retentionPolicy: {\n        serializedName: \"retentionPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"ChatRetentionPolicy\"\n        }\n      }\n    }\n  }\n};\nexport const ChatRetentionPolicy = {\n  type: {\n    name: \"Composite\",\n    className: \"ChatRetentionPolicy\",\n    uberParent: \"ChatRetentionPolicy\",\n    polymorphicDiscriminator: {\n      serializedName: \"kind\",\n      clientName: \"kind\"\n    },\n    modelProperties: {\n      kind: {\n        serializedName: \"kind\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const CreateChatThreadResult = {\n  type: {\n    name: \"Composite\",\n    className: \"CreateChatThreadResult\",\n    modelProperties: {\n      chatThread: {\n        serializedName: \"chatThread\",\n        type: {\n          name: \"Composite\",\n          className: \"ChatThreadProperties\"\n        }\n      },\n      invalidParticipants: {\n        serializedName: \"invalidParticipants\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ChatError\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\nexport const ChatThreadProperties = {\n  type: {\n    name: \"Composite\",\n    className: \"ChatThreadProperties\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      topic: {\n        serializedName: \"topic\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      createdOn: {\n        serializedName: \"createdOn\",\n        required: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      createdByCommunicationIdentifier: {\n        serializedName: \"createdByCommunicationIdentifier\",\n        type: {\n          name: \"Composite\",\n          className: \"CommunicationIdentifierModel\"\n        }\n      },\n      deletedOn: {\n        serializedName: \"deletedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      metadata: {\n        serializedName: \"metadata\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      retentionPolicy: {\n        serializedName: \"retentionPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"ChatRetentionPolicy\"\n        }\n      }\n    }\n  }\n};\nexport const ChatThreadsItemCollection = {\n  type: {\n    name: \"Composite\",\n    className: \"ChatThreadsItemCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ChatThreadItem\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const ChatThreadItem = {\n  type: {\n    name: \"Composite\",\n    className: \"ChatThreadItem\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      topic: {\n        serializedName: \"topic\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      deletedOn: {\n        serializedName: \"deletedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastMessageReceivedOn: {\n        serializedName: \"lastMessageReceivedOn\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\nexport const UpdateChatThreadRequest = {\n  type: {\n    name: \"Composite\",\n    className: \"UpdateChatThreadRequest\",\n    modelProperties: {\n      topic: {\n        serializedName: \"topic\",\n        type: {\n          name: \"String\"\n        }\n      },\n      metadata: {\n        serializedName: \"metadata\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      retentionPolicy: {\n        serializedName: \"retentionPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"ChatRetentionPolicy\"\n        }\n      }\n    }\n  }\n};\nexport const SendTypingNotificationRequest = {\n  type: {\n    name: \"Composite\",\n    className: \"SendTypingNotificationRequest\",\n    modelProperties: {\n      senderDisplayName: {\n        serializedName: \"senderDisplayName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const ThreadCreationDateRetentionPolicy = {\n  serializedName: \"threadCreationDate\",\n  type: {\n    name: \"Composite\",\n    className: \"ThreadCreationDateRetentionPolicy\",\n    uberParent: \"ChatRetentionPolicy\",\n    polymorphicDiscriminator: ChatRetentionPolicy.type.polymorphicDiscriminator,\n    modelProperties: Object.assign(Object.assign({}, ChatRetentionPolicy.type.modelProperties), {\n      deleteThreadAfterDays: {\n        serializedName: \"deleteThreadAfterDays\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    })\n  }\n};\nexport const NoneRetentionPolicy = {\n  serializedName: \"none\",\n  type: {\n    name: \"Composite\",\n    className: \"NoneRetentionPolicy\",\n    uberParent: \"ChatRetentionPolicy\",\n    polymorphicDiscriminator: ChatRetentionPolicy.type.polymorphicDiscriminator,\n    modelProperties: Object.assign({}, ChatRetentionPolicy.type.modelProperties)\n  }\n};\nexport let discriminators = {\n  ChatRetentionPolicy: ChatRetentionPolicy,\n  \"ChatRetentionPolicy.threadCreationDate\": ThreadCreationDateRetentionPolicy,\n  \"ChatRetentionPolicy.none\": NoneRetentionPolicy\n};","map":{"version":3,"names":["ChatMessageReadReceiptsCollection","type","name","className","modelProperties","value","serializedName","required","element","nextLink","readOnly","ChatMessageReadReceipt","senderCommunicationIdentifier","chatMessageId","readOn","CommunicationIdentifierModel","kind","rawId","communicationUser","phoneNumber","microsoftTeamsUser","microsoftTeamsApp","CommunicationUserIdentifierModel","id","PhoneNumberIdentifierModel","MicrosoftTeamsUserIdentifierModel","userId","isAnonymous","cloud","MicrosoftTeamsAppIdentifierModel","appId","CommunicationErrorResponse","error","ChatError","code","message","target","details","innerError","SendReadReceiptRequest","SendChatMessageRequest","content","senderDisplayName","allowedValues","metadata","SendChatMessageResult","ChatMessagesCollection","ChatMessage","sequenceId","version","createdOn","deletedOn","editedOn","ChatMessageContent","topic","participants","attachments","initiatorCommunicationIdentifier","ChatParticipant","communicationIdentifier","displayName","shareHistoryTime","ChatAttachment","attachmentType","url","previewUrl","UpdateChatMessageRequest","ChatParticipantsCollection","AddChatParticipantsRequest","AddChatParticipantsResult","invalidParticipants","CreateChatThreadRequest","retentionPolicy","ChatRetentionPolicy","uberParent","polymorphicDiscriminator","clientName","CreateChatThreadResult","chatThread","ChatThreadProperties","createdByCommunicationIdentifier","ChatThreadsItemCollection","ChatThreadItem","lastMessageReceivedOn","UpdateChatThreadRequest","SendTypingNotificationRequest","ThreadCreationDateRetentionPolicy","Object","assign","deleteThreadAfterDays","NoneRetentionPolicy","discriminators"],"sources":["D:/Project/github-teams/teams-app-new/node_modules/@azure/communication-chat/dist/browser/generated/src/models/mappers.js"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\nexport const ChatMessageReadReceiptsCollection = {\n    type: {\n        name: \"Composite\",\n        className: \"ChatMessageReadReceiptsCollection\",\n        modelProperties: {\n            value: {\n                serializedName: \"value\",\n                required: true,\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"ChatMessageReadReceipt\",\n                        },\n                    },\n                },\n            },\n            nextLink: {\n                serializedName: \"nextLink\",\n                readOnly: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n        },\n    },\n};\nexport const ChatMessageReadReceipt = {\n    type: {\n        name: \"Composite\",\n        className: \"ChatMessageReadReceipt\",\n        modelProperties: {\n            senderCommunicationIdentifier: {\n                serializedName: \"senderCommunicationIdentifier\",\n                type: {\n                    name: \"Composite\",\n                    className: \"CommunicationIdentifierModel\",\n                },\n            },\n            chatMessageId: {\n                serializedName: \"chatMessageId\",\n                required: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n            readOn: {\n                serializedName: \"readOn\",\n                required: true,\n                type: {\n                    name: \"DateTime\",\n                },\n            },\n        },\n    },\n};\nexport const CommunicationIdentifierModel = {\n    type: {\n        name: \"Composite\",\n        className: \"CommunicationIdentifierModel\",\n        modelProperties: {\n            kind: {\n                serializedName: \"kind\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            rawId: {\n                serializedName: \"rawId\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            communicationUser: {\n                serializedName: \"communicationUser\",\n                type: {\n                    name: \"Composite\",\n                    className: \"CommunicationUserIdentifierModel\",\n                },\n            },\n            phoneNumber: {\n                serializedName: \"phoneNumber\",\n                type: {\n                    name: \"Composite\",\n                    className: \"PhoneNumberIdentifierModel\",\n                },\n            },\n            microsoftTeamsUser: {\n                serializedName: \"microsoftTeamsUser\",\n                type: {\n                    name: \"Composite\",\n                    className: \"MicrosoftTeamsUserIdentifierModel\",\n                },\n            },\n            microsoftTeamsApp: {\n                serializedName: \"microsoftTeamsApp\",\n                type: {\n                    name: \"Composite\",\n                    className: \"MicrosoftTeamsAppIdentifierModel\",\n                },\n            },\n        },\n    },\n};\nexport const CommunicationUserIdentifierModel = {\n    type: {\n        name: \"Composite\",\n        className: \"CommunicationUserIdentifierModel\",\n        modelProperties: {\n            id: {\n                serializedName: \"id\",\n                required: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n        },\n    },\n};\nexport const PhoneNumberIdentifierModel = {\n    type: {\n        name: \"Composite\",\n        className: \"PhoneNumberIdentifierModel\",\n        modelProperties: {\n            value: {\n                serializedName: \"value\",\n                required: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n        },\n    },\n};\nexport const MicrosoftTeamsUserIdentifierModel = {\n    type: {\n        name: \"Composite\",\n        className: \"MicrosoftTeamsUserIdentifierModel\",\n        modelProperties: {\n            userId: {\n                serializedName: \"userId\",\n                required: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n            isAnonymous: {\n                serializedName: \"isAnonymous\",\n                type: {\n                    name: \"Boolean\",\n                },\n            },\n            cloud: {\n                serializedName: \"cloud\",\n                type: {\n                    name: \"String\",\n                },\n            },\n        },\n    },\n};\nexport const MicrosoftTeamsAppIdentifierModel = {\n    type: {\n        name: \"Composite\",\n        className: \"MicrosoftTeamsAppIdentifierModel\",\n        modelProperties: {\n            appId: {\n                serializedName: \"appId\",\n                required: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n            cloud: {\n                serializedName: \"cloud\",\n                type: {\n                    name: \"String\",\n                },\n            },\n        },\n    },\n};\nexport const CommunicationErrorResponse = {\n    type: {\n        name: \"Composite\",\n        className: \"CommunicationErrorResponse\",\n        modelProperties: {\n            error: {\n                serializedName: \"error\",\n                type: {\n                    name: \"Composite\",\n                    className: \"ChatError\",\n                },\n            },\n        },\n    },\n};\nexport const ChatError = {\n    type: {\n        name: \"Composite\",\n        className: \"ChatError\",\n        modelProperties: {\n            code: {\n                serializedName: \"code\",\n                required: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n            message: {\n                serializedName: \"message\",\n                required: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n            target: {\n                serializedName: \"target\",\n                readOnly: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n            details: {\n                serializedName: \"details\",\n                readOnly: true,\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"ChatError\",\n                        },\n                    },\n                },\n            },\n            innerError: {\n                serializedName: \"innererror\",\n                type: {\n                    name: \"Composite\",\n                    className: \"ChatError\",\n                },\n            },\n        },\n    },\n};\nexport const SendReadReceiptRequest = {\n    type: {\n        name: \"Composite\",\n        className: \"SendReadReceiptRequest\",\n        modelProperties: {\n            chatMessageId: {\n                serializedName: \"chatMessageId\",\n                required: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n        },\n    },\n};\nexport const SendChatMessageRequest = {\n    type: {\n        name: \"Composite\",\n        className: \"SendChatMessageRequest\",\n        modelProperties: {\n            content: {\n                serializedName: \"content\",\n                required: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n            senderDisplayName: {\n                serializedName: \"senderDisplayName\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            type: {\n                serializedName: \"type\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"text\",\n                        \"html\",\n                        \"topicUpdated\",\n                        \"participantAdded\",\n                        \"participantRemoved\",\n                    ],\n                },\n            },\n            metadata: {\n                serializedName: \"metadata\",\n                type: {\n                    name: \"Dictionary\",\n                    value: { type: { name: \"String\" } },\n                },\n            },\n        },\n    },\n};\nexport const SendChatMessageResult = {\n    type: {\n        name: \"Composite\",\n        className: \"SendChatMessageResult\",\n        modelProperties: {\n            id: {\n                serializedName: \"id\",\n                required: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n        },\n    },\n};\nexport const ChatMessagesCollection = {\n    type: {\n        name: \"Composite\",\n        className: \"ChatMessagesCollection\",\n        modelProperties: {\n            value: {\n                serializedName: \"value\",\n                required: true,\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"ChatMessage\",\n                        },\n                    },\n                },\n            },\n            nextLink: {\n                serializedName: \"nextLink\",\n                readOnly: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n        },\n    },\n};\nexport const ChatMessage = {\n    type: {\n        name: \"Composite\",\n        className: \"ChatMessage\",\n        modelProperties: {\n            id: {\n                serializedName: \"id\",\n                required: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n            type: {\n                serializedName: \"type\",\n                required: true,\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"text\",\n                        \"html\",\n                        \"topicUpdated\",\n                        \"participantAdded\",\n                        \"participantRemoved\",\n                    ],\n                },\n            },\n            sequenceId: {\n                serializedName: \"sequenceId\",\n                required: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n            version: {\n                serializedName: \"version\",\n                required: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n            content: {\n                serializedName: \"content\",\n                type: {\n                    name: \"Composite\",\n                    className: \"ChatMessageContent\",\n                },\n            },\n            senderDisplayName: {\n                serializedName: \"senderDisplayName\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            createdOn: {\n                serializedName: \"createdOn\",\n                required: true,\n                type: {\n                    name: \"DateTime\",\n                },\n            },\n            senderCommunicationIdentifier: {\n                serializedName: \"senderCommunicationIdentifier\",\n                type: {\n                    name: \"Composite\",\n                    className: \"CommunicationIdentifierModel\",\n                },\n            },\n            deletedOn: {\n                serializedName: \"deletedOn\",\n                type: {\n                    name: \"DateTime\",\n                },\n            },\n            editedOn: {\n                serializedName: \"editedOn\",\n                type: {\n                    name: \"DateTime\",\n                },\n            },\n            metadata: {\n                serializedName: \"metadata\",\n                type: {\n                    name: \"Dictionary\",\n                    value: { type: { name: \"String\" } },\n                },\n            },\n        },\n    },\n};\nexport const ChatMessageContent = {\n    type: {\n        name: \"Composite\",\n        className: \"ChatMessageContent\",\n        modelProperties: {\n            message: {\n                serializedName: \"message\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            topic: {\n                serializedName: \"topic\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            participants: {\n                serializedName: \"participants\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"ChatParticipant\",\n                        },\n                    },\n                },\n            },\n            attachments: {\n                serializedName: \"attachments\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"ChatAttachment\",\n                        },\n                    },\n                },\n            },\n            initiatorCommunicationIdentifier: {\n                serializedName: \"initiatorCommunicationIdentifier\",\n                type: {\n                    name: \"Composite\",\n                    className: \"CommunicationIdentifierModel\",\n                },\n            },\n        },\n    },\n};\nexport const ChatParticipant = {\n    type: {\n        name: \"Composite\",\n        className: \"ChatParticipant\",\n        modelProperties: {\n            communicationIdentifier: {\n                serializedName: \"communicationIdentifier\",\n                type: {\n                    name: \"Composite\",\n                    className: \"CommunicationIdentifierModel\",\n                },\n            },\n            displayName: {\n                serializedName: \"displayName\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            shareHistoryTime: {\n                serializedName: \"shareHistoryTime\",\n                type: {\n                    name: \"DateTime\",\n                },\n            },\n            metadata: {\n                serializedName: \"metadata\",\n                type: {\n                    name: \"Dictionary\",\n                    value: { type: { name: \"String\" } },\n                },\n            },\n        },\n    },\n};\nexport const ChatAttachment = {\n    type: {\n        name: \"Composite\",\n        className: \"ChatAttachment\",\n        modelProperties: {\n            id: {\n                serializedName: \"id\",\n                required: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n            attachmentType: {\n                serializedName: \"attachmentType\",\n                required: true,\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\"image\", \"file\"],\n                },\n            },\n            name: {\n                serializedName: \"name\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            url: {\n                serializedName: \"url\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            previewUrl: {\n                serializedName: \"previewUrl\",\n                type: {\n                    name: \"String\",\n                },\n            },\n        },\n    },\n};\nexport const UpdateChatMessageRequest = {\n    type: {\n        name: \"Composite\",\n        className: \"UpdateChatMessageRequest\",\n        modelProperties: {\n            content: {\n                serializedName: \"content\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            metadata: {\n                serializedName: \"metadata\",\n                type: {\n                    name: \"Dictionary\",\n                    value: { type: { name: \"String\" } },\n                },\n            },\n        },\n    },\n};\nexport const ChatParticipantsCollection = {\n    type: {\n        name: \"Composite\",\n        className: \"ChatParticipantsCollection\",\n        modelProperties: {\n            value: {\n                serializedName: \"value\",\n                required: true,\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"ChatParticipant\",\n                        },\n                    },\n                },\n            },\n            nextLink: {\n                serializedName: \"nextLink\",\n                readOnly: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n        },\n    },\n};\nexport const AddChatParticipantsRequest = {\n    type: {\n        name: \"Composite\",\n        className: \"AddChatParticipantsRequest\",\n        modelProperties: {\n            participants: {\n                serializedName: \"participants\",\n                required: true,\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"ChatParticipant\",\n                        },\n                    },\n                },\n            },\n        },\n    },\n};\nexport const AddChatParticipantsResult = {\n    type: {\n        name: \"Composite\",\n        className: \"AddChatParticipantsResult\",\n        modelProperties: {\n            invalidParticipants: {\n                serializedName: \"invalidParticipants\",\n                readOnly: true,\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"ChatError\",\n                        },\n                    },\n                },\n            },\n        },\n    },\n};\nexport const CreateChatThreadRequest = {\n    type: {\n        name: \"Composite\",\n        className: \"CreateChatThreadRequest\",\n        modelProperties: {\n            topic: {\n                serializedName: \"topic\",\n                required: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n            participants: {\n                serializedName: \"participants\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"ChatParticipant\",\n                        },\n                    },\n                },\n            },\n            metadata: {\n                serializedName: \"metadata\",\n                type: {\n                    name: \"Dictionary\",\n                    value: { type: { name: \"String\" } },\n                },\n            },\n            retentionPolicy: {\n                serializedName: \"retentionPolicy\",\n                type: {\n                    name: \"Composite\",\n                    className: \"ChatRetentionPolicy\",\n                },\n            },\n        },\n    },\n};\nexport const ChatRetentionPolicy = {\n    type: {\n        name: \"Composite\",\n        className: \"ChatRetentionPolicy\",\n        uberParent: \"ChatRetentionPolicy\",\n        polymorphicDiscriminator: {\n            serializedName: \"kind\",\n            clientName: \"kind\",\n        },\n        modelProperties: {\n            kind: {\n                serializedName: \"kind\",\n                required: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n        },\n    },\n};\nexport const CreateChatThreadResult = {\n    type: {\n        name: \"Composite\",\n        className: \"CreateChatThreadResult\",\n        modelProperties: {\n            chatThread: {\n                serializedName: \"chatThread\",\n                type: {\n                    name: \"Composite\",\n                    className: \"ChatThreadProperties\",\n                },\n            },\n            invalidParticipants: {\n                serializedName: \"invalidParticipants\",\n                readOnly: true,\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"ChatError\",\n                        },\n                    },\n                },\n            },\n        },\n    },\n};\nexport const ChatThreadProperties = {\n    type: {\n        name: \"Composite\",\n        className: \"ChatThreadProperties\",\n        modelProperties: {\n            id: {\n                serializedName: \"id\",\n                required: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n            topic: {\n                serializedName: \"topic\",\n                required: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n            createdOn: {\n                serializedName: \"createdOn\",\n                required: true,\n                type: {\n                    name: \"DateTime\",\n                },\n            },\n            createdByCommunicationIdentifier: {\n                serializedName: \"createdByCommunicationIdentifier\",\n                type: {\n                    name: \"Composite\",\n                    className: \"CommunicationIdentifierModel\",\n                },\n            },\n            deletedOn: {\n                serializedName: \"deletedOn\",\n                type: {\n                    name: \"DateTime\",\n                },\n            },\n            metadata: {\n                serializedName: \"metadata\",\n                type: {\n                    name: \"Dictionary\",\n                    value: { type: { name: \"String\" } },\n                },\n            },\n            retentionPolicy: {\n                serializedName: \"retentionPolicy\",\n                type: {\n                    name: \"Composite\",\n                    className: \"ChatRetentionPolicy\",\n                },\n            },\n        },\n    },\n};\nexport const ChatThreadsItemCollection = {\n    type: {\n        name: \"Composite\",\n        className: \"ChatThreadsItemCollection\",\n        modelProperties: {\n            value: {\n                serializedName: \"value\",\n                required: true,\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"ChatThreadItem\",\n                        },\n                    },\n                },\n            },\n            nextLink: {\n                serializedName: \"nextLink\",\n                readOnly: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n        },\n    },\n};\nexport const ChatThreadItem = {\n    type: {\n        name: \"Composite\",\n        className: \"ChatThreadItem\",\n        modelProperties: {\n            id: {\n                serializedName: \"id\",\n                required: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n            topic: {\n                serializedName: \"topic\",\n                required: true,\n                type: {\n                    name: \"String\",\n                },\n            },\n            deletedOn: {\n                serializedName: \"deletedOn\",\n                type: {\n                    name: \"DateTime\",\n                },\n            },\n            lastMessageReceivedOn: {\n                serializedName: \"lastMessageReceivedOn\",\n                readOnly: true,\n                type: {\n                    name: \"DateTime\",\n                },\n            },\n        },\n    },\n};\nexport const UpdateChatThreadRequest = {\n    type: {\n        name: \"Composite\",\n        className: \"UpdateChatThreadRequest\",\n        modelProperties: {\n            topic: {\n                serializedName: \"topic\",\n                type: {\n                    name: \"String\",\n                },\n            },\n            metadata: {\n                serializedName: \"metadata\",\n                type: {\n                    name: \"Dictionary\",\n                    value: { type: { name: \"String\" } },\n                },\n            },\n            retentionPolicy: {\n                serializedName: \"retentionPolicy\",\n                type: {\n                    name: \"Composite\",\n                    className: \"ChatRetentionPolicy\",\n                },\n            },\n        },\n    },\n};\nexport const SendTypingNotificationRequest = {\n    type: {\n        name: \"Composite\",\n        className: \"SendTypingNotificationRequest\",\n        modelProperties: {\n            senderDisplayName: {\n                serializedName: \"senderDisplayName\",\n                type: {\n                    name: \"String\",\n                },\n            },\n        },\n    },\n};\nexport const ThreadCreationDateRetentionPolicy = {\n    serializedName: \"threadCreationDate\",\n    type: {\n        name: \"Composite\",\n        className: \"ThreadCreationDateRetentionPolicy\",\n        uberParent: \"ChatRetentionPolicy\",\n        polymorphicDiscriminator: ChatRetentionPolicy.type.polymorphicDiscriminator,\n        modelProperties: Object.assign(Object.assign({}, ChatRetentionPolicy.type.modelProperties), { deleteThreadAfterDays: {\n                serializedName: \"deleteThreadAfterDays\",\n                required: true,\n                type: {\n                    name: \"Number\",\n                },\n            } }),\n    },\n};\nexport const NoneRetentionPolicy = {\n    serializedName: \"none\",\n    type: {\n        name: \"Composite\",\n        className: \"NoneRetentionPolicy\",\n        uberParent: \"ChatRetentionPolicy\",\n        polymorphicDiscriminator: ChatRetentionPolicy.type.polymorphicDiscriminator,\n        modelProperties: Object.assign({}, ChatRetentionPolicy.type.modelProperties),\n    },\n};\nexport let discriminators = {\n    ChatRetentionPolicy: ChatRetentionPolicy,\n    \"ChatRetentionPolicy.threadCreationDate\": ThreadCreationDateRetentionPolicy,\n    \"ChatRetentionPolicy.none\": NoneRetentionPolicy,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _asyncToGenerator from \"D:/Project/github-teams/teams-app-new/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/// <reference lib=\"dom\" />\nimport { encodeBase64, encodeUTF8, encodeUTF8fromBase64 } from \"./encodeUtils.browser.js\";\nconst subtleCrypto = globalThis.crypto.subtle;\nexport const shaHash = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (content) {\n    const data = encodeUTF8(content);\n    const hash = yield subtleCrypto.digest(\"SHA-256\", data);\n    return encodeBase64(hash);\n  });\n  return function shaHash(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport const shaHMAC = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator(function* (secret, content) {\n    const importParams = {\n      name: \"HMAC\",\n      hash: {\n        name: \"SHA-256\"\n      }\n    };\n    const encodedMessage = encodeUTF8(content);\n    const encodedKey = encodeUTF8fromBase64(secret);\n    const cryptoKey = yield subtleCrypto.importKey(\"raw\", encodedKey, importParams, false, [\"sign\"]);\n    const signature = yield subtleCrypto.sign(importParams, cryptoKey, encodedMessage);\n    return encodeBase64(signature);\n  });\n  return function shaHMAC(_x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["encodeBase64","encodeUTF8","encodeUTF8fromBase64","subtleCrypto","globalThis","crypto","subtle","shaHash","_ref","_asyncToGenerator","content","data","hash","digest","_x","apply","arguments","shaHMAC","_ref2","secret","importParams","name","encodedMessage","encodedKey","cryptoKey","importKey","signature","sign","_x2","_x3"],"sources":["D:/Project/github-teams/teams-app-new/node_modules/@azure/communication-common/dist/browser/credential/cryptoUtils.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/// <reference lib=\"dom\" />\nimport { encodeBase64, encodeUTF8, encodeUTF8fromBase64 } from \"./encodeUtils.browser.js\";\nconst subtleCrypto = globalThis.crypto.subtle;\nexport const shaHash = async (content) => {\n    const data = encodeUTF8(content);\n    const hash = await subtleCrypto.digest(\"SHA-256\", data);\n    return encodeBase64(hash);\n};\nexport const shaHMAC = async (secret, content) => {\n    const importParams = { name: \"HMAC\", hash: { name: \"SHA-256\" } };\n    const encodedMessage = encodeUTF8(content);\n    const encodedKey = encodeUTF8fromBase64(secret);\n    const cryptoKey = await subtleCrypto.importKey(\"raw\", encodedKey, importParams, false, [\"sign\"]);\n    const signature = await subtleCrypto.sign(importParams, cryptoKey, encodedMessage);\n    return encodeBase64(signature);\n};\n"],"mappings":";AAAA;AACA;AACA;AACA,SAASA,YAAY,EAAEC,UAAU,EAAEC,oBAAoB,QAAQ,0BAA0B;AACzF,MAAMC,YAAY,GAAGC,UAAU,CAACC,MAAM,CAACC,MAAM;AAC7C,OAAO,MAAMC,OAAO;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAOC,OAAO,EAAK;IACtC,MAAMC,IAAI,GAAGV,UAAU,CAACS,OAAO,CAAC;IAChC,MAAME,IAAI,SAAST,YAAY,CAACU,MAAM,CAAC,SAAS,EAAEF,IAAI,CAAC;IACvD,OAAOX,YAAY,CAACY,IAAI,CAAC;EAC7B,CAAC;EAAA,gBAJYL,OAAOA,CAAAO,EAAA;IAAA,OAAAN,IAAA,CAAAO,KAAA,OAAAC,SAAA;EAAA;AAAA,GAInB;AACD,OAAO,MAAMC,OAAO;EAAA,IAAAC,KAAA,GAAAT,iBAAA,CAAG,WAAOU,MAAM,EAAET,OAAO,EAAK;IAC9C,MAAMU,YAAY,GAAG;MAAEC,IAAI,EAAE,MAAM;MAAET,IAAI,EAAE;QAAES,IAAI,EAAE;MAAU;IAAE,CAAC;IAChE,MAAMC,cAAc,GAAGrB,UAAU,CAACS,OAAO,CAAC;IAC1C,MAAMa,UAAU,GAAGrB,oBAAoB,CAACiB,MAAM,CAAC;IAC/C,MAAMK,SAAS,SAASrB,YAAY,CAACsB,SAAS,CAAC,KAAK,EAAEF,UAAU,EAAEH,YAAY,EAAE,KAAK,EAAE,CAAC,MAAM,CAAC,CAAC;IAChG,MAAMM,SAAS,SAASvB,YAAY,CAACwB,IAAI,CAACP,YAAY,EAAEI,SAAS,EAAEF,cAAc,CAAC;IAClF,OAAOtB,YAAY,CAAC0B,SAAS,CAAC;EAClC,CAAC;EAAA,gBAPYT,OAAOA,CAAAW,GAAA,EAAAC,GAAA;IAAA,OAAAX,KAAA,CAAAH,KAAA,OAAAC,SAAA;EAAA;AAAA,GAOnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
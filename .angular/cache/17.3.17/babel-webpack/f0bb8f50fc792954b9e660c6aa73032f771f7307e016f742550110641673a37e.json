{"ast":null,"code":"import { sendAndHandleSdkError as n } from \"../internal/communication.js\";\nimport { ensureInitialized as t } from \"../internal/internalAPIs.js\";\nimport { getApiVersionTag as e } from \"../internal/telemetry.js\";\nimport { callCallbackWithErrorOrResultOrNullFromPromiseAndReturnPromise as o } from \"../internal/utils.js\";\nimport { FrameContexts as r, errorNotSupportedOnPlatform as i } from \"./constants.js\";\nimport { runtime as m } from \"./runtime.js\";\nfunction p(p, a) {\n  let c,\n    u,\n    f = \"\";\n  \"function\" == typeof p ? (c = p, u = a, f = e(\"v1\", \"monetization.openPurchaseExperience\")) : (u = p, f = e(\"v2\", \"monetization.openPurchaseExperience\"));\n  return t(m, r.content), o(() => new Promise(t => {\n    if (!s()) throw i;\n    t(n(f, \"monetization.openPurchaseExperience\", u));\n  }), c);\n}\nfunction s() {\n  return !(!t(m) || !m.supports.monetization);\n}\nexport { s as isSupported, p as openPurchaseExperience };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}